import{_ as n,c as s,o as a,a as t}from"./app.fa011131.js";const g='{"title":"JS\u5F02\u6B65\u7F16\u7A0B\u5B9E\u4F8B\u7406\u89E3","description":"","frontmatter":{},"headers":[{"level":3,"title":"await","slug":"await"}],"relativePath":"FE-Language/ES/async-4-js-callback-promise-generator-async.md"}',p={},o=t(`<h1 id="js\u5F02\u6B65\u7F16\u7A0B\u5B9E\u4F8B\u7406\u89E3" tabindex="-1">JS\u5F02\u6B65\u7F16\u7A0B\u5B9E\u4F8B\u7406\u89E3 <a class="header-anchor" href="#js\u5F02\u6B65\u7F16\u7A0B\u5B9E\u4F8B\u7406\u89E3" aria-hidden="true">#</a></h1><p>\u56DE\u987EJS\u5F02\u6B65\u7F16\u7A0B\u65B9\u6CD5\u7684\u53D1\u5C55\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u79CD\u65B9\u5F0F\uFF1A</p><ol><li>Callback</li><li>Promise</li><li>Generator</li><li>Async</li></ol><h4 id="\u9700\u6C42" tabindex="-1">\u9700\u6C42 <a class="header-anchor" href="#\u9700\u6C42" aria-hidden="true">#</a></h4><p>\u663E\u793A\u8D2D\u7269\u8F66\u5546\u54C1\u5217\u8868\u7684\u9875\u9762\uFF0C\u7528\u6237\u53EF\u4EE5\u52FE\u9009\u60F3\u8981\u5220\u9664\u5546\u54C1\uFF08\u5355\u9009\u6216\u591A\u9009\uFF09\uFF0C\u70B9\u51FB\u786E\u8BA4\u5220\u9664\u6309\u94AE\u540E\uFF0C\u5C06\u5DF2\u52FE\u9009\u7684\u5546\u54C1\u6E05\u9664\u8D2D\u7269\u8F66\uFF0C\u9875\u9762\u663E\u793A\u5269\u4F59\u5546\u54C1\u3002</p><p>\u4E3A\u4E86\u4FBF\u4E8E\u672C\u6587\u5185\u5BB9\u9610\u8FF0\uFF0C\u5047\u8BBE\u540E\u7AEF\u6CA1\u6709\u63D0\u4F9B\u4E00\u4E2A\u6279\u91CF\u5220\u9664\u5546\u54C1\u7684\u63A5\u53E3\uFF0C\u6240\u4EE5\u5BF9\u7528\u6237\u9009\u62E9\u7684\u5546\u54C1\u5217\u8868\uFF0C\u9700\u8981\u9010\u4E2A\u8C03\u7528\u5220\u9664\u63A5\u53E3\u3002</p><p>\u7528\u4E00\u4E2A\u5B9A\u65F6\u5668\u4EE3\u8868\u4E00\u6B21\u63A5\u53E3\u8BF7\u6C42\u3002\u90A3\u601D\u8DEF\u5C31\u662F\u904D\u5386\u5B58\u653E\u7528\u6237\u5DF2\u9009\u62E9\u5546\u54C1\u7684id\u6570\u7EC4\uFF0C\u9010\u4E2A\u53D1\u8D77\u5220\u9664\u8BF7\u6C42del\uFF0C\u5F85\u5168\u90E8\u5220\u9664\u5B8C\u6210\u540E\uFF0C\u8C03\u7528\u83B7\u53D6\u8D2D\u7269\u8F66\u5546\u54C1\u5217\u8868\u7684\u63A5\u53E3get</p><h4 id="\u5B9E\u73B0" tabindex="-1">\u5B9E\u73B0 <a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">let</span> ids <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// \u5047\u8BBE\u5DF2\u9009\u62E9\u4E09\u4E2A\u5546\u54C1</span>
<span class="token keyword">let</span> len <span class="token operator">=</span> ids<span class="token punctuation">.</span>length
<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">let</span> start <span class="token comment">// \u4FBF\u4E8E\u540E\u9762\u8BA1\u7B97\u6267\u884C\u65F6\u95F4</span>
</code></pre></div><h4 id="_1-callback" tabindex="-1">1. <strong>callback</strong> <a class="header-anchor" href="#_1-callback" aria-hidden="true">#</a></h4><p>\u4F20\u7EDF\u5E38\u89C4\u7684\u5199\u6CD5\uFF0C\u5982\u679C\u662F\u591A\u4E2A\u7EE7\u884C\u4EFB\u52A1\u5C31\u4F1A\u9677\u5165\u56DE\u8C03\u5730\u72F1\u3002\u6BD4\u5982\u6B64\u4F8B\u4E2D<code>get</code>\u4F5C\u4E3A<code>del</code>\u7684\u56DE\u8C03\u51FD\u6570</p><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">del</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
        count<span class="token operator">++</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">confirmDel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>id <span class="token keyword">of</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">del</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> get<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">done:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">confirmDel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u6CE8\u610F\u89C2\u5BDF\u548C\u5BF9\u6BD4done\u7684\u6253\u5370\u987A\u5E8F\u548Cget\u5B8C\u6210\u65F6\u95F4\u3002 setTimeout\u662F\u5F02\u6B65\u6267\u884C\u7684\uFF0C\u6CA1\u6709\u963B\u585E\u4E3B\u6D41\u7A0B\u7684\u6267\u884C\uFF0C\u6240\u4EE5done\u6700\u5148\u6253\u5370\u3002 \u4E09\u4E2Adel\u4EFB\u52A1\u662F\u5E76\u884C\u7684\uFF0C\u52A0\u4E0A\u4E00\u4E2A\u56DE\u8C03\u6267\u884C\u65F6\u95F4\uFF0C\u6240\u4EE5\u6574\u4E2A\u70B9\u51FB\u5220\u9664\u6309\u94AE\u4E8B\u4EF6\u8017\u65F62\u79D2\u5DE6\u53F3</p><div class="language-js"><pre><code><span class="token literal-property property">done</span><span class="token operator">:</span>1ms
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token literal-property property">get</span><span class="token operator">:</span>2007ms
</code></pre></div><h4 id="_2-promise" tabindex="-1">2. Promise <a class="header-anchor" href="#_2-promise" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">getP</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">delP</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
            count<span class="token operator">++</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">confirmDelP</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>id <span class="token keyword">of</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">delP</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> getP<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">done:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">confirmDelP</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5355\u7EAF\u5E38\u7528Promise\u5199\u6CD5\uFF0C\u770B\u4E0A\u53BB\u7ED3\u6784\u8DDF\u56DE\u8C03\u5199\u6CD5\u4E00\u6837\uFF0C\u800C\u4E14\u8FD0\u884C\u65F6\u95F4\u4E5F\u4E00\u6837\u3002</p><div class="language-js"><pre><code><span class="token literal-property property">done</span><span class="token operator">:</span>2ms
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token literal-property property">get</span><span class="token operator">:</span>2007ms
</code></pre></div><p>\u4F46\u662F\uFF0C\u5982\u679C\u4F7F\u7528Promise.all\u65B9\u6CD5\uFF0C\u5C31\u80FD\u5F88\u597D\u5C06\u5E76\u53D1\u4EFB\u52A1\uFF08\u4E09\u4E2Adel)\u548C\u7EE7\u53D1\u4EFB\u52A1\uFF08get)\u533A\u5206\u5F00\u4E86\uFF0C\u5C31\u662Fget\u4E0D\u7528\u5D4C\u5165\u56DE\u8C03\u4E2D\u4E86\u3002</p><h4 id="_3-promise-all" tabindex="-1">3. Promise.all <a class="header-anchor" href="#_3-promise-all" aria-hidden="true">#</a></h4><p>Promise\u5BF9\u8C61then / catch / all / race / finally\uFF0C\u4EE5\u53CAresolve / reject\u66F4\u591A\u5185\u5BB9\u8BF7\u53C2\u9605<code>MDN</code></p><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">delP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">getP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">confirmDelP_all</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> p_Arr <span class="token operator">=</span> ids<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token function">delP_1</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>

    Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>p_Arr<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getP_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">done:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">confirmDelP_all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5728\u8FD9\u91CC\uFF0C\u4EE3\u7801\u7684\u8BED\u4E49\u5C31\u5F88\u76F4\u89C2\u4E86\uFF0C\u5148\u5E76\u53D1\u4E09\u4E2A\u5220\u9664<code>del</code>\uFF0C\u5168\u90E8\u6210\u529F\u540E\u6267\u884C<code>get</code>\uFF0C<code>get</code>\u6210\u529F\u540E<code>done</code>\u3002 \u6CE8\u610F\u770B<code>done</code>\u7684\u6253\u5370\u987A\u5E8F</p><div class="language-js"><pre><code><span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token literal-property property">get</span><span class="token operator">:</span>2008ms
<span class="token literal-property property">done</span><span class="token operator">:</span>2010ms
</code></pre></div><h4 id="_4-generator" tabindex="-1">4. Generator <a class="header-anchor" href="#_4-generator" aria-hidden="true">#</a></h4><p><code>Generator</code>\u7C7B\u578B\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u51FD\u6570\uFF0C\u5B83\u62E5\u6709\u81EA\u5DF1\u72EC\u7279\u7684\u8BED\u6CD5\u548C\u65B9\u6CD5\u5C5E\u6027\u3002\u6BD4\u5982\u51FD\u6570\u540D\u524D\u52A0*\uFF0C\u914D\u5408yield \u8FD4\u56DE\u5F02\u6B65\u56DE\u8C03\u7ED3\u679C\uFF0C \u901A\u8FC7next \u4F20\u5165\u51FD\u6570\u3001next\u8FD4\u56DE\u7279\u6B8A\u7684\u5305\u542Bvalue\u548Cdone\u5C5E\u6027\u7684\u5BF9\u8C61\u7B49\u7B49\uFF0C\u5177\u4F53\u89C1<code>MDN</code></p><p><code>Generator</code>\u662F\u4E00\u79CD<strong>\u60F0\u6027\u6C42\u503C</strong>\u51FD\u6570\uFF0C\u6267\u884C\u4E00\u6B21next()\u624D\u5F00\u542F\u4E00\u6B21\u6267\u884C\uFF0C\u5230yield\u53C8\u4E2D\u65AD\uFF0C\u7B49\u5F85\u4E0B\u4E00\u6B21next()\u3002\u6240\u4EE5\u672C\u4EBA\u66F4\u559C\u6B22\u53EB\u5B83<strong>\u6B65\u8FDB\u51FD\u6570</strong>\uFF0C\u975E\u5E38\u9002\u5408\u6267\u884C\u7EE7\u53D1\u4EFB\u52A1</p><p>\u5047\u8BBE\u73B0\u5728\u6BCF\u4E00\u4E2A\u63A5\u53E3\u8BF7\u6C42\u90FD\u662F\u7EE7\u53D1\u4EFB\u52A1\uFF0C\u5C31\u662F\u8BF4\u53EA\u6709\u5F53\u4E0A\u4E00\u4E2A\u8BF7\u6C42\u6210\u529F\u540E\uFF0C\u624D\u5F00\u59CB\u4E0B\u4E00\u4E2A\u8BF7\u6C42\u3002\u5728\u5B9E\u9645\u7684\u573A\u666F\u4E2D\uFF0C\u901A\u5E38\u662F\u5F53\u524D\u8BF7\u6C42\u9700\u8981\u4F7F\u7528\u4E0A\u4E00\u4E2A\u8BF7\u6C42\u8FD4\u56DE\u7684\u7ED3\u679C\u6570\u636E\u3002\u6B64\u65F6\u4F7F\u7528<code>Generator</code>\u51FD\u6570\u662F\u6700\u597D\u7684\u65B9\u5F0F\u3002</p><div class="language-js"><pre><code><span class="token keyword">let</span> generator

<span class="token keyword">let</span> <span class="token function-variable function">getG</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">delG</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
        generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">confimrDelG</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>id <span class="token keyword">of</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span> <span class="token function">delG</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">yield</span> <span class="token function">getG</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">done:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

generator <span class="token operator">=</span> <span class="token function">confimrDelG</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F1A\u88AB\u963B\u585E\u5417\uFF1F&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u89C2\u5BDF\u6253\u5370\u7684\u65F6\u95F4\uFF0C\u56DB\u4E2A\u5F02\u6B65\u4EFB\u52A14\u79D2\u5DE6\u53F3\u3002 \u6CE8\u610F&quot;\u963B\u585E\u201C\u6587\u5B57\u6700\u5148\u6253\u5370</p><div class="language-js"><pre><code>\u4F1A\u88AB\u963B\u585E\u5417\uFF1F
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token literal-property property">get</span><span class="token operator">:</span>4009ms
<span class="token literal-property property">done</span><span class="token operator">:</span>4011ms
</code></pre></div><p>\u6211\u7406\u89E3<code>Generator</code>\u5C31\u662F\u4E00\u4E2A\u7528\u6765\u88C5\u8F7D\u5F02\u6B65\u7EE7\u53D1\u4EFB\u52A1\u7684\u5BB9\u5668\uFF0C\u4E0D\u963B\u585E\u5BB9\u5668\u5916\u90E8\u6D41\u7A0B\uFF0C\u4F46\u662F\u5BB9\u5668\u5185\u90E8\u4EFB\u52A1\u7528<code>yield</code>\u8BBE\u7F6E\u65AD\u70B9\uFF0C\u7528<code>next</code>\u6B65\u8FDB\u6267\u884C\uFF0C\u53EF\u4EE5\u901A\u8FC7next\u5411\u4E0B\u4E00\u6B65\u4EFB\u52A1\u4F20\u503C\uFF0C\u6216\u8005\u76F4\u63A5\u4F7F\u7528yield\u8FD4\u56DE\u7684\u4E0A\u4E00\u4EFB\u52A1\u7ED3\u679C\u3002</p><h4 id="_5-async-await" tabindex="-1">5. async / await <a class="header-anchor" href="#_5-async-await" aria-hidden="true">#</a></h4><h4 id="async-\u51FD\u6570" tabindex="-1"><code>async</code> \u51FD\u6570 <a class="header-anchor" href="#async-\u51FD\u6570" aria-hidden="true">#</a></h4><p>\u6211\u4EEC\u5148\u770BMDN\u4E0A\u5173\u4E8Easync function\u600E\u4E48\u8BF4\u7684\uFF1A</p><blockquote><p>When an async function is called, it returns a Promise. When the async function returns a value, the Promise will be resolved with the returned value. When the async function throws an exception or some value, the Promise will be rejected with the thrown value.</p></blockquote><p>\u4E5F\u5C31\u662F\u8BF4async\u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2APromise\u5BF9\u8C61\u3002</p><ul><li>\u5982\u679Casync\u51FD\u6570\u4E2D\u662Freturn\u4E00\u4E2A\u503C\uFF0C\u8FD9\u4E2A\u503C\u5C31\u662FPromise\u5BF9\u8C61\u4E2Dresolve\u7684\u503C\uFF1B</li><li>\u5982\u679Casync\u51FD\u6570\u4E2D\u662Fthrow\u4E00\u4E2A\u503C\uFF0C\u8FD9\u4E2A\u503C\u5C31\u662FPromise\u5BF9\u8C61\u4E2Dreject\u7684\u503C\u3002</li></ul><p>\u4F8B\u5B50\u663E\u793A\u4E0B\uFF0C\u6211\u4EEC\u5148\u7528<code>Promise</code>\u5199\u6CD5</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">imPromise</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">imPromise</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">imPromise</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u518D\u7528<code>Async</code>\u5199\u6CD5</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">imAsync</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> num <span class="token comment">// \u8FD9\u91CC\u76F8\u5F53\u4E8Eresolve(num)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> num <span class="token comment">// \u8FD9\u91CC\u76F8\u5F53\u4E8Ereject(num)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">imAsync</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u662Fcatch</span>
<span class="token function">imAsync</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u6240\u4EE5\u7406\u89E3<code>Async</code>\u4E3A<code>new Promise</code>\u7684\u8BED\u6CD5\u7CD6\u4E5F\u662F\u8FD9\u4E2A\u539F\u56E0\u3002\u4F46\u8981\u6CE8\u610F\u4E00\u70B9\u7684\u662F\u4E0A\u9762<code>imPromise</code>\u51FD\u6570\u548C<code>imAsync</code>\u51FD\u6570\u8C03\u7528\u8FD4\u56DE\u7684\u7ED3\u679C\u533A\u522B\u3002</p><blockquote><p><code>new Promise</code>\u751F\u6210\u7684\u662F\u4E00\u4E2A<code>pending</code>\u72B6\u6001\u7684<code>Promise</code>\u5BF9\u8C61\uFF0C\u800C<code>async</code>\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A<code>resolved</code>\u6216<code>rejected</code>\u72B6\u6001\u7684<code>Promise</code>\u5BF9\u8C61,\u5C31\u662F\u4E00\u4E2A\u5DF2\u7ECF\u7EC8\u7ED3\u72B6\u6001\u7684<code>promise</code>\u5BF9\u8C61\u3002\u7406\u89E3\u8FD9\u70B9\uFF0C\u5BF9\u4E0B\u9762\u7684<code>await</code>\u7406\u89E3\u5F88\u91CD\u8981\u3002</p></blockquote><div class="language-js"><pre><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token function">imPromise</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token comment">// Promise { pending }</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">imAsync</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// Promise { resolved }</span>
</code></pre></div><h3 id="await" tabindex="-1"><code>await</code> <a class="header-anchor" href="#await" aria-hidden="true">#</a></h3><p>\u518D\u6765\u770B\u770BMDN\u5BF9\u4E8Eawait\u662F\u600E\u4E48\u8BF4\u7684\uFF1A</p><blockquote><p>An async function can contain an await expression, that pauses the execution of the async function and watis for the passed Promise&#39;s resolution, and then resumes the async function&#39;s execution and returns the resolved value.</p></blockquote><p>await\u4F1A\u6682\u505C\u5F53\u524Dasync\u51FD\u6570\u7684\u6267\u884C\uFF0C\u7B49\u5F85\u540E\u9762\u7684Promise\u7684\u8BA1\u7B97\u7ED3\u679C\u8FD4\u56DE\u4EE5\u540E\u518D\u7EE7\u7EED\u6267\u884C\u5F53\u524D\u7684async\u51FD\u6570</p><ul><li><strong><code>await</code>\u7B49\u5F85\u4EC0\u4E48\uFF1F\uFF1F</strong></li></ul><p><strong>await\u7B49\u5F85\u4E00\u4E2APromise\u5BF9\u8C61\u4ECEpending\u72B6\u6001\u5230resoled\u6216rejected\u72B6\u6001\u7684\u8FD9\u6BB5\u65F6\u95F4\u3002</strong> \u6240\u4EE5\u5982\u679C\u8981\u5B9E\u73B0\u4E2D\u65AD\u6B65\u8FDB\u6267\u884C\u7684\u6548\u679C\uFF0C<code>await</code>\u540E\u9762\u63A5\u7684\u5FC5\u987B\u662F\u4E00\u4E2A<code>pedding</code>\u72B6\u6001\u7684<code>promise</code>\u5BF9\u8C61\uFF0C\u5176\u5B83\u72B6\u6001\u7684<code>promise</code>\u5BF9\u8C61\u6216\u975E<code>promise</code>\u5BF9\u8C61\u4E00\u6982\u4E0D\u7B49\u5F85\u3002 \u8FD9\u4E5F\u662F<code>await</code>\u548C<code>yield</code>\u7684\u533A\u522B\uFF08<code>yield</code>\u4E0D\u7BA1\u540E\u9762\u662F\u4EC0\u4E48\uFF0C\u6267\u884C\u5B8C\u7D27\u63A5\u7740\u7684\u8868\u8FBE\u5F0F\u5C31\u4E2D\u65AD\uFF09\u3002</p><h4 id="async-await-\u89E3\u51B3\u4E86\u4EC0\u4E48\u95EE\u9898\uFF1F" tabindex="-1">async / await \u89E3\u51B3\u4E86\u4EC0\u4E48\u95EE\u9898\uFF1F <a class="header-anchor" href="#async-await-\u89E3\u51B3\u4E86\u4EC0\u4E48\u95EE\u9898\uFF1F" aria-hidden="true">#</a></h4><p><code>Promise</code>\u89E3\u51B3<code>callback</code>\u5D4C\u5957\u5BFC\u81F4\u56DE\u8C03\u5730\u72F1\u7684\u95EE\u9898\uFF0C\u4F46\u5B9E\u9645\u4E0A\u5E76\u4E0D\u5F7B\u5E95\uFF0C\u8FD8\u662F\u5728<code>then</code>\u4E2D\u4F7F\u7528\u4E86\u56DE\u8C03\u51FD\u6570\u3002\u800C<code>async / await</code>\u4F7F\u5F97\u5F02\u6B65\u56DE\u8C03\u5728\u5199\u6CD5\u4E0A\u5B8C\u6210\u6CA1\u6709\uFF0C\u5C31\u50CF\u540C\u6B65\u5199\u6CD5\u4E00\u6837\u3002 \u770B\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-js"><pre><code><span class="token comment">// callback</span>
<span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token parameter">b<span class="token punctuation">,</span>c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span><span class="token parameter">c<span class="token punctuation">,</span>d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// promise</span>
<span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">a</span> <span class="token operator">=&gt;</span> <span class="token function">p1</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">b</span> <span class="token operator">=&gt;</span> <span class="token function">p1</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> <span class="token function">p1</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">d</span> <span class="token operator">=&gt;</span> <span class="token function">p1</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// async / await</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">A</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">A</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">A</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> e <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">A</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="async-await-\u5B9E\u73B0\u7EE7\u53D1\u4EFB\u52A1" tabindex="-1"><code>async / await</code> \u5B9E\u73B0\u7EE7\u53D1\u4EFB\u52A1 <a class="header-anchor" href="#async-await-\u5B9E\u73B0\u7EE7\u53D1\u4EFB\u52A1" aria-hidden="true">#</a></h4><p>\u6211\u4EEC\u7528<code>async / await</code>\u6539\u5199\u4E0A\u9762<code>Generator</code>\u7684\u4F8B\u5B50</p><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">delP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">getP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">confimrDelAsync</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>id <span class="token keyword">of</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token function">delP_1</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">await</span> <span class="token function">getP_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">done:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">confimrDelAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u88AB\u963B\u585E\u4E86\u5417\uFF1F&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u6253\u5370\u7ED3\u679C\u57FA\u672C\u8DDF<code>generator</code>\u4E00\u6837\u3002\u4F46\u5728\u8BED\u4E49\u4E0A\u66F4\u660E\u786E\u3002</p><div class="language-js"><pre><code>\u88AB\u963B\u585E\u4E86\u5417\uFF1F
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token literal-property property">get</span><span class="token operator">:</span>4014ms
<span class="token literal-property property">done</span><span class="token operator">:</span>4016ms
</code></pre></div><h4 id="async-await-\u5B9E\u73B0\u5E76\u53D1\u4EFB\u52A1" tabindex="-1"><code>async / await</code> \u5B9E\u73B0\u5E76\u53D1\u4EFB\u52A1 <a class="header-anchor" href="#async-await-\u5B9E\u73B0\u5E76\u53D1\u4EFB\u52A1" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">delP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">getP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">confimrDelAsync</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>id <span class="token keyword">of</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token function">delP_1</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">await</span> <span class="token function">getP_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">done:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">confimrDelAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u88AB\u963B\u585E\u4E86\u5417\uFF1F&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0D\u8FD4\u56DE<code>Promise</code>\u5BF9\u8C61\uFF0C\u6216\u8005\u4F7F<code>promise</code>\u5BF9\u8C61\u5904\u7406<code>resoled</code>\u72B6\u6001\uFF0C\u5C31\u53EF\u4EE5\u4E0D\u6267\u884C\u7B49\u5F85\u3002\u4F46\u8FD9\u6837\u7684\u5199\u6CD5\u8DDF\u76F4\u63A5\u7528\u540C\u6B65\u65B9\u5F0F\u5199\u4E00\u6837\uFF0C\u6240\u4EE5\u5E76\u4E0D\u63A8\u8350\uFF0C\u663E\u5F97\u591A\u6B64\u4E00\u4E3E\u3002</p><div class="language-js"><pre><code><span class="token literal-property property">done</span><span class="token operator">:</span>4ms
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token literal-property property">get</span><span class="token operator">:</span>1009ms
</code></pre></div><h4 id="async-await-\u5B9E\u73B0\u5E76\u53D1\u548C\u7EE7\u53D1\u7684\u6DF7\u5408\u4EFB\u52A1" tabindex="-1"><code>async / await</code> \u5B9E\u73B0\u5E76\u53D1\u548C\u7EE7\u53D1\u7684\u6DF7\u5408\u4EFB\u52A1 <a class="header-anchor" href="#async-await-\u5B9E\u73B0\u5E76\u53D1\u548C\u7EE7\u53D1\u7684\u6DF7\u5408\u4EFB\u52A1" aria-hidden="true">#</a></h4><p>\u5982\u679C\u4E8B\u4EF6\u51FD\u6570\u4E2D\u5E76\u53D1\u4EFB\u52A1\u548C\u7EE7\u53D1\u4EFB\u52A1\u90FD\u6709\uFF0C\u6B64\u65F6\u4F7F\u7528<code>async / await</code>\u624D\u662F\u6700\u597D\u7684\u89E3\u51B3\u65B9\u5F0F\u3002\u5176\u4E2D\u7684\u5E76\u53D1\u4EFB\u52A1\u7528<code>promise.all</code>\u5B9E\u73B0\uFF0C\u56E0\u4E3A\u5B83\u8FD4\u56DE\u7684\u6B63\u662F<code>await</code>\u53EF\u7528\u7684<code>pending</code>\u72B6\u6001\u7684<code>Promise</code>\u5BF9\u8C61\u3002</p><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">delP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">getP_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">confimrDelAsync_all</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">let</span> p_Arr <span class="token operator">=</span> ids<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token function">delP_1</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>p_Arr<span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">getP_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">done:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">confimrDelAsync_all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u88AB\u963B\u585E\u4E86\u5417\uFF1F&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u89C2\u5BDF\u65F6\u95F4\u662F\u7EE7\u53D1\u4EFB\u52A1\u7684\u4E00\u534A\u3002\u4E14\u4E0D\u963B\u585E\u4E3B\u6D41\u7A0B\u3002</p><div class="language-js"><pre><code>\u88AB\u963B\u585E\u4E86\u5417\uFF1F
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token literal-property property">get</span><span class="token operator">:</span>2009ms
<span class="token literal-property property">done</span><span class="token operator">:</span>2010ms
</code></pre></div><blockquote><p><strong>\u6240\u4EE5\u8BF4<code>async</code>\u662F<code>promise</code>\u7684\u8BED\u6CD5\u7CD6\uFF0C\u4F46\u662F\u51FD\u6570\u8FD4\u56DE\u7684<code>promise</code>\u7684\u72B6\u6001\u662F\u4E0D\u4E00\u6837\u7684\u3002\u8BF4<code>await</code>\u662F<code>yield</code>\u7684\u8BED\u6CD5\u7CD6\uFF0C\u4F46\u662F<code>await</code>\u53EA\u80FD\u63A5\u53D7<code>pending</code>\u72B6\u6001\u7684<code>promise</code>\u5BF9\u8C61</strong></p></blockquote><blockquote><p><code>async</code>\u53EF\u4EE5\u5355\u72EC\u4F7F\u7528\uFF0C<code>await</code>\u4E0D\u80FD\u5355\u72EC\u4F7F\u7528\uFF0C\u53EA\u80FD\u5728<code>async</code>\u51FD\u6570\u4F53\u5185\u4F7F\u7528</p></blockquote><p>\u6240\u4EE5\u9488\u5BF9\u5F00\u5934\u7684\u9700\u6C42\uFF1A</p><blockquote><p>\u663E\u793A\u8D2D\u7269\u8F66\u5546\u54C1\u5217\u8868\u7684\u9875\u9762\uFF0C\u7528\u6237\u53EF\u4EE5\u52FE\u9009\u60F3\u8981\u5220\u9664\u5546\u54C1\uFF08\u5355\u9009\u6216\u591A\u9009\uFF09\uFF0C\u70B9\u51FB\u786E\u8BA4\u5220\u9664\u6309\u94AE\u540E\uFF0C\u5C06\u5DF2\u52FE\u9009\u7684\u5546\u54C1\u6E05\u9664\u8D2D\u7269\u8F66\uFF0C\u9875\u9762\u663E\u793A\u5269\u4F59\u5546\u54C1\u3002</p></blockquote><p>\u6700\u597D\u7684\u89E3\u51B3\u65B9\u6848\u662F\uFF1A</p><blockquote><p><code>promise.all</code> \u4E0E <code>async / await</code>\u7ED3\u5408</p></blockquote><p>\u5176\u6B21\u662F\uFF1A</p><blockquote><p><code>promise.all</code></p></blockquote><p>\u5728\u5B9E\u9645\u9879\u76EE\u4E2D\u8FD8\u5E94\u8BE5\u52A0\u4E0A\u6355\u83B7\u9519\u8BEF\u7684\u4EE3\u7801\u3002 \u5728<code>async / await</code>\u4E2D\u7ED3\u5408<code>try...catch</code> \u5728<code>promise</code>\u4E2D\uFF0C\u56E0\u4E3A\u9519\u8BEF\u5177\u6709\u5192\u6CE1\u4EE5\u6027\u8D28\uFF0C\u6240\u4EE5\u5728\u7ED3\u5C3E\u52A0\u4E0A<code>.catch</code>\u5373\u53EF\u3002</p><h4 id="\u5C3E\u58F0" tabindex="-1">\u5C3E\u58F0 <a class="header-anchor" href="#\u5C3E\u58F0" aria-hidden="true">#</a></h4><p>\u6587\u7AE0\u53EA\u662F\u81EA\u5DF1\u7684\u4E00\u4E2A\u5E76\u53D1\u548C\u7EE7\u53D1\u6DF7\u5408\u9700\u6C42\u5F15\u53D1\u7684\u77E5\u8BC6\u603B\u7ED3\u3002\u4F46JS\u7F16\u7A0B\u8FD8\u6709\u5F88\u591A\u5185\u5BB9\uFF0C\u5305\u62EC\u5F02\u6B65\u4E8B\u4EF6\u3001\u4E8B\u4EF6\u5FAA\u73AF\uFF08\u6D4F\u89C8\u5668\u548Cnodejs\u533A\u522B\uFF09\u3001\u5F02\u6B65\u4EFB\u52A1\u9519\u8BEF\u7684\u6355\u83B7\u3001promise/generator/async\u5177\u4F53API\u7EC6\u8282\u7B49\u3002\u8FD8\u9700\u8981\u7EE7\u7EED\u5B66\u4E60\u3002</p><h4 id="\u53C2\u8003\u94FE\u63A5" tabindex="-1">\u53C2\u8003\u94FE\u63A5 <a class="header-anchor" href="#\u53C2\u8003\u94FE\u63A5" aria-hidden="true">#</a></h4><p><a href="https://blog.csdn.net/ken_ding/article/details/81201248" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/ken_ding/article/details/81201248</a><a href="https://segmentfault.com/a/1190000009070711?from=timeline&amp;isappinstalled=0#articleHeader5" target="_blank" rel="noopener noreferrer">https://segmentfault.com/a/1190000009070711?from=timeline&amp;isappinstalled=0#articleHeader5</a> \u300AJavascript ES6 \u51FD\u6570\u5F0F\u7F16\u7A0B\u5165\u95E8\u6307\u5357\u300B \u7B2C10\u7AE0 \u4F7F\u7528Generator</p>`,83),e=[o];function c(u,l,i,k,r,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{g as __pageData,f as default};
