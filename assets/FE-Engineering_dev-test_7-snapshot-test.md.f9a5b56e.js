import{_ as n,c as s,o as a,a as t}from"./app.fa011131.js";const g='{"title":"\u5FEB\u7167\u6D4B\u8BD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"What: \u4EC0\u4E48\u662F\u5FEB\u7167\u6D4B\u8BD5","slug":"what-\u4EC0\u4E48\u662F\u5FEB\u7167\u6D4B\u8BD5"},{"level":2,"title":"Why\uFF1A\u4E3A\u4EC0\u4E48\u9700\u8981\u5FEB\u7167\u6D4B\u8BD5","slug":"why\uFF1A\u4E3A\u4EC0\u4E48\u9700\u8981\u5FEB\u7167\u6D4B\u8BD5"},{"level":2,"title":"How\uFF1A\u600E\u4E48\u4F7F\u7528","slug":"how\uFF1A\u600E\u4E48\u4F7F\u7528"},{"level":3,"title":"\u751F\u6210\u5FEB\u7167 toMatchSnapshot","slug":"\u751F\u6210\u5FEB\u7167-tomatchsnapshot"},{"level":3,"title":"\u66F4\u65B0\u5FEB\u7167 --updateSnapshot","slug":"\u66F4\u65B0\u5FEB\u7167-updatesnapshot"},{"level":3,"title":"\u9759\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5","slug":"\u9759\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5"},{"level":3,"title":"\u52A8\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5","slug":"\u52A8\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5"},{"level":2,"title":"\u5FEB\u7167\u6D4B\u8BD5\u6700\u4F73\u5B9E\u8DF5","slug":"\u5FEB\u7167\u6D4B\u8BD5\u6700\u4F73\u5B9E\u8DF5"},{"level":2,"title":"\u6269\u5C55\uFF1A\u52A8\u6001\u5339\u914D expect.any","slug":"\u6269\u5C55\uFF1A\u52A8\u6001\u5339\u914D-expect-any"},{"level":2,"title":"\u6269\u5C55\uFF1A\u5185\u8054\u5FEB\u7167 toMatchInlineSnapshot","slug":"\u6269\u5C55\uFF1A\u5185\u8054\u5FEB\u7167-tomatchinlinesnapshot"},{"level":2,"title":"toBe(value) / toEqual(value) / toContainEqual(item) / toStrictEqual(value)","slug":"tobe-value-toequal-value-tocontainequal-item-tostrictequal-value"},{"level":3,"title":"toBe(value)","slug":"tobe-value"},{"level":3,"title":"toEqual(value)","slug":"toequal-value"},{"level":3,"title":"toStrictEqual(value)","slug":"tostrictequal-value"},{"level":3,"title":"toContainEqual(item)","slug":"tocontainequal-item"},{"level":3,"title":"toMatchObject(object)","slug":"tomatchobject-object"}],"relativePath":"FE-Engineering/dev-test/7-snapshot-test.md"}',p={},o=t(`<h1 id="\u5FEB\u7167\u6D4B\u8BD5" tabindex="-1">\u5FEB\u7167\u6D4B\u8BD5 <a class="header-anchor" href="#\u5FEB\u7167\u6D4B\u8BD5" aria-hidden="true">#</a></h1><p>WWHD</p><h2 id="what-\u4EC0\u4E48\u662F\u5FEB\u7167\u6D4B\u8BD5" tabindex="-1">What: \u4EC0\u4E48\u662F\u5FEB\u7167\u6D4B\u8BD5 <a class="header-anchor" href="#what-\u4EC0\u4E48\u662F\u5FEB\u7167\u6D4B\u8BD5" aria-hidden="true">#</a></h2><p>\u5FEB\u7167\u6D4B\u8BD5\u7C7B\u4F3C\u4E8E\u201C\u627E\u4E0D\u540C\u201D\u7684\u6E38\u620F\u3002\u5FEB\u7167\u6D4B\u8BD5\u4F1A\u7ED9\u8FD0\u884C\u4E2D\u7684\u5E94\u7528\u7A0B\u5E8F\u62CD\u4E00\u5F20\u56FE\u7247\uFF0C\u5E76\u5C06\u5176\u4E0E\u4EE5\u524D\u4FDD\u5B58\u7684\u56FE\u7247\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5982\u679C\u56FE\u50CF\u6709\u4EC0\u4E48\u4E0D\u540C\uFF0C\u5219\u6D4B\u8BD5\u5931\u8D25\u3002</p><p>\u4F20\u7EDF\u7684\u5FEB\u7167\u6D4B\u8BD5\uFF0C\u901A\u5E38\u4E5F\u53EB\u505A\u89C6\u89C9\u56DE\u5F52\u6D4B\u8BD5\uFF0C\u662F\u5229\u7528\u5DE5\u5177\u83B7\u53D6\u6E32\u67D3\u9875\u9762\u7684\u5C4F\u5E55\u622A\u56FE\uFF0C\u5E76\u4E0E\u4E4B\u524D\u7684\u5C4F\u5E55\u622A\u56FE\u8FDB\u884C\u9010\u50CF\u7D20\u6BD4\u8F83\u3002</p><p>\u73B0\u4EE3\u7684 Snapshot \u5FEB\u7167\u6D4B\u8BD5\u53EF\u4EE5\u5BF9\u6D4B\u8BD5\u503C\u8FDB\u884C\u5E8F\u5217\u5316\uFF0C\u5B58\u50A8\u4E3A\u6587\u672C\u6587\u4EF6\uFF0C\u5E76\u4F7F\u7528 diff \u7B97\u6CD5\u8FDB\u884C\u6BD4\u8F83\u3002</p><p>jest \u7684\u63D0\u4F9B\u7684 Snapshot \u5FEB\u7167\u6D4B\u8BD5\u529F\u80FD\uFF0C\u57FA\u672C\u4E0A\u4F1A\u5BF9\u4EFB\u4F55\u53EF\u4EE5\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u7684 javascript \u503C\u8FDB\u884C\u5E8F\u5217\u5316\u4FDD\u5B58\u3002</p><h2 id="why\uFF1A\u4E3A\u4EC0\u4E48\u9700\u8981\u5FEB\u7167\u6D4B\u8BD5" tabindex="-1">Why\uFF1A\u4E3A\u4EC0\u4E48\u9700\u8981\u5FEB\u7167\u6D4B\u8BD5 <a class="header-anchor" href="#why\uFF1A\u4E3A\u4EC0\u4E48\u9700\u8981\u5FEB\u7167\u6D4B\u8BD5" aria-hidden="true">#</a></h2><p>\u5FEB\u7167\u6D4B\u8BD5\u5E38\u7528\u4E8E\u6D4B\u8BD5\u7EC4\u4EF6\u7684 UI \u6548\u679C\uFF0C\u5BF9\u754C\u9762\u8FDB\u884C\u56DE\u5F52\u6D4B\u8BD5\u65F6\u975E\u5E38\u6709\u6548\u3002</p><blockquote><p>\u56E0\u4E3A\u73B0\u4EE3 Snapshot \u4F7F\u7528\u5E8F\u5217\u5316\u503C\u8FDB\u884C\u6BD4\u8F83\uFF0C\u6240\u4EE5\u4E5F\u4E0D\u5C40\u9650\u4E8E UI \u89C6\u56FE\u7684\u5FEB\u7167\u6D4B\u8BD5\uFF0C\u4E5F\u53EF\u7528\u4E8E log \u65E5\u5FD7\u6216\u9519\u8BEF\u6D88\u606F\u8BB0\u5F55\u4E4B\u7C7B\u7684\u529F\u80FD\u3002</p></blockquote><h2 id="how\uFF1A\u600E\u4E48\u4F7F\u7528" tabindex="-1">How\uFF1A\u600E\u4E48\u4F7F\u7528 <a class="header-anchor" href="#how\uFF1A\u600E\u4E48\u4F7F\u7528" aria-hidden="true">#</a></h2><h3 id="\u751F\u6210\u5FEB\u7167-tomatchsnapshot" tabindex="-1">\u751F\u6210\u5FEB\u7167 <code>toMatchSnapshot</code> <a class="header-anchor" href="#\u751F\u6210\u5FEB\u7167-tomatchsnapshot" aria-hidden="true">#</a></h3><p>jest \u63D0\u4F9B\u4E86 <code>toMatchSnapshot</code> \u5339\u914D\u5668\u6765\u751F\u6210\u5FEB\u7167\uFF0C\u5E76\u8FDB\u884C\u5FEB\u7167\u6BD4\u5BF9\u3002</p><p>\u4F60\u53EF\u4EE5\u4F20\u5165\u4EFB\u4F55\u4E00\u4E2A\u53EF\u88AB\u5E8F\u5217\u5316\u7684\u503C\u8FDB\u884C\u6D4B\u8BD5</p><div class="language-js"><pre><code><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tom&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>\u5F53\u7B2C\u4E00\u6B21\u8FD0\u884C\u5FEB\u7167\u6D4B\u8BD5\u65F6\uFF0C\u5B83\u4F1A\u5728\u4E0E\u6D4B\u8BD5\u6587\u4EF6\u540C\u7EA7\u76EE\u5F55\u4E2D\u521B\u5EFA\u4E00\u4E2A<code>__snapshots__</code>\u7684\u6587\u4EF6\u5939\u5B58\u653E\u8BE5\u76EE\u5F55\u4E0B\u7684\u6240\u6709\u5FEB\u7167\u6D4B\u8BD5\u751F\u6210\u7684\u5FEB\u7167\u6587\u4EF6\uFF0C\u5FEB\u7167\u6587\u4EF6\u4EE5 <code>.snap</code> \u4E3A\u6269\u5C55\u540D\u4FDD\u5B58\u3002</li><li>\u5F53\u4E0B\u4E00\u6B21\u8FD0\u884C\u5FEB\u7167\u6D4B\u8BD5\u65F6\uFF0C\u7A0B\u5E8F\u5C31\u4F1A\u5C06\u5F53\u524D <code>toMatchSnapshot()</code>\u751F\u6210\u7684\u5FEB\u7167\u4E0E\u4E4B\u524D\u5B58\u653E\u7684\u5FEB\u7167\u6587\u4EF6\u8FDB\u884C\u6BD4\u5BF9\uFF0C\u65E0\u5DEE\u5F02\u5219\u901A\u8FC7\uFF0C\u6709\u4E0D\u540C\u5219\u6D4B\u8BD5\u5931\u8D25\u3002</li></ul><div class="language-js"><pre><code><span class="token comment">// list.spec.js</span>
<span class="token keyword">const</span> List <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;li&gt;List Item&lt;/li&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render list item correctly&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u9996\u6B21\u8FD0\u884C\u540E\uFF0C\u751F\u6210\u4E00\u4E2A\u5FEB\u7167\u6587\u4EF6<code>list.spec.snap</code>\uFF0C\u5185\u5BB9\u5927\u6982\u50CF\u8FD9\u6837\uFF1A</p><div class="language-js"><pre><code>exports<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">render list item correctly</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
&lt;li&gt;
  List Item
&lt;/li&gt;
</span><span class="token template-punctuation string">\`</span></span>
</code></pre></div><h3 id="\u66F4\u65B0\u5FEB\u7167-updatesnapshot" tabindex="-1">\u66F4\u65B0\u5FEB\u7167 <code>--updateSnapshot</code> <a class="header-anchor" href="#\u66F4\u65B0\u5FEB\u7167-updatesnapshot" aria-hidden="true">#</a></h3><p>\u4E0B\u6B21\u518D\u6B21\u8FD0\u884C\u6D4B\u8BD5\u6587\u4EF6\u65F6\uFF0C\u5B83\u5C31\u4F1A\u7528\u65B0\u503C\u4E0E\u5DF2\u4FDD\u5B58\u7684\u6587\u4EF6\u503C\u8FDB\u884C\u6BD4\u8F83\u3002\u5982\u679C\u5B8C\u5168\u5339\u914D\uFF0C\u5219\u6D4B\u8BD5\u901A\u8FC7\u3002\u5982\u679C\u6709\u5DEE\u5F02\uFF0C\u5219\u6D4B\u8BD5\u5931\u8D25\uFF0C\u5E76\u663E\u793A\u5DEE\u5F02\u4FE1\u606F\u3002</p><div class="language-diff"><pre><code>Snapshot name \`render list item correctly\`

<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> Snapshot -1
</span><span class="token prefix deleted">-</span><span class="token line"> Received +1
</span></span>
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &lt;li&gt;
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   List Item
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   Not Item
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &lt;/li&gt;
</span></span></code></pre></div><p>\u6B64\u65F6\u5982\u679C\u786E\u5B9E\u662F\u9519\u8BEF\u95EE\u9898\u5BFC\u81F4\u7684\uFF0C\u53EF\u4EE5\u5230\u6E90\u7801\u8FDB\u884C\u4FEE\u6539\uFF0C\u5E76\u91CD\u65B0\u8FD0\u884C\u6D4B\u8BD5\u76F4\u5230\u901A\u8FC7\u3002</p><p>\u4F46\u5982\u679C\u5F53\u524D\u5DEE\u5F02\u662F\u6211\u4EEC\u8BA1\u5212\u5185\u7684\u66F4\u6539\uFF0C\u90A3\u4E48\u5C31\u4F60\u9700\u8981\u66F4\u65B0\u5F53\u524D\u5FEB\u7167\u6587\u4EF6\u3002</p><p>\u53EF\u4EE5\u66F4\u6539 jest \u8FD0\u884C\u547D\u4EE4\uFF0C\u6DFB\u52A0 <code>--updateSnapshot</code>\uFF0C\u7B80\u5199 <code>-u</code>\uFF0C\u6B64\u65F6 jest \u4F1A\u91CD\u5199\u6240\u6709\u5931\u8D25\u7684\u5FEB\u7167\u6587\u4EF6\u3002</p><p>\u4F46\u8FD9\u79CD\u6279\u91CF\u91CD\u5199\u4F1A\u6709\u4EA7\u751F\u9690\u60A3\uFF0C\u6709\u65F6\u53EF\u80FD\u786E\u5B9E\u9700\u8981\u66F4\u65B0\u4E2A\u522B\u5FEB\u7167\u6587\u4EF6\uFF0C\u4F46\u5E76\u4E0D\u662F\u6240\u6709\u3002\u6240\u4EE5\u4E0A\u8FF0\u6279\u91CF\u547D\u4EE4\u53EF\u80FD\u4F1A\u628A\u9519\u8BEF\u4FE1\u606F\u66F4\u65B0\u5230\u5FEB\u7167\u6587\u4EF6\u4E2D\u3002</p><p>\u6709\u4E24\u79CD\u65B9\u6CD5\u53EF\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</p><ul><li>\u547D\u4EE4\u589E\u52A0 <code>--testNamePattern</code> \u547D\u4EE4\u53C2\u6570\uFF0C\u7B80\u5199 <code>-t</code>\uFF0C\u8F93\u5165\u4E00\u4E2A\u6B63\u5219\uFF0C\u5339\u914D\u6210\u529F\u7684\u5FEB\u7167\u6587\u4EF6\u624D\u8FDB\u884C\u66F4\u65B0\uFF0C\u5982 <code>jest -t=auth</code>\uFF0C\u5219\u4F1A\u5339\u914D\u5230\u6240\u6709 name \u5305\u542B auth \u5B57\u6BB5\u7684\u6D4B\u8BD5\u7528\u4F8B\u3002</li><li>\u4F7F\u7528<strong>\u4EA4\u4E92\u6A21\u5F0F</strong>\uFF1A\u5F53 Jest \u8FD0\u884C\u5931\u8D25\u65F6\uFF0C\u547D\u4EE4\u884C\u4F1A\u63D0\u793A\u4F60\u662F\u5426\u8FDB\u5165 jest \u7684\u4EA4\u4E92\u6A21\u5F0F\uFF0C \u6309 <code>w</code> \u8FDB\u5165\uFF0C\u7136\u540E\u6839\u636E\u63D0\u793A\uFF0C\u60A8\u53EF\u4EE5\u9009\u62E9<code>u</code>\u66F4\u65B0<code>update</code>\u8BE5\u5FEB\u7167\u6587\u4EF6\uFF0C\u6216\u4F7F\u7528 <code>s</code> \u8DF3\u8FC7<code>skip</code>\u81F3\u4E0B\u4E00\u4E2A\u5931\u8D25\u7684\u5FEB\u7167\u3002</li></ul><h3 id="\u9759\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5" tabindex="-1">\u9759\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5 <a class="header-anchor" href="#\u9759\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5" aria-hidden="true">#</a></h3><p>\u9759\u6001\u7EC4\u4EF6\u662F\u6307\u6CA1\u6709\u4EFB\u4F55\u4EFB\u4F55\u903B\u8F91\u7684\u7EC4\u4EF6\uFF0C\u5B83\u603B\u662F\u6E32\u67D3\u76F8\u540C\u7684 HTML \u4F5C\u4E3A\u8F93\u51FA\uFF0C\u5E76\u4E14\u5B83\u4E0D\u63A5\u53D7\u4EFB\u4F55 prop\uFF0C\u4E5F\u6CA1\u6709\u4EFB\u4F55 state\u3002</p><p>\u4E3A\u9759\u6001\u7EC4\u4EF6\u7F16\u5199\u5355\u5143\u6D4B\u8BD5\u662F\u6CA1\u6709\u5FC5\u8981\u7684\uFF0C\u4F46\u662F\u6700\u521D\u5B8C\u6210\u4E86\u9759\u6001\u7EC4\u4EF6\u5E76\u624B\u52A8\u6D4B\u8BD5\u4E86\u5B83\u7684 UI \u6548\u679C\u540E\uFF0C\u60F3\u8981\u786E\u4FDD\u4EE5\u540E\u8BE5\u9759\u6001\u7EC4\u4EF6\u4E0D\u4F1A\u53D1\u751F\u53D8\u66F4\uFF0C\u90A3\u4E3A\u5B83\u8FDB\u884C\u5FEB\u7167\u6D4B\u8BD5\u5C31\u975E\u5E38\u6709\u7528\u4E86\u3002</p><p>\u5B83\u7684\u6D4B\u8BD5\u4EE3\u7801\u4E5F\u975E\u5E38\u7B80\u5355\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> shallowMount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> Spinner <span class="token keyword">from</span> <span class="token string">&#39;src/components/Spinner.vue&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Spinner.vue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render correctly&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">shallowMount</span><span class="token punctuation">(</span>Spinner<span class="token punctuation">)</span><span class="token punctuation">.</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="\u52A8\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5" tabindex="-1">\u52A8\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5 <a class="header-anchor" href="#\u52A8\u6001\u5185\u5BB9\u7684\u5FEB\u7167\u6D4B\u8BD5" aria-hidden="true">#</a></h3><p>\u4E0E\u9759\u6001\u7EC4\u4EF6\u5BF9\u5E94\u7684\uFF0C\u8FD9\u91CC\u7684\u52A8\u6001\u7EC4\u4EF6\u662F\u6307\u90A3\u4E9B\u5305\u542B\u903B\u8F91\u548C\u72B6\u6001\u7684\u7EC4\u4EF6\uFF0C\u5B83\u7684\u6E32\u67D3\u8F93\u51FA\u7684 UI \u89C6\u56FE\u4F1A\u56E0\u4E3A\u66F4\u65B0\u4E86 prop \u6216\u53D8\u52A8\u4E86\u6570\u636E\u72B6\u6001\u800C\u6539\u53D8\u3002</p><ul><li>\u5F53\u4F60\u4E3A\u52A8\u6001\u7EC4\u4EF6\u7F16\u5199\u5FEB\u7167\u6D4B\u8BD5\u65F6\uFF0C\u5E94\u8BE5\u5C1D\u8BD5\u6355\u83B7\u5C3D\u53EF\u80FD\u591A\u7684\u4E0D\u540C\u7EC4\u5408\u7684\u72B6\u6001\uFF0C\u8FD9\u6837\u5FEB\u7167\u6D4B\u8BD5\u5C06\u5C3D\u53EF\u80FD\u5730\u8986\u76D6\u66F4\u5168\u7684\u529F\u80FD\u3002</li><li>\u5FEB\u7167\u6D4B\u8BD5\u5FC5\u987B\u662F\u53EF\u786E\u5B9A\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u53EA\u8981\u6CA1\u6709\u6539\u52A8\u6E90\u7801\uFF0C\u90A3\u65E0\u8BBA\u4F55\u65F6\u6D4B\u8BD5\u6E32\u67D3\u8F93\u51FA\u5E94\u8BE5\u603B\u662F\u76F8\u540C\u7684\u3002</li></ul><p>\u4F46\u5982\u679C\u6D4B\u8BD5\u7EC4\u4EF6\u4E2D\u5305\u542B\u4F1A\u53D8\u66F4\u7684\u72B6\u6001\u65F6\uFF0C\u5FEB\u7167\u6D4B\u8BD5\u5C31\u4F1A\u5F88\u96BE\u901A\u8FC7\u4E86\u3002\u6BD4\u5982\u4E00\u4E2A\u6587\u7AE0\u5217\u8868\u7EC4\u4EF6<code>ListItem</code>\uFF0C\u5176\u4E2D\u4F1A\u5B9E\u65F6\u663E\u793A\u65F6\u95F4\uFF0C\u6BD4\u5982\u6700\u65B0\u4FEE\u6539\u65F6\u95F4\u663E\u793A\u4E3A\uFF1A\u51E0\u5C0F\u524D / \u51E0\u5929\u524D\uFF0C\u5F53\u8D85\u8FC7\u4E00\u4E2A\u6708\u65F6\uFF0C\u624D\u663E\u793A\u5B8C\u6574\u7684 <code>yyyy-mm-dd hh:mm:ss</code> \u65F6\u95F4\uFF0C\u8FD9\u65F6\u5982\u679C\u5BF9\u8BE5\u7EC4\u4EF6\u8FDB\u884C\u5FEB\u7167\u6D4B\u8BD5\uFF0C\u90A3\u603B\u4F1A\u4EE5\u5931\u8D25\u544A\u7EC8\u3002</p><p>\u5728\u6B64\u60C5\u5F62\u4E0B\uFF0C\u5982\u679C\u9700\u8981\u5BF9\u8BE5\u7EC4\u4EF6\u8FDB\u884C\u5FEB\u7167\u6D4B\u8BD5\uFF0C\u5C31\u6709\u5FC5\u8981\u6A21\u62DF\u4E00\u4E2A\u56FA\u5B9A\u7684\u65F6\u95F4\u7528\u4E8E\u6D4B\u8BD5\u3002</p><blockquote><p>\u5728 jest \u4E2D\u5BF9\u590D\u6742\u4F9D\u8D56\u8FDB\u884C\u6A21\u62DF\u7684\u624B\u6BB5\u6709\uFF1Ajest.fn / jest.spyOn / jest.mock</p></blockquote><div class="language-js"><pre><code><span class="token function">descibe</span><span class="token punctuation">(</span>&#39;ListItem<span class="token punctuation">.</span>vue\u2019<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mockNow <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">spyOn</span><span class="token punctuation">(</span>Date<span class="token punctuation">,</span> <span class="token string">&#39;now&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> dateNowTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2021-05-20 22:55:00&#39;</span><span class="token punctuation">)</span>

  mockNow<span class="token punctuation">.</span><span class="token function">mockImplementation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dateNowTime<span class="token punctuation">)</span> <span class="token comment">// \u6A21\u62DF\u4E00\u4E2A\u56FA\u5B9A\u65F6\u95F4\uFF0C\u7528\u4E8E\u5217\u8868\u6E32\u67D3</span>

  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;learn vue-test-utils&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">by</span><span class="token operator">:</span> <span class="token string">&#39;xut&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">updateTime</span><span class="token operator">:</span> <span class="token punctuation">(</span>dateNowTime <span class="token operator">/</span> <span class="token number">1000</span> <span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">6000</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>ListItem<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">propsData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      item<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  mockNow<span class="token punctuation">.</span><span class="token function">mockRestore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u9000\u51FA data.now \u6A21\u62DF</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u751F\u6210\u5FEB\u7167\u6D4B\u8BD5\uFF0C\u5E76\u6BD4\u5BF9\u3002</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code></code></pre></div><p>\u7406\u60F3\u60C5\u51B5\u4E0B\uFF0C\u5F71\u54CD\u89C6\u56FE\u6E32\u67D3\u7ED3\u679C\u7684\u6240\u6709\u5206\u652F\u90FD\u5E94\u8BE5\u88AB\u5FEB\u7167\u6D4B\u8BD5\u8986\u76D6\u3002\u4F46\u662F\u5B9E\u9645\u662F\u4E0D\u53EF\u80FD\u5B9E\u73B0 100% \u9875\u9762\u7684\u5FEB\u7167\u6D4B\u8BD5\u3002</p><p>\u4E3A\u4E00\u4E2A\u7EC4\u4EF6\u8F93\u51FA\u5927\u91CF\u5FEB\u7167\u6D4B\u8BD5\uFF0C\u5C31\u610F\u5473\u7740\u7EC4\u4EF6\u6BCF\u6B21\u7EC6\u5FAE\u7684\u6539\u53D8\u5C31\u4F1A\u6709\u5927\u91CF\u5931\u8D25\u7684\u5FEB\u7167\u6D4B\u8BD5\u7528\u4F8B\u3002\u6240\u4EE5\u5FEB\u7167\u6D4B\u8BD5\u9002\u91CF\u5373\u53EF\u3002</p><div class="language-tip"><pre><code>\u300AVue.js \u5E94\u7528\u6D4B\u8BD5\u300B\u4F5C\u8005\u8BF4\u4ED6\u7684\u4E60\u60EF\u662F\u4E00\u4E2A\u7EC4\u4EF6\u7684\u5FEB\u7167\u6D4B\u8BD5\u4E0D\u4F1A\u8D85\u8FC7\u4E09\u4E2A\u3002\u4ED6\u9075\u5FAA\u7684\u7EC4\u4EF6\u5F00\u53D1\u5DE5\u4F5C\u6D41\uFF1A
1. \u7F16\u5199\u5355\u5143\u6D4B\u8BD5\u6765\u8986\u76D6\u7EC4\u4EF6\u7684\u6838\u5FC3\u529F\u80FD\uFF0C(TDD \u5F00\u53D1\u6A21\u5F0F\uFF1A\u6D4B\u8BD5\u9A71\u52A8\u5F00\u53D1)
1. \u7F16\u5199\u7EC4\u4EF6\u4EE3\u7801\uFF0C\u4F7F\u5F97\u7EC4\u4EF6\u903B\u8F91\u6D4B\u8BD5\u901A\u8FC7
1. \u7F16\u5199\u7EC4\u4EF6\u6837\u5F0F\uFF0C\u5E76\u5728\u6D4F\u89C8\u5668\u624B\u52A8\u6D4B\u8BD5\u7EC4\u4EF6\u6837\u5F0F
1. \u5B8C\u6210\u7EC4\u4EF6\u6837\u5F0F\u540E\uFF0C\u518D\u6DFB\u52A0\u4E00\u4E2A\u5FEB\u7167\u6D4B\u8BD5\uFF0C\u5C3D\u91CF\u4F7F\u7528\u8F83\u5168\u9762\u6570\u636E\uFF0C\u4FBF\u5F97\u5FEB\u7167\u6D4B\u8BD5\u8986\u76D6\u5927\u90E8\u5206\u9875\u9762\u529F\u80FD\u3002\u89C6\u9700\u6C42\u518D\u589E\u52A0\u5176\u5B83\u5206\u652F\u7684\u5FEB\u7167\u6D4B\u8BD5\u3002
</code></pre></div><h2 id="\u5FEB\u7167\u6D4B\u8BD5\u6700\u4F73\u5B9E\u8DF5" tabindex="-1">\u5FEB\u7167\u6D4B\u8BD5\u6700\u4F73\u5B9E\u8DF5 <a class="header-anchor" href="#\u5FEB\u7167\u6D4B\u8BD5\u6700\u4F73\u5B9E\u8DF5" aria-hidden="true">#</a></h2><ul><li>30% \u7684\u5FEB\u7167\u6D4B\u8BD5</li></ul><p>\u5FEB\u7167\u6D4B\u8BD5\u4F4D\u4E8E\u6D4B\u8BD5\u91D1\u5B57\u5854\u4E2D\u95F4\u4F4D\u7F6E\uFF0C\u5DEE\u4E0D\u591A\u5360\u6D4B\u8BD5\u7528\u4F8B 30% \u5DE6\u53F3\u3002\u56E0\u4E3A\u5FEB\u7167\u6D4B\u8BD5\u901F\u5EA6\u5E76\u4E0D\u7406\u60F3\uFF0C\u8D8A\u591A\u7684\u5FEB\u7167\u6D4B\u8BD5\u4F1A\u6D88\u8017\u66F4\u957F\u7684\u65F6\u95F4; \u5E76\u4E14\u5C11\u90E8\u5206\u7684\u4EE3\u7801\u6539\u52A8\uFF0C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5927\u9762\u79EF\u7684\u5FEB\u7167\u6D4B\u8BD5\u5931\u8D25\u3002</p><ul><li>\u5FEB\u7167\u6D4B\u8BD5\u6DFB\u52A0\u72EC\u7ACB\u7684\u6D4B\u8BD5\u547D\u4EE4</li></ul><p>\u56E0\u4E3A\u5355\u5143\u6D4B\u8BD5\u662F\u9891\u7E41\u6267\u884C\u7684\uFF0C\u4E0D\u60F3\u56E0\u4E3A\u5FEB\u7167\u6D4B\u8BD5\u7684\u901F\u5EA6\u5F71\u54CD\u5355\u5143\u6D4B\u8BD5\u7684\u901F\u5EA6\uFF0C\u6240\u4EE5\u53EF\u4EE5\uFF1A</p><ul><li>\u5C06\u5FEB\u7167\u6D4B\u8BD5\u6587\u4EF6\u72EC\u7ACB\u5B58\u5165\u5230 <code>tests/snapshots</code>\uFF0C\u4F7F\u7528\u72EC\u7ACB\u914D\u7F6E\u6587\u4EF6\uFF0C\u4E3B\u8981\u662F\u66F4\u6539\u914D\u7F6E\u6587\u4EF6\u4E2D <code>testMatch / testPathIgnorePatterns</code> \u6765\u5339\u914D\u5BF9\u5E94\u7684\u6D4B\u8BD5\u6587\u4EF6</li><li>\u521B\u5EFA\u72EC\u7ACB\u7684\u6D4B\u8BD5\u547D\u4EE4\uFF1A <ul><li><code>test:unit: &quot;jest --config=&quot;path/jest.unit.config.js&quot;</code></li><li><code>test:snap: &quot;jest --config=&quot;path/jest.snap.config.js&quot;</code></li></ul></li></ul><h2 id="\u6269\u5C55\uFF1A\u52A8\u6001\u5339\u914D-expect-any" tabindex="-1">\u6269\u5C55\uFF1A\u52A8\u6001\u5339\u914D expect.any <a class="header-anchor" href="#\u6269\u5C55\uFF1A\u52A8\u6001\u5339\u914D-expect-any" aria-hidden="true">#</a></h2><p><code>expect.any(constructor)</code> \u4F1A\u5339\u914D\u9700\u8981\u65AD\u8A00\u7684\u503C\u4E0E\u7ED9\u5B9A\u6784\u9020\u51FD\u6570\u521B\u5EFA\u7684\u503C\u662F\u540C\u7C7B\u578B\u5373\u53EF\u901A\u8FC7\uFF0C\u4E5F\u5C31\u662F\u8BF4\u53EA\u5BF9\u65AD\u8A00\u503C\u7684\u7C7B\u578B\u4F5C\u9650\u5236\u3002</p><div class="language-js"><pre><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;will fail every time&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">createdAt</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;LeBron James&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F1A\u751F\u6210\u5982\u4E0B\u5FEB\u7167 Snapshot</span>
exports<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">will fail every time 1</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
Object {
  &quot;createdAt&quot;: 2018-05-19T23:36:09.816Z,
  &quot;id&quot;: 3,
  &quot;name&quot;: &quot;LeBron James&quot;,
}
</span><span class="token template-punctuation string">\`</span></span>
</code></pre></div><p>\u5BF9\u4E8E\u4E0A\u8FF0\u52A8\u6001\u7684\u5C5E\u6027\u503C <code>createdAt / id</code>\uFF0C\u4F1A\u5BFC\u81F4\u6BCF\u6B21\u8FD0\u884C\u5FEB\u7167\u6D4B\u8BD5\u5931\u8D25\u3002\u6B64\u65F6\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 <code>toMatchSnapshot</code> \u51FD\u6570\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u660E\u786E\u544A\u8BC9 jest \u8FDB\u884C\u5FEB\u7167\u6BD4\u5BF9\u65F6\u5BF9\u5B83\u4EEC\u53EA\u65AD\u8A00\u7C7B\u578B\uFF0C\u4E0D\u9700\u8981\u65AD\u8A00\u5B8C\u5168\u76F8\u540C\u7684\u503C\uFF0C\u4EE5\u4FBF\u8BA9\u6574\u4E2A\u5FEB\u7167\u6D4B\u8BD5\u968F\u65F6\u901A\u8FC7\u3002</p><div class="language-js"><pre><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;will check the matchers and pass&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">createdAt</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;LeBron James&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">createdAt</span><span class="token operator">:</span> expect<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>Date<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> expect<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F1A\u751F\u6210\u5982\u4E0B\u5FEB\u7167 Snapshot</span>
exports<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">will check the matchers and pass 1</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
Object {
  &quot;createdAt&quot;: Any&lt;Date&gt;,
  &quot;id&quot;: Any&lt;Number&gt;,
  &quot;name&quot;: &quot;LeBron James&quot;,
}
</span><span class="token template-punctuation string">\`</span></span>
</code></pre></div><p><code>toMatchSnapshot(propertyMatchers)</code> \u4F20\u5165\u7684\u5C5E\u6027\u5339\u914D\u5BF9\u8C61\u5C06\u4F5C\u4E3A\u9700\u8981\u65AD\u8A00\u5BF9\u8C61\u7684\u5B50\u96C6\u3002<code>toMatchSnapshot</code> \u51FD\u6570\u5728\u6267\u884C\u5FEB\u7167\u6BD4\u5BF9\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u4F7F\u7528\u4F20\u5165\u7684\u5C5E\u6027\u503C\u4F5C\u6BD4\u5BF9\uFF0C\u5E76\u4E14\u66F4\u65B0\u5FEB\u7167\u6587\u4EF6\u4E2D\uFF0C\u800C\u6CA1\u6709\u4F20\u5165\u7684\u5C5E\u6027\u503C\u4E0E\u65E7\u5FEB\u7167\u503C\u4F5C\u6BD4\u5BF9\u3002</p><p>\u5BF9\u4E8E\u660E\u786E\u6570\u636E\u7ED3\u6784\u7684\u503C\u8FDB\u884C\u5FEB\u7167\u6D4B\u8BD5\u65F6\u975E\u5E38\u6709\u7528\uFF0C\u6240\u4EE5\u5E38\u7528\u4E8E\u540E\u7AEF json \u6587\u4EF6\u7684\u5355\u5143\u6D4B\u8BD5\u3002\u5BF9\u524D\u7AEF UI \u8FDB\u884C\u52A8\u6001\u5185\u5BB9\u5FEB\u7167\u6D4B\u8BD5\u65F6\u66F4\u6613\u7528\u7B2C\u4E00\u79CD\u56FA\u5B9A\u6A21\u62DF\u503C\u7684\u65B9\u6CD5\u3002</p><h2 id="\u6269\u5C55\uFF1A\u5185\u8054\u5FEB\u7167-tomatchinlinesnapshot" tabindex="-1">\u6269\u5C55\uFF1A\u5185\u8054\u5FEB\u7167 toMatchInlineSnapshot <a class="header-anchor" href="#\u6269\u5C55\uFF1A\u5185\u8054\u5FEB\u7167-tomatchinlinesnapshot" aria-hidden="true">#</a></h2><p>\u4F7F\u7528\u884C\u5185 Snapshot \u7684\u524D\u63D0\u662F\uFF1A\u5B89\u88C5 prettier <code>npm i perttier -D</code></p><p>\u884C\u5185 Snapshot \u548C\u666E\u901A Snapshot \u7684\u533A\u522B\uFF1A</p><ul><li><code>toMatchInlineSnapshot()</code> \u884C\u5185 Snapshot \u628A\u751F\u6210\u7684\u5FEB\u7167\u653E\u5230\u4E86\u6D4B\u8BD5\u7528\u4F8B\u91CC\u8FB9\uFF0C\u4F5C\u4E3A<code>toMatchInlineSnapshot</code>\u51FD\u6570\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7684\u5F62\u5F0F\u4F20\u5165\u3002</li><li><code>toMatchSnapshot()</code> \u666E\u901A Snapshot \u4F1A\u628A\u751F\u6210\u7684\u5FEB\u7167\u653E\u5230<code>__snapshots__</code>\u76EE\u5F55\u4E2D\u5355\u72EC\u7684\u6587\u4EF6\u91CC\u3002</li></ul><p>\u7B2C\u4E00\u6B21\u6267\u884C\u65F6\uFF1A</p><div class="language-js"><pre><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;will check the matchers and pass&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">createdAt</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;LeBron James&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">createdAt</span><span class="token operator">:</span> expect<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>Date<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> expect<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u7B2C\u4E8C\u6B21\u6267\u884C\u65F6\uFF0Cjest \u4F1A\u81EA\u52A8\u5C06\u4E0A\u6B21\u751F\u6210\u7684\u5FEB\u7167\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\uFF1A</p><div class="language-js"><pre><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;will check the matchers and pass&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">createdAt</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;LeBron James&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchInlineSnapshot</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">createdAt</span><span class="token operator">:</span> expect<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>Date<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> expect<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    Object {
      &quot;createdAt&quot;: Any&lt;Date&gt;,
      &quot;id&quot;: Any&lt;Number&gt;,
      &quot;name&quot;: &quot;LeBron James&quot;,
    }
    </span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="tobe-value-toequal-value-tocontainequal-item-tostrictequal-value" tabindex="-1"><code>toBe(value) / toEqual(value) / toContainEqual(item) / toStrictEqual(value)</code> <a class="header-anchor" href="#tobe-value-toequal-value-tocontainequal-item-tostrictequal-value" aria-hidden="true">#</a></h2><h3 id="tobe-value" tabindex="-1"><code>toBe(value)</code> <a class="header-anchor" href="#tobe-value" aria-hidden="true">#</a></h3><p><code>toBe(value)</code> \u6BD4\u8F83\u89C4\u5219\u57FA\u672C\u4E0E <code>Object.is()</code>\u51FD\u6570\u4E00\u81F4\u3002<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/is" target="_blank" rel="noopener noreferrer">MDN: Object.js</a></p><p>\u4E3B\u8981\u5173\u6CE8\u4E24\u70B9\uFF1A</p><ul><li>\u5E38\u7528\u6765\u6BD4\u8F83\u539F\u59CB\u503C\u7684\u5B8C\u5168\u76F8\u7B49\u3002<code>expect(true).toBe(true)</code></li><li>\u5982\u679C\u662F\u7528\u4E8E\u5BF9\u8C61\uFF0C\u5219\u68C0\u67E5\u5BF9\u8C61\u4E3A\u540C\u4E00\u4E2A\u5F15\u7528\u5730\u5740\uFF0C\u5373\u9A8C\u8BC1\u5BF9\u8C61\u5F15\u7528\u7684\u4E00\u81F4\u6027\u3002\u4F46\u4E0D\u4FDD\u8BC1\u5BF9\u8C61\u5185\u90E8\u5C5E\u6027\u503C\u6216\u7ED3\u6784\u4E00\u81F4\u3002</li></ul><h3 id="toequal-value" tabindex="-1"><code>toEqual(value)</code> <a class="header-anchor" href="#toequal-value" aria-hidden="true">#</a></h3><p>\u56E0\u4E3A <code>toBe</code> \u4F20\u5165\u5BF9\u8C61\u65F6\u53EA\u5224\u65AD\u5BF9\u8C61\u5F15\u7528\u7684\u4E00\u81F4\u6027\uFF0C\u5373\u5224\u65AD\u5BF9\u8C61\u5806\u5185\u5730\u5740\u662F\u5426\u76F8\u540C\u3002\u4F46\u5BF9\u4E8E\u5BF9\u8C61\u5185\u90E8\u7684\u5C5E\u6027\u503C\u548C\u7ED3\u6784\u4E0D\u6BD4\u8F83\u3002</p><p>\u6240\u4EE5 <code>toEqual(object)</code>\u4F1A\u9012\u5F52\u7684\u6BD4\u8F83\u5BF9\u8C61\u7684\u6BCF\u4E00\u4E2A\u5C5E\u6027\u503C\uFF0C\u5373\u4E24\u8005\u6DF1\u5EA6\u76F8\u7B49\u65F6\u624D\u6D4B\u8BD5\u901A\u8FC7\u3002\u5E76\u4E0D\u5728\u4E4E\u5BF9\u8C61\u662F\u5426\u5F15\u7528\u4E00\u81F4\uFF0C\u53EA\u5173\u6CE8\u5185\u90E8\u5C5E\u6027\u503C\u548C\u5C5E\u6027\u7ED3\u6784\u7684\u4E00\u81F4\u6027\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> can1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">flavor</span><span class="token operator">:</span> <span class="token string">&#39;grapefruit&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ounces</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> can2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">flavor</span><span class="token operator">:</span> <span class="token string">&#39;grapefruit&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ounces</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;toEqual and toBe&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// can1 \u4E0E can2 \u5BF9\u4E8E toEqual \u662F\u76F8\u540C\u7684\u5BF9\u8C61\uFF0C\u56E0\u4E3A\u5C5E\u6027\u548C\u5C5E\u6027\u503C\u90FD\u4E00\u6837\u3002</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;have all the same properties&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>can1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>can2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// \u5BF9\u4E8E toBe \u6765\u8BF4\u5374\u662F\u4E24\u79CD\u4E0D\u540C\u7684\u5BF9\u8C61\uFF0C\u56E0\u4E3A\u58F0\u660E\u7684\u4E24\u4E2A\u5BF9\u8C61\u6709\u4E0D\u540C\u7684\u5730\u5740</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;are not the exact same can&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>can1<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>can2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="tostrictequal-value" tabindex="-1"><code>toStrictEqual(value)</code> <a class="header-anchor" href="#tostrictequal-value" aria-hidden="true">#</a></h3><p>\u6BD4 <code>toEqual</code> \u66F4\u4E25\u683C\u7684\u68C0\u67E5\uFF0C\u4F7F\u7528<code>.toStrictEqual</code>\u6D4B\u8BD5\u7684\u5BF9\u8C61\u8981\u6C42\u5177\u6709\u76F8\u540C\u7684\u7C7B\u578B\u4EE5\u53CA\u7ED3\u6784\u3002</p><ul><li><code>{a:undefined, b: 2}</code> \u4E0E <code>{b: 2}</code> \u662F\u4E0D\u76F8\u7B49\u7684</li><li>\u7A00\u758F\u6570\u7EC4\u4E5F\u662F\u4E0D\u76F8\u7B49\u7684 <code>[,1]</code>\u4E0E [undefined, 1]</li><li>\u4E0D\u662F\u540C\u4E00\u4E2A\u7C7B class \u7684\u5B9E\u4F8B\u5BF9\u8C61\u4E5F\u662F\u4E0D\u76F8\u7B49\u7684\u3002</li></ul><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">LaCroix</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">flavor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>flavor <span class="token operator">=</span> flavor
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;the La Croix cans on my desk&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;are not semantically the same&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u8C61\u5C5E\u6027\u548C\u503C\u90FD\u4E00\u81F4\uFF0C toEqual \u901A\u8FC7</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LaCroix</span><span class="token punctuation">(</span><span class="token string">&#39;lemon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">flavor</span><span class="token operator">:</span> <span class="token string">&#39;lemon&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// \u4F20\u5165\u5BF9\u8C61\u548C\u9884\u671F\u5BF9\u8C61\u4E0D\u5C5E\u4E8E\u540C\u4E00\u7C7B\u7684\u5B9E\u4F8B\uFF0CtoStrictEqual \u662F\u4E0D\u4F1A\u901A\u8FC7\u7684</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LaCroix</span><span class="token punctuation">(</span><span class="token string">&#39;lemon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toStrictEqual</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">flavor</span><span class="token operator">:</span> <span class="token string">&#39;lemon&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="tocontainequal-item" tabindex="-1"><code>toContainEqual(item)</code> <a class="header-anchor" href="#tocontainequal-item" aria-hidden="true">#</a></h3><p>\u53EF\u4EE5\u5224\u65AD\u6570\u7EC4\u4E2D\u662F\u5426\u5305\u542B\u4E00\u4E2A\u7279\u5B9A\u5BF9\u8C61\uFF0C\u7C7B\u4F3C toEqual \u4E0E toContain \u7684\u7ED3\u5408\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">myBeverages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">delicious</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">sour</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">delicious</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">sour</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;is delicious and not sour&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> myBeverage <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">delicious</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">sour</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">myBeverages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainEqual</span><span class="token punctuation">(</span>myBeverage<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5EF6\u4F38\uFF1A <code>.toContain(item)</code></p><p>\u5224\u65AD\u6570\u7EC4\u662F\u5426\u5305\u542B\u7279\u5B9A\u5B50\u9879</p><div class="language-js"><pre><code><span class="token keyword">const</span> shoppingList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;diapers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;beer&#39;</span><span class="token punctuation">]</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;\u8D2D\u7269\u6E05\u5355\uFF08shopping list\uFF09\u91CC\u9762\u6709\u5564\u9152\uFF08beer\uFF09&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>shoppingList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;beer&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="tomatchobject-object" tabindex="-1"><code>toMatchObject(object)</code> <a class="header-anchor" href="#tomatchobject-object" aria-hidden="true">#</a></h3><p>\u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u5D4C\u5957\u7684 key \u4E0B\u9762\u7684 value \u7C7B\u578B\uFF0C\u9700\u8981\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> houseForSale <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">bath</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bedrooms</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token literal-property property">kitchen</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">amenities</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;oven&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stove&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;washer&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">area</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">wallColor</span><span class="token operator">:</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> desiredHouse <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">bath</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">kitchen</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">amenities</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;oven&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stove&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;washer&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">wallColor</span><span class="token operator">:</span> expect<span class="token punctuation">.</span><span class="token function">stringMatching</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">white|yellow</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;the house has my desired features&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchObject</span><span class="token punctuation">(</span>desiredHouse<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5EF6\u4F38\uFF1A<code>.toHaveProperty(keyPath, value)</code></p><p>\u5224\u65AD\u5728\u6307\u5B9A\u7684 path \u4E0B\u662F\u5426\u6709\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5D4C\u5957\u7684 path \u53EF\u4EE5\u7528 <code>.</code>\u5206\u5272\uFF0C\u4E5F\u53EF\u4EE5\u7528\u6570\u7EC4\u3002</p><div class="language-js"><pre><code><span class="token comment">// Object containing house features to be tested</span>
<span class="token keyword">const</span> houseForSale <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">bath</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bedrooms</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token literal-property property">kitchen</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">amenities</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;oven&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stove&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;washer&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">area</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">wallColor</span><span class="token operator">:</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;this house has my desired features&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7B80\u5355\u7684\u5F15\u7528</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;bath&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;bedrooms&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;pool&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u4F7F\u7528 . \u70B9\u53F7\u8868\u793A\u6DF1\u5EA6\u5F15\u7528</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;kitchen.area&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;kitchen.amenities&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;oven&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;stove&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;washer&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;kitchen.open&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u4F7F\u7528\u5305\u542BkeyPath\u7684\u6570\u7EC4\u8FDB\u884C\u6DF1\u5EA6\u5F15\u7528</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;area&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;amenities&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;oven&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stove&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;washer&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;amenities&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;oven&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>houseForSale<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;kitchen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;open&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,90),e=[o];function c(l,u,i,k,r,d){return a(),s("div",null,e)}var m=n(p,[["render",c]]);export{g as __pageData,m as default};
