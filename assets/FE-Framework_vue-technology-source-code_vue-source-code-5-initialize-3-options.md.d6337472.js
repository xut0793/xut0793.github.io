import{_ as n,c as s,o as a,a as t}from"./app.f1e974b0.js";const y='{"title":"options \u5904\u7406","description":"","frontmatter":{},"headers":[{"level":2,"title":"0. \u5165\u53E3 Vue.prototype._init","slug":"_0-\u5165\u53E3-vue-prototype-init"},{"level":2,"title":"1. mergeOptons \u5904\u7406 extends / mixins","slug":"_1-mergeoptons-\u5904\u7406-extends-mixins"},{"level":2,"title":"2. initInjections \u548C initProvide \u5904\u7406 provide / inject","slug":"_2-initinjections-\u548C-initprovide-\u5904\u7406-provide-inject"},{"level":2,"title":"3. initState","slug":"_3-initstate"},{"level":2,"title":"4. initProps \u5904\u7406 props","slug":"_4-initprops-\u5904\u7406-props"},{"level":2,"title":"5. initMethods \u5904\u7406 methods","slug":"_5-initmethods-\u5904\u7406-methods"},{"level":2,"title":"6. initData \u5904\u7406 data","slug":"_6-initdata-\u5904\u7406-data"},{"level":2,"title":"7. initComputed \u5904\u7406 computed","slug":"_7-initcomputed-\u5904\u7406-computed"},{"level":2,"title":"8. initWatch \u5904\u7406 watch","slug":"_8-initwatch-\u5904\u7406-watch"},{"level":2,"title":"9. callHook \u8C03\u7528 lifycycle hooks","slug":"_9-callhook-\u8C03\u7528-lifycycle-hooks"}],"relativePath":"FE-Framework/vue-technology-source-code/vue-source-code-5-initialize-3-options.md"}',p={},o=t(`<h1 id="options-\u5904\u7406" tabindex="-1">options \u5904\u7406 <a class="header-anchor" href="#options-\u5904\u7406" aria-hidden="true">#</a></h1><p><div class="table-of-contents"><ul><li><a href="#_0-\u5165\u53E3-vue-prototype-init">0. \u5165\u53E3 Vue.prototype._init</a></li><li><a href="#_1-mergeoptons-\u5904\u7406-extends-mixins">1. mergeOptons \u5904\u7406 extends / mixins</a></li><li><a href="#_2-initinjections-\u548C-initprovide-\u5904\u7406-provide-inject">2. initInjections \u548C initProvide \u5904\u7406 provide / inject</a></li><li><a href="#_3-initstate">3. initState</a></li><li><a href="#_4-initprops-\u5904\u7406-props">4. initProps \u5904\u7406 props</a></li><li><a href="#_5-initmethods-\u5904\u7406-methods">5. initMethods \u5904\u7406 methods</a></li><li><a href="#_6-initdata-\u5904\u7406-data">6. initData \u5904\u7406 data</a></li><li><a href="#_7-initcomputed-\u5904\u7406-computed">7. initComputed \u5904\u7406 computed</a></li><li><a href="#_8-initwatch-\u5904\u7406-watch">8. initWatch \u5904\u7406 watch</a></li><li><a href="#_9-callhook-\u8C03\u7528-lifycycle-hooks">9. callHook \u8C03\u7528 lifycycle hooks</a></li></ul></div></p><p>\u8FD9\u4E00\u8282\u4E3B\u8981\u7406\u89E3 vue \u5B9E\u4F8B\u5316\u6216\u7EC4\u4EF6\u5B9E\u4F8B\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u5BF9 options \u4E2D\u5404\u4E2A\u5B57\u7B26\u7684\u5904\u7406\u3002\u6BD4\u5982\u5B9A\u4E49\u4E00\u4E2A\u7EC4\u4EF6\u5E38\u7528\u5230\u7684 options \u5305\u62EC\uFF1A</p><div class="language-js"><pre><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Child&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mixins</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">provide</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

  lifecycle hooks
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><p>\u5165\u53E3\u8FD8\u662F\u4ECE new Vue \u5F00\u59CB\uFF0C\u7136\u540E\u8C03\u7528 Vue.prototype._init \u51FD\u6570\u6267\u884C\u5B9E\u4F8B\u5316\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Vue</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Vue</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Vue is a constructor and should be called with the \`new\` keyword&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**\u5411 Vue.prototype \u539F\u578B\u5BF9\u8C61\u4E0A\u6302\u8F7D\u65B9\u6CD5 */</span>
<span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vue.prototype._init()</span>
<span class="token function">stateMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vue.prototype.$set = set / Vue.prototype.$delete = del / Vue.prototype.$watch() { new Watcher() }</span>
<span class="token function">eventsMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vue.prototype.$on / Vue.prototype.$once / Vue.prototype.$off / Vue.prototype.$emit</span>
<span class="token function">lifecycleMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vue.prototype.$forceUpdate / Vue.prototype.$destroy / Vue.prototype._update =&gt; vm.__patch__</span>
<span class="token function">renderMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vue.prototype.$nextTick / Vue.prototype._render</span>
<span class="token function">initGlobalAPI</span> <span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment">// \u5168\u5C40api\u6302\u8F7D Vue.config/Vue.option / Vue.set / Vue.delete / Vue.nextTick / Vue.observable / Vue.use / Vue.mixin / Vue.components / Vue.directives / Vue.filters / Vue.extend \u7B49</span>
</code></pre></div><h2 id="_0-\u5165\u53E3-vue-prototype-init" tabindex="-1">0. \u5165\u53E3 Vue.prototype._init <a class="header-anchor" href="#_0-\u5165\u53E3-vue-prototype-init" aria-hidden="true">#</a></h2><p>\u8FD9\u91CC\u6211\u4EEC\u5173\u6CE8 initMixin(Vue) \u51FD\u6570\u4E2D\u5B9A\u4E49\u7684 _init \u51FD\u6570\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">initMixin</span> <span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_init</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token comment">// a uid</span>
    vm<span class="token punctuation">.</span>_uid <span class="token operator">=</span> uid$3<span class="token operator">++</span><span class="token punctuation">;</span>

    <span class="token comment">// a flag to avoid this being observed</span>
    vm<span class="token punctuation">.</span>_isVue <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">// merge options \u5408\u5E76\u5904\u7406 option</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>_isComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u662F\u7EC4\u4EF6</span>
      <span class="token comment">// optimize internal component instantiation</span>
      <span class="token comment">// since dynamic options merging is pretty slow, and none of the</span>
      <span class="token comment">// internal component options needs special treatment.</span>
      <span class="token function">initInternalComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u672C\u4F8B\u5230\u8FD9\u91CC</span>
      <span class="token comment">// \u5408\u5E76\u914D\u7F6E\uFF0C\u5C06\u5B9E\u4F8B vm.options \u4E0E \u5168\u5C40 Vue.options \u5408\u5E76\uFF0C\u6240\u4EE5\u5728\u5168\u5C40\u6CE8\u518C\u7684\u5185\u5BB9\u5728\u5404\u4E2A\u7EC4\u4EF6\u4E5F\u80FD\u8C03\u7528\u3002</span>
      vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>
        <span class="token function">resolveConstructorOptions</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">,</span>
        options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token comment">// expose real self</span>
    vm<span class="token punctuation">.</span>_self <span class="token operator">=</span> vm<span class="token punctuation">;</span>
    <span class="token function">initLifecycle</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6302\u8F7D\u5185\u90E8\u5C5E\u6027\uFF1A$root/$parent/$refs=[]/$children=[]/_watcher=null\uFF0C\u4EE5\u53CA\u4E00\u4E9B\u751F\u547D\u72B6\u6001\u6807\u5FD7 flag: _inactive=null/_isMounted=false/_isDestoryed=false/_isBeingDestoryed=false</span>
    <span class="token function">initEvents</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6302\u8F7D\u7236\u7EC4\u4EF6\u4F20\u5165\u7684\u4E8B\u4EF6\u76D1\u542C\u5668 listeners \u5230\u5B9E\u4F8B vm._events \u5BF9\u8C61\u4E0A\uFF0C\u6765\u6E90\u4E8E template \u89E3\u6790\u5230\u7684 v-on \u7ED1\u5B9A\u7684\u4E8B\u4EF6\u51FD\u6570</span>
    <span class="token function">initRender</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6302\u8F7D $attrs/$listeners\uFF0C\u4EE5\u53CA\u7ED1\u5B9A _c/$createElement</span>
    <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeCreate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">initInjections</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// resolve injections before data/props 1. \u89E3\u6790 inject \u5C5E\u6027\u7684\u6570\u636E resolveInject\uFF0C\u4ECE _provided \u53D6\u51FA\u503C\uFF1B2. \u5E76\u5C06\u5176\u5728\u5F53\u524D\u5B9E\u4F8B\u4E0A\u8F6C\u4E3Agetter/setter\u540C\u65F6\u6302\u8F7D\u5230 vm \u4E0A\uFF0C\u56E0\u4E3Ainject\u53EA\u8BFB\uFF0C\u6240\u4EE5setter\u662F\u4E00\u4E2A\u6253\u5370\u8B66\u544A\u7684\u81EA\u5B9A\u4E49\u51FD\u6570 warn</span>
    <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB script \u4E2D\u7684\u5C5E\u6027\uFF1AinitProps/initMethods/initData/initComputed/initWatch</span>
    <span class="token function">initProvide</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// resolve provide after data/props \u5C06 provide \u5BF9\u8C61\u6216\u51FD\u6570\u8D4B\u503C\u7ED9 vm._provided \u5C5E\u6027\uFF0C\u4F9B initInjections \u4E2D\u4F7F\u7528</span>
    <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;created&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>_init \u51FD\u6570\u7684\u7B2C\u4E00\u6B65\u5408\u5E76\u914D\u7F6E\u5728\u4E0A\u4E00\u8282\u5DF2\u7ECF\u62C6\u89E3\u8FC7\u4E86\uFF0C\u4E3B\u8981\u533A\u5206\u662F Vue \u5B9E\u4F8B\u5316\u8FD8\u662F\u7EC4\u4EF6\u5B9E\u4F8B\u5316\u3002<a href="./vue-source-code-5-initialize-2-mergeOptions.html">\u5408\u5E76\u914D\u7F6E</a></p><h2 id="_1-mergeoptons-\u5904\u7406-extends-mixins" tabindex="-1">1. mergeOptons \u5904\u7406 extends / mixins <a class="header-anchor" href="#_1-mergeoptons-\u5904\u7406-extends-mixins" aria-hidden="true">#</a></h2><p>\u8FD9\u5408\u5E76\u914D\u7F6E\u8FD9\u4E00\u6B65\uFF0C\u4F1A\u5C06 export default \u5BFC\u51FA\u7684\u5BF9\u8C61\u9009\u9879\u5408\u5E76\u5230 vm.$options \u4E2D\u3002\u5E76\u5728 meergeOptions \u4E2D\u5904\u7406\u4E86\u9009\u9879\u4E2D\u7684 extends \u548C mixins \u5B57\u6BB5\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">mergeOptions</span> <span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> child<span class="token punctuation">,</span> vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u4EE3\u7801</span>
  <span class="token comment">// Apply extends and mixins on the child options,</span>
  <span class="token comment">// but only if it is a raw options object that isn&#39;t</span>
  <span class="token comment">// the result of another mergeOptions call.</span>
  <span class="token comment">// Only merged options has the _base property.</span>
  <span class="token comment">// mergeOptions \u7684\u7B2C\u4E8C\u79CD\u4F5C\u7528\uFF1A</span>
  <span class="token comment">// \u9488\u5BF9 extends \u6216 mixins \u7684\u5408\u5E76\uFF0C\u56E0\u4E3AVue\u5B9E\u4F8B\u90FD\u6709 options.__base = Vue \u5C5E\u6027</span>
  <span class="token comment">// \u5728 initMixin$1 \u548C initExtend  \u4E2D\u8C03\u7528\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>child<span class="token punctuation">.</span>_base<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>extends<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      parent <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> child<span class="token punctuation">.</span>extends<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>mixins<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> child<span class="token punctuation">.</span>mixins<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        parent <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> child<span class="token punctuation">.</span>mixins<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7701\u7565\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6700\u540E\u76F8\u5F53\u4E8E</p><div class="language-js"><pre><code>vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Child&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">provide</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  lifecycle hooks
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u540E\u4F9D\u6B21\u5411\u4E0B\u6267\u884C\u4E00\u7CFB\u5217\u5B9E\u4F8B\u5316\u51FD\u6570\u3002</p><h2 id="_2-initinjections-\u548C-initprovide-\u5904\u7406-provide-inject" tabindex="-1">2. initInjections \u548C initProvide \u5904\u7406 provide / inject <a class="header-anchor" href="#_2-initinjections-\u548C-initprovide-\u5904\u7406-provide-inject" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token comment">// \u5C06 options.provide \u7684\u503C\u6302\u8F7D\u5230 vm._provided</span>
<span class="token keyword">function</span> <span class="token function">initProvide</span> <span class="token punctuation">(</span><span class="token parameter">vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> provide <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>provide<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>provide<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_provided <span class="token operator">=</span> <span class="token keyword">typeof</span> provide <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
      <span class="token operator">?</span> <span class="token function">provide</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
      <span class="token operator">:</span> provide<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">initInjections</span> <span class="token punctuation">(</span><span class="token parameter">vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">resolveInject</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>inject<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5173\u95ED\u54CD\u5E94\u5F0F\u5904\u7406\uFF0C\u56E0\u4E3A inject \u7684\u503C\u5728\u7236\u7EC4\u4EF6 provide \u4F20\u5165\u524D\u5DF2\u662F\u54CD\u5E94\u5F0F</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* istanbul ignore else */</span>
      <span class="token punctuation">{</span>
        <span class="token function">defineReactive$$1</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token string">&quot;Avoid mutating an injected value directly since the changes will be &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;overwritten whenever the provided component re-renders. &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;injection being mutated: \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span>
            vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">resolveInject</span> <span class="token punctuation">(</span><span class="token parameter">inject<span class="token punctuation">,</span> vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>inject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// inject is :any because flow is not smart enough to figure out cached</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> keys <span class="token operator">=</span> hasSymbol
      <span class="token operator">?</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>inject<span class="token punctuation">)</span>
      <span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>inject<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// #6574 in case the inject object is observed...</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">continue</span> <span class="token punctuation">}</span>
      <span class="token keyword">var</span> provideKey <span class="token operator">=</span> inject<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>from<span class="token punctuation">;</span>
      <span class="token keyword">var</span> source <span class="token operator">=</span> vm<span class="token punctuation">;</span>
      <span class="token comment">// \u4ECE\u4E0B\u5411\u4E0B\u5FAA\u73AF\u904D\u5386\u5F97\u5230 \u7236\u7EC4\u4EF6\u7684parent._provided \u503C\uFF0C\u4E0E initProvide \u547C\u5E94</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">.</span>_provided <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>source<span class="token punctuation">.</span>_provided<span class="token punctuation">,</span> provideKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">.</span>_provided<span class="token punctuation">[</span>provideKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        source <span class="token operator">=</span> source<span class="token punctuation">.</span>$parent<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;default&#39;</span> <span class="token keyword">in</span> inject<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> provideDefault <span class="token operator">=</span> inject<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>
          result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> provideDefault <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
            <span class="token operator">?</span> <span class="token function">provideDefault</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
            <span class="token operator">:</span> provideDefault<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;Injection \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_3-initstate" tabindex="-1">3. initState <a class="header-anchor" href="#_3-initstate" aria-hidden="true">#</a></h2><p>\u5269\u4F59\u9009\u9879\u90FD\u5728 initState \u51FD\u6570\u5185\u5904\u7406\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">initState</span> <span class="token punctuation">(</span><span class="token parameter">vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span>_watchers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">initProps</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">initMethods</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">observe</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>watch <span class="token operator">&amp;&amp;</span> opts<span class="token punctuation">.</span>watch <span class="token operator">!==</span> nativeWatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>watch<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_4-initprops-\u5904\u7406-props" tabindex="-1">4. initProps \u5904\u7406 props <a class="header-anchor" href="#_4-initprops-\u5904\u7406-props" aria-hidden="true">#</a></h2><p>\u8FD9\u91CC\u5BF9 props \u7684\u4F5C\u7528\u4E86\u4E00\u5C42 proxy \u4EE3\u7406\u3002 <code>vm[propKey] = vm._props[propKey]</code></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">initProps</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> propsOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> propsData <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>propsData <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>_props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// cache prop keys so that future props updates can iterate using Array</span>
  <span class="token comment">// instead of dynamic object key enumeration.</span>
  <span class="token keyword">var</span> keys <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_propKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> isRoot <span class="token operator">=</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>$parent<span class="token punctuation">;</span>
  <span class="token comment">// root instance props should be converted</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> <span class="token function-variable function">loop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span> <span class="token parameter">key</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token function">validateProp</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> propsOptions<span class="token punctuation">,</span> propsData<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5BF9 props \u5404\u79CD\u5F62\u5F0F\u7684\u9A8C\u8BC1\uFF0C\u503C value = propsData[key]</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">var</span> hyphenatedKey <span class="token operator">=</span> <span class="token function">hyphenate</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReservedAttribute</span><span class="token punctuation">(</span>hyphenatedKey<span class="token punctuation">)</span> <span class="token operator">||</span>
          config<span class="token punctuation">.</span><span class="token function">isReservedAttr</span><span class="token punctuation">(</span>hyphenatedKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;\\&quot;&quot;</span> <span class="token operator">+</span> hyphenatedKey <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is a reserved attribute and cannot be used as component prop.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">defineReactive$$1</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRoot <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isUpdatingChildComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token string">&quot;Avoid mutating a prop directly since the value will be &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;overwritten whenever the parent component re-renders. &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;Instead, use a data or computed property based on the prop&#39;s &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;value. Prop being mutated: \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">,</span>
            vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// static props are already proxied on the component&#39;s prototype</span>
    <span class="token comment">// during Vue.extend(). We only need to proxy props defined at</span>
    <span class="token comment">// instantiation here.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&quot;_props&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> propsOptions<span class="token punctuation">)</span> <span class="token function">loop</span><span class="token punctuation">(</span> key <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_5-initmethods-\u5904\u7406-methods" tabindex="-1">5. initMethods \u5904\u7406 methods <a class="header-anchor" href="#_5-initmethods-\u5904\u7406-methods" aria-hidden="true">#</a></h2><p>initMethods \u5904\u7406\u8F83\u4E3A\u7B80\u5355\uFF0C\u7B2C\u4E00\u6B65\u6821\u9A8C\u4E0D\u80FD\u4E0E prop \u548C vue \u4FDD\u7559\u5B57\u91CD\u540D\uFF0C\u7B2C\u4E8C\u6B65\u76F4\u63A5\u5C06\u65B9\u6CD5\u6302\u8F7D\u5230 vm \u4E0A\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">initMethods</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> methods</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; has type \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot; in the component definition. &quot;</span> <span class="token operator">+</span>
          <span class="token string">&quot;Did you reference the function correctly?&quot;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; has already been defined as a prop.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; conflicts with an existing Vue instance method. &quot;</span> <span class="token operator">+</span>
          <span class="token string">&quot;Avoid defining component methods that start with _ or $.&quot;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> noop <span class="token operator">:</span> <span class="token function">bind</span><span class="token punctuation">(</span>methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_6-initdata-\u5904\u7406-data" tabindex="-1">6. initData \u5904\u7406 data <a class="header-anchor" href="#_6-initdata-\u5904\u7406-data" aria-hidden="true">#</a></h2><ol><li>\u6821\u9A8C data \u7ED3\u679C\u5FC5\u987B\u662F\u666E\u901A\u7684\u5BF9\u8C61\u7ED3\u6784</li><li>\u6821\u9A8C data \u7684 key \u4E0D\u80FD\u4E0E props / methods / \u4FDD\u7559\u5B57 \u91CD\u540D</li><li>proxy \u4EE3\u7406 data\uFF0C\u5373 vm[key] = vm._data[key]</li><li>\u5C06 data \u8F6C\u4E3A\u54CD\u5E94\u5F0F\u7684 getter / setter\uFF0C\u5373 observe(data)\uFF0C\u5173\u4E8E Vue \u54CD\u5E94\u5F0F\u8FC7\u7A0B\u8BF7\u67E5\u770B <a href="./vue-source-code-1-reactivity-1-detection-chnage.html">\u54CD\u5E94\u5F0F\u539F\u7406</a></li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">initData</span> <span class="token punctuation">(</span><span class="token parameter">vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> data <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  data <span class="token operator">=</span> vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
    <span class="token operator">?</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token operator">:</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token string">&#39;data functions should return an object:\\n&#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&#39;</span><span class="token punctuation">,</span>
      vm
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// proxy data on instance</span>
  <span class="token keyword">var</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">;</span>
  <span class="token keyword">var</span> methods <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>methods<span class="token punctuation">;</span>
  <span class="token keyword">var</span> i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;Method \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; has already been defined as a data property.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&quot;The data property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already declared as a prop. &quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;Use prop default value instead.&quot;</span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4EE5 &amp; \u6216 _ \u5F00\u5934\u7684 key \u4F5C\u4E3A\u4FDD\u7559\u5C5E\u6027\uFF0C\u5916\u90E8\u4E0D\u80FD\u5B9A\u4E49</span>
      <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&quot;_data&quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// observe data</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_7-initcomputed-\u5904\u7406-computed" tabindex="-1">7. initComputed \u5904\u7406 computed <a class="header-anchor" href="#_7-initcomputed-\u5904\u7406-computed" aria-hidden="true">#</a></h2><p>computed \u5B9A\u4E49\u7684\u503C\u4E3A\u4EC0\u4E48\u5177\u6709\u7F13\u5B58\u80FD\u529B</p><ul><li>\u56E0\u4E3A\u58F0\u660E\u7684\u6BCF\u4E2A computed \u90FD\u6709\u5BF9\u5E94\u5B9E\u4F8B\u4E00\u4E2A watcher \u5B58\u653E\u5728 computedWatcher \u4E2D\uFF0C\u5E76\u5728\u9996\u6B21\u8C03\u7528 getter \u8FDB\uFF0C\u4F1A\u5C06\u8BE5 watcher\u3000\u6DFB\u52A0\u5230\u5176\u4F9D\u8D56\u7684 Dep \u5B9E\u4F8B\u4E2D\u3002</li><li>\u6BCF\u4E2A computed \u7684 getter \u90FD\u91CD\u5199\u4E86\uFF0C\u5728getter\u8C03\u7528\u65F6\uFF0C\u4F1A\u8BFB\u53D6\u5BF9\u5E94\u7684 watcher\uFF0C\u5728\u8FD4\u56DE watcher.value\uFF0C\u4E4B\u524D\u4F1A\u901A\u8FC7 watcher.dirty \u503C\u5224\u65AD\u662F\u5426\u9700\u8981\u66F4\u65B0\u5F53\u524Dcoputed\u7684\u503C\u3002</li><li>\u5728\u67D0\u4E2A\u4F9D\u8D56\u503C\u53D8\u5316\u65F6\uFF0Csetter \u4E2D\u8C03\u7528 dep.notify(),\u904D\u5386\u5176\u4F9D\u8D56 watcher\uFF0C\u8C03\u7528watcher.update(), \u5728\u5176\u4E2D\u4F1A\u901A\u8FC7 watcher.lazy \u7684\u503C\u5224\u65AD\u662F\u5426\u662Fcomputed\u7684watcher\uFF0C\u5982\u679C\u662F\u5C06 watcher.dirty = true\u3002\u8FD9\u6837\u4E0B\u6B21\u8C03\u7528 computed \u65F6\u8FD4\u56DE watcher.value \u4E4B\u524D\u4F1A\u6839\u636E dirty = true\uFF0C\u8C03\u7528 watcher.evaluate() \u91CD\u65B0\u83B7\u53D6 watcher.get()\u7684\u503C\u66F4\u65B0\u5230 watcher.value</li></ul><p>\u6240\u4EE5\u8BF4 computed \u7684\u503C\u7F13\u5B58\u5728\u5176\u5BF9\u5E94\u7684 computed-watcher \u7684 watcher.value \u4E2D\uFF0C\u800C watcher.dirty \u63A7\u5236\u4E86\u503C\u662F\u5426\u9700\u8981\u66F4\u65B0\u3002</p><div class="language-js"><pre><code><span class="token keyword">var</span> computedWatcherOptions <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">initComputed</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> computed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// $flow-disable-line</span>
  <span class="token keyword">var</span> watchers <span class="token operator">=</span> vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// computed properties are just getters during SSR</span>
  <span class="token keyword">var</span> isSSR <span class="token operator">=</span> <span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> userDef <span class="token operator">=</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> getter <span class="token operator">=</span> <span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> userDef <span class="token operator">:</span> userDef<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token string">&quot;Getter is missing for computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// create internal watcher for the computed property.</span>
      watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>
        vm<span class="token punctuation">,</span>
        getter <span class="token operator">||</span> noop<span class="token punctuation">,</span>
        noop<span class="token punctuation">,</span>
        computedWatcherOptions
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// component-defined computed properties are already defined on the</span>
    <span class="token comment">// component prototype. We only need to define computed properties defined</span>
    <span class="token comment">// at instantiation here.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;The computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already defined in data.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;The computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already defined as a prop.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">defineComputed</span> <span class="token punctuation">(</span>
  <span class="token parameter">target<span class="token punctuation">,</span>
  key<span class="token punctuation">,</span>
  userDef</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> shouldCache <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> shouldCache
      <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> noop<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> userDef<span class="token punctuation">.</span>get
      <span class="token operator">?</span> shouldCache <span class="token operator">&amp;&amp;</span> userDef<span class="token punctuation">.</span>cache <span class="token operator">!==</span> <span class="token boolean">false</span>
        <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">.</span>get<span class="token punctuation">)</span>
      <span class="token operator">:</span> noop<span class="token punctuation">;</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> userDef<span class="token punctuation">.</span>set <span class="token operator">||</span> noop<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">===</span> noop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token string">&quot;Computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; was assigned to but it has no setter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">this</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u8FD9\u91CC\u6267\u884C\u4F1A\u83B7\u53D6computed \u7684getter\uFF0C\u6267\u884C\u65F6\u4E5F\u4F1A\u89E6\u53D1\u51FD\u6570\u5185\u4F9D\u8D56\u6570\u636E\u7684getter\uFF0C\u6240\u4EE5\u6B64\u65F6 targetStack=[render-watcher, computed-watcher]</span>
        <span class="token comment">// \u5F53\u8BFB\u53D6\u8BA1\u7B97\u5C5E\u6027\u4F9D\u8D56\u7684\u6570\u636E\u7684 getter \u65F6\uFF0C\u4F1A\u5C06 computed-watcher \u6DFB\u52A0\u5230\u5176 dep.subs\u4E2D\uFF0C\u540C\u65F6\u5C06\u8BE5dep \u6DFB\u52A0\u5230 computed-watcher \u7684 deps \u4E2D\u3002</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6B64\u65F6 Dep.target \u662F render-watcher</span>
        watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386 computed-watcher \u4E2D\u88AB\u6DFB\u52A0 deps\uFF0C\u6267\u884Cdep.depend\uFF0C\u5373\u5C06 render-watcher \u6DFB\u52A0\u5230\u4E86\u6BCF\u4E2A\u4F9D\u8D56\u9879 dep \u4E2D\u3002</span>
        <span class="token comment">// \u6B64\u65F6computed\u6240\u4F9D\u8D56\u7684\u6BCF\u4E2A\u6570\u636Edep\u4E2Dsubs=[computed-watcher, render-watcher]\uFF0C\u5E76\u4E14\u987A\u5E8F\u4E5F\u662F\u91CD\u8981\u7684\uFF0C\u56E0\u4E3AqueueWatcher\u4E2D\u9700\u8981\u6392\u5E8F\u3002</span>
        <span class="token comment">// \u5230\u6B64\u5B8C\u6210\u4E00\u4E2Acomputed\u7684\u4F9D\u8D56\u6536\u96C6\uFF0C\u67D0\u4E2A\u6570\u636E\u7684\u6539\u53D8\u4F1A\u5148\u89E6\u53D1computed-watcher\u7684update\uFF0C\u4FDD\u8BC1dirty=true\uFF0C\u7136\u540E\u518D\u6267\u884Crender-watcher\u65F6\uFF0C\u80FD\u83B7\u53D6\u6700\u65B0\u7684computed\u7684value</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_8-initwatch-\u5904\u7406-watch" tabindex="-1">8. initWatch \u5904\u7406 watch <a class="header-anchor" href="#_8-initwatch-\u5904\u7406-watch" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">initWatch</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> watch</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> watch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> handler <span class="token operator">=</span> watch<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> handler<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createWatcher</span> <span class="token punctuation">(</span>
  <span class="token parameter">vm<span class="token punctuation">,</span>
  expOrFn<span class="token punctuation">,</span>
  handler<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    handler <span class="token operator">=</span> handler<span class="token punctuation">.</span>handler<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> handler <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    handler <span class="token operator">=</span> vm<span class="token punctuation">[</span>handler<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre></div><p>\u800C vm.$watch \u8C03\u7528\u7684\u662F\u5B9E\u4F8B\u539F\u578B\u4E0A\u7684\u65B9\u6CD5\uFF0C\u5373 Vue.prototype.$watch\uFF0C\u6B64\u65B9\u6CD5\u5728 Vue \u6784\u9020\u51FD\u6570\u521D\u59CB\u5316\u65F6\u58F0\u660E\u7684\u3002</p><div class="language-js"><pre><code><span class="token comment">// stateMixin(Vue)</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$watch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  <span class="token parameter">expOrFn<span class="token punctuation">,</span>
  cb<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  options<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> watcher<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handleError</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;callback for immediate watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">unwatchFn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    watcher<span class="token punctuation">.</span><span class="token function">teardown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6700\u540E\u5173\u4E8E Wtcher \u7C7B\u7684\u5B9A\u4E49\uFF0C\u8BF7\u67E5\u770B\u524D\u9762\u5173\u4E8E\u54CD\u5E94\u5F0F\u7684\u7406\u89E3 <a href="./vue-source-code-1-reactivity-2-collect-dependency.html">Vue \u54CD\u5E94\u5F0F\u539F\u7406</a></p><h2 id="_9-callhook-\u8C03\u7528-lifycycle-hooks" tabindex="-1">9. callHook \u8C03\u7528 lifycycle hooks <a class="header-anchor" href="#_9-callhook-\u8C03\u7528-lifycycle-hooks" aria-hidden="true">#</a></h2><p>\u5173\u4E8E Vue \u751F\u547D\u5468\u671F\u7684\u8C03\u7528\u65F6\u673A\uFF0C\u8BF7\u67E5\u770B\u524D <a href="./vue-source-code-6-extension-1-lifecycle.html">\u751F\u547D\u5468\u671F\u8C03\u7528</a></p>`,42),e=[o];function c(u,l,i,k,r,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{y as __pageData,f as default};
