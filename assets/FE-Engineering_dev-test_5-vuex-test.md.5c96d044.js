import{_ as n,c as s,o as a,a as t}from"./app.f1e974b0.js";const g='{"title":"\u6D4B\u8BD5 Vuex","description":"","frontmatter":{},"headers":[{"level":2,"title":"Vuex \u76F8\u5173\u6982\u5FF5","slug":"vuex-\u76F8\u5173\u6982\u5FF5"},{"level":2,"title":"\u5355\u72EC\u6D4B\u8BD5 store \u7684\u6BCF\u4E2A\u90E8\u5206","slug":"\u5355\u72EC\u6D4B\u8BD5-store-\u7684\u6BCF\u4E2A\u90E8\u5206"},{"level":2,"title":"\u6D4B\u8BD5 store \u5B9E\u4F8B","slug":"\u6D4B\u8BD5-store-\u5B9E\u4F8B"},{"level":2,"title":"\u5728\u7EC4\u4EF6\u5185\u6D4B\u8BD5 vuex","slug":"\u5728\u7EC4\u4EF6\u5185\u6D4B\u8BD5-vuex"}],"relativePath":"FE-Engineering/dev-test/5-vuex-test.md"}',p={},o=t(`<h1 id="\u6D4B\u8BD5-vuex" tabindex="-1">\u6D4B\u8BD5 Vuex <a class="header-anchor" href="#\u6D4B\u8BD5-vuex" aria-hidden="true">#</a></h1><h2 id="vuex-\u76F8\u5173\u6982\u5FF5" tabindex="-1">Vuex \u76F8\u5173\u6982\u5FF5 <a class="header-anchor" href="#vuex-\u76F8\u5173\u6982\u5FF5" aria-hidden="true">#</a></h2><ol><li>What\uFF1AVuex \u662F\u4EC0\u4E48 Vuex \u662F\u4E00\u4E2A\u72B6\u6001\uFF08state\uFF09\u7BA1\u7406\u5E93\u3002\u5982\u679C\u4F60\u767E\u5EA6\u641C\u7D22<code>state \u662F\u4EC0\u4E48</code>\uFF0C\u7ED3\u679C\u4F1A\u8BA9\u4F60\u611F\u5230\u56F0\u60D1\uFF0C\u4EBA\u4EEC\u7528\u8FD9\u4E2A\u672F\u8BED\u6307\u4EE3\u4E86\u8BB8\u591A\u6982\u5FF5\u3002</li></ol><p>\u5728 Vue \u5E94\u7528\u7A0B\u5E8F\u7684\u8BED\u5883\u4E2D\uFF0C\u72B6\u6001 state \u662F\u6307\u5B58\u50A8\u5728\u5F53\u524D\u8FD0\u884C\u7684\u5E94\u7528\u7A0B\u5E8F\u4E2D\u7684\u6570\u636E\u3002\u5B83\u53EF\u4EE5\u662F\u4E00\u4E2A API \u8C03\u7528\u7684\u8FD4\u56DE\u503C\uFF0C\u4E5F\u53EF\u4EE5\u662F\u7528\u6237\u4EA4\u4E92\u89E6\u53D1\u7684\u6570\u636E\uFF0C\u6216\u662F\u5E94\u7528\u7A0B\u5E8F\u751F\u6210\u7684\u6570\u636E\u7B49\u7B49\u3002</p><ol start="2"><li>Why\uFF1A\u4E3A\u4EC0\u4E48\u9700\u8981\u4F7F\u7528 Vuex\uFF0C\u5373\u5B83\u89E3\u51B3\u4E86\u4EC0\u4E48\u95EE\u9898</li></ol><p>\u5C0F\u660E\u548C\u5C0F\u7EA2\u5404\u9A7B\u5B88\u4E00\u4E2A\u5546\u5E97\uFF0C\u5728\u8425\u4E1A\u524D\u5B83\u4EEC\u90FD\u5BF9\u67D0\u6B3E\u624B\u673A A \u8FDB\u884C\u4E86\u5E93\u5B58\u76D8\u70B9\uFF0C\u53D1\u73B0\u5E93\u5B58\u8FD8\u6709\u4E09\u4E2A\u53EF\u4F9B\u51FA\u552E\u3002\u5728\u8425\u4E1A\u534A\u5929\u540E\uFF0C\u5C0F\u660E\u5356\u51FA\u4E00\u4E2A\u624B\u673A A\uFF0C\u5B83\u8BA4\u4E3A\u8FD8\u6709\u624B\u673A A \u8FD8\u6709\u4E24\u4E2A\u5E93\u5B58\u91CF\u3002\u5C0F\u7EA2\u5356\u51FA\u4E86\u4E8C\u4E2A\u624B\u673A A\uFF0C\u5B83\u8BA4\u4E3A\u624B\u673A A \u8FD8\u6709\u4E00\u4E2A\u5E93\u5B58\u91CF\u3002\u5F53\u4E00\u4F4D\u987E\u5BA2\u5411\u5C0F\u660E\u8D2D\u4E70\u624B\u673A A \u65F6\uFF0C\u5C0F\u660E\u81EA\u8BA4\u4E3A\u8FD8\u6709\u5E93\u5B58\uFF0C\u6536\u4E86\u6B3E\u540E\u627F\u8BA4\u5411\u987E\u5BA2\u90AE\u5BC4\uFF0C\u5374\u53D1\u73B0\u8BE5\u6B3E\u624B\u673A A \u5DF2\u7ECF\u6CA1\u6709\u5E93\u5B58\u4E86\uFF0C\u4E0D\u5F97\u4E0D\u5411\u987E\u5BA2\u9000\u6B3E\u9053\u6B49\u3002</p><p>\u9020\u6210\u8FD9\u4E2A\u95EE\u9898\u7684\u539F\u56E0\uFF0C\u5C31\u5728\u4E8E\u5C0F\u660E\u548C\u5C0F\u7EA2\u5404\u81EA\u7EF4\u62A4\u7740\u624B\u673A A \u7684\u9500\u552E\u72B6\u6001 state\uFF0C\u4F46\u5E76\u6CA1\u6709\u540C\u6B65\u624B\u673A A \u7684\u9500\u91CF\u6570\u636E\u3002</p><p>\u5728 Vue \u5E94\u7528\u7A0B\u5E8F\u4E2D\uFF0C\u5F53\u591A\u4E2A\u7EC4\u4EF6\u4F9D\u8D56\u4E8E\u540C\u4E00\u4EFD\u6570\u636E\u65F6\uFF0C\u5982\u679C\u5404\u81EA\u7BA1\u7406\u81EA\u5DF1\u7684\u6570\u636E\u72B6\u6001\uFF0C\u4E5F\u53EF\u80FD\u78B0\u5230\u8FD9\u79CD\u6570\u636E\u4E0D\u540C\u6B65\u7684\u95EE\u9898\uFF0C\u6240\u4EE5\u9700\u8981\u4E00\u4E2A\u7528\u4E8E\u5B58\u50A8\u7EC4\u4EF6\u6570\u636E\u72B6\u6001\u7684\u4E2D\u5FC3\u6E90\uFF0C\u5373 Vuex Store\uFF08\u72B6\u6001\u4ED3\u5E93\uFF09\uFF0C\u5B83\u5B9E\u73B0\u4E86\u5F53\u67D0\u4E2A\u7EC4\u4EF6\u5BF9\u67D0\u4E2A\u6570\u636E\u72B6\u6001 state \u505A\u51FA\u6539\u53D8\u540E\uFF0C\u5185\u90E8\u4F1A\u5C06\u5F53\u524D\u66F4\u65B0\u540E\u7684\u6570\u636E\u72B6\u6001 state \u540C\u6B65\u66F4\u65B0\u5230\u5176\u5B83\u4F7F\u7528\u4E86\u8BE5\u6570\u636E\u7684\u7EC4\u4EF6\u4E2D\uFF0C\u4F7F\u4ED6\u4EEC\u62FF\u5230\u7684\u6570\u636E\u72B6\u6001\u662F\u6700\u65B0\u7684\u3002</p><p>\u800C Vuex store \u5C31\u662F\u4FDD\u5B58\u6570\u636E\u72B6\u6001 state\uFF0C\u4EE5\u53CA\u5B9A\u4E49\u4E86\u80FD\u4E0E state \u8FDB\u884C\u4EA4\u4E92\u65B9\u6CD5\u7684\u5BB9\u5668\u3002</p><ol start="3"><li>How\uFF1A\u5982\u4F55\u64CD\u4F5C store</li></ol><p>Vue store \u7684\u4E00\u4E2A\u6700\u5927\u7279\u5F81\uFF0C\u662F\u7EA6\u5B9A\u4E86\u6570\u636E\u72B6\u6001\u53D8\u66F4\u9075\u5FAA\u5355\u5411\u6570\u636E\u6D41\u64CD\u4F5C\uFF0C\u4F7F\u5F97\u53EF\u4EE5\u5B8C\u5168\u8FFD\u8E2A\u5230 state \u6539\u53D8\u7684\u6765\u81EA\u54EA\u91CC\uFF0C\u5373\u8C01\u89E6\u53D1\u4E86\u6570\u636E\u72B6\u6001\u53D8\u66F4\u3002</p><p>\u5355\u8EAB\u6570\u636E\u6D41\u64CD\u4F5C\uFF1A</p><ul><li>state \u7684\u53D8\u91CF\u53EA\u80FD\u7531 mutation \u89E6\u53D1</li><li>\u7EC4\u4EF6\u4E2D\u5BF9\u9759\u6001\u53D8\u66F4\u53EF\u4EE5\u76F4\u63A5\u63D0\u4EA4\u4E00\u4E2A commit\uFF0C\u6307\u5B9A\u89E6\u53D1\u67D0\u4E2A mutate\uFF0C\u6765\u6539\u53D8\u72B6\u6001 state</li><li>\u7EC4\u4EF6\u4E2D\u5982\u679C\u9700\u8981\u6839\u636E\u5F02\u6B65\u8BF7\u6C42\u7ED3\u679C\u6765\u53D8\u91CF\u6570\u636E\u72B6\u6001\u65F6\uFF0C\u53EF\u4EE5 dispatch \u53D1\u9001\u4E00\u4E2A\u52A8\u4F5C action\uFF0C\u7136\u540E\u5F85\u52A8\u4F5C\u5B8C\u6210\u540E\u63D0\u4EA4\u4E00\u4E2A commit\uFF0C\u6307\u5B9A\u89E6\u53D1\u67D0\u4E00\u4E2A mutate \u6765\u6539\u53D8\u72B6\u6001 state</li><li>\u7EC4\u4EF6\u4E2D\u5BF9\u4E8E\u76F4\u63A5\u4F7F\u7528\u7684\u72B6\u6001\u6570\u636E\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7 <code>$store.state</code> \u76F4\u63A5\u6765\u4F7F\u7528</li><li>\u7EC4\u4EF6\u4E2D\u5BF9\u4E8E\u9700\u8981\u52A0\u5DE5\u5904\u7406\u6570\u636E\u72B6\u6001\u540E\u518D\u4F7F\u7528\uFF0C\u5219\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A getter \u83B7\u53D6\u4E00\u4E2A\u8F6C\u6362\u540E\u7684\u6570\u636E\u72B6\u6001 state\u3002</li></ul><div class="language-"><pre><code>                                   \u5F02\u6B65API
                                    ^ +
                                    | |
                                    | |
             \u52A8\u6001\u53D8\u66F4            +--+-v----+
       dispatch(action,payload)  |         |   commit(mutate,payload)
         +-----------------------&gt; Actions +----------------------+
         |                       |         |                      |
         |                       +---------+                      |
         |                                                        |
         |                                                        |
         |                                                        |
+--------+------+               \u9759\u6001\u53D8\u66F4                    +-----v-----+
|               |          commit(mutate,payload)           |           |
| Vue Component +-------------------------------------------&gt; Mutations |
|               |                                           |           |
+------^------^-+                                           +-----+-----+
       |      |                                                   |
       |      |                                                   |
       |      |                  +--------+                       |
       |      | $store.state     |        |      mutate(state)    |
       |      +------------------+ State  &lt;-----------------------+
       |                         |        |
 $store.getters                  +---+----+
       |                             |
       |  +---------+                |
       |  |         |                |
       +--+ Getters &lt;----------------+
          |         |  getter(state,getters)
          +---------+

</code></pre></div><p>\u6240\u4EE5\u4ECE\u7EC4\u4EF6\u89D2\u5EA6\u6765\u770B\uFF0C\u4F1A\u4E0E Vuex \u53D1\u751F\u4EA4\u4E92\u4E3B\u8981\u662F\uFF1A</p><ul><li>commit \u4E00\u4E2A mutation</li><li>dispatch \u4E00\u4E2A action</li><li>\u901A\u8FC7 $store.state \u6216 getters \u8BBF\u95EE state</li></ul><p>\u6240\u4EE5\u5BF9\u4E8E Vuex store \u7684\u6D4B\u8BD5\uFF0C\u90FD\u662F\u4F7F\u7528\u5F53\u524D state \u6765\u65AD\u8A00\u7EC4\u4EF6\u884C\u4E3A\u662F\u5426\u6B63\u5E38\uFF0C\u5373\u5C06 state \u7684\u53D8\u66F4\u4F5C\u4E3A\u6D4B\u8BD5\u7684\u8F93\u51FA\u6765\u65AD\u8A00\u3002</p><ol start="4"><li>vuex.store \u7684\u57FA\u672C\u7ED3\u6784\u53CA\u6CE8\u518C\u4F7F\u7528\u3002</li></ol><div class="language-js"><pre><code><span class="token comment">// 1. \u5EFA\u7ACB\u521D\u59CB store \u7684\u914D\u7F6E\u6587\u4EF6\uFF0C\u5B83\u5BFC\u51FA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u5305\u62EC\u57FA\u672C\u7684 state / getter / mutation / action \u5C5E\u6027</span>
<span class="token keyword">const</span> storeConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">doubleCount</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> getters</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token constant">ADD</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>count <span class="token operator">=</span> payload
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">fetchCount</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// context \u76F8\u5F53\u4E8E\u4E00\u4E2A store \u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u5305\u542B\u4E86 commit \u65B9\u6CD5</span>
      <span class="token keyword">return</span> axios
        <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>payload<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;ADD&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>count<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;API Error occurred&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// 2. \u5229\u7528\u914D\u7F6E\u6587\u4EF6\uFF0C\u521D\u59CB\u5316\u4E00\u4E2A store</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span>

<span class="token comment">// 3. \u5C06\u5F53\u524D store \u6CE8\u518C\u5230\u5F53\u524D vue \u5E94\u7528\u7A0B\u5E8F\u4E2D</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  store<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E3A\u4E86\u4FBF\u4E8E\u6D4B\u8BD5 store \u5404\u4E2A\u90E8\u5206\uFF0C\u53EF\u4EE5\u5BF9\u5404\u4E2A\u90E8\u5206\u521B\u5EFA\u72EC\u7ACB\u7684\u6587\u4EF6\u6A21\u5757\u5BFC\u51FA\u9ED8\u8BA4\u5BF9\u8C61\u3002\u7136\u540E\u5728\u4E00\u4E2A\u6587\u4EF6\u4E2D\u7EDF\u4E00\u5408\u5E76\u6210\u914D\u7F6E\u5BF9\u8C61\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> getters <span class="token keyword">from</span> <span class="token string">&#39;./getters.js&#39;</span>
<span class="token keyword">import</span> mutations <span class="token keyword">from</span> <span class="token string">&#39;./mutations.js&#39;</span>
<span class="token keyword">import</span> actions <span class="token keyword">from</span> <span class="token string">&#39;./actions.js&#39;</span>

<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  state<span class="token punctuation">,</span>
  getters<span class="token punctuation">,</span>
  mutations<span class="token punctuation">,</span>
  actions<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5BF9\u6574\u4E2A Vuex \u7684\u6D4B\u8BD5\u53EF\u4EE5\u6709\u4EE5\u4E0B\u51E0\u79CD\u6D4B\u8BD5\uFF1A</p><ul><li>\u4E3A Vuex store \u7684 getter / mutation / action \u5206\u522B\u7F16\u5199\u5355\u5143\u6D4B\u8BD5</li><li>\u4E3A\u4E00\u4E2A Vuex stroe \u5B9E\u4F8B\u7F16\u5199\u5355\u5143\u6D4B\u8BD5</li><li>\u4E3A\u8FDE\u63A5 Vuex \u7684\u7EC4\u4EF6\u7F16\u5199\u5355\u5143\u6D4B\u8BD5 <ul><li>localVue \u6CE8\u518C store \u5B9E\u4F8B</li><li>mock \u6A21\u62DF $store</li></ul></li></ul><h2 id="\u5355\u72EC\u6D4B\u8BD5-store-\u7684\u6BCF\u4E2A\u90E8\u5206" tabindex="-1">\u5355\u72EC\u6D4B\u8BD5 store \u7684\u6BCF\u4E2A\u90E8\u5206 <a class="header-anchor" href="#\u5355\u72EC\u6D4B\u8BD5-store-\u7684\u6BCF\u4E2A\u90E8\u5206" aria-hidden="true">#</a></h2><p>store \u4E2D\u6240\u6709\u90E8\u5206\u90FD\u662F javascript \u51FD\u6570\uFF0C\u6240\u4EE5\u6D4B\u8BD5\u76F8\u5BF9\u8F83\u4E3A\u7B80\u5355\u3002</p><ol><li>getter</li></ol><p>\u4EFB\u4F55 getter \u51FD\u6570\u90FD\u662F\u7EAF\u51FD\u6570\uFF0C\u56E0\u4E3A state \u7684\u53D8\u66F4\u7EA6\u5B9A\u53EA\u80FD\u7531 mutation \u89E6\u53D1\uFF0C\u6240\u4EE5 getter \u51FD\u6570\u5904\u7406\u4E0D\u4F1A\u6539\u53D8\u5176\u8F93\u5165 state\uFF0C\u57FA\u672C\u5C31\u662F\u4E00\u4E2A\u7EAF\u51FD\u6570\u7684\u6D4B\u8BD5\uFF0C\u65AD\u8A00\u5176\u8F93\u5165\u662F\u5426\u6709\u9884\u671F\u7684\u8F93\u51FA\u5373\u53EF\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> getters <span class="token keyword">from</span> <span class="token string">&#39;src/store/getters.js&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getters&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;input a nubme, output a double value&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ipt <span class="token operator">=</span> <span class="token number">2</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getters<span class="token punctuation">.</span><span class="token function">doubleCount</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> ipt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>ipt <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ol><li>mutation</li></ol><p>\u4E00\u4E2A mutation \u51FD\u6570\u7684\u4F5C\u7528\u5C31\u662F\u66F4\u6539 state\uFF0C\u6240\u4EE5 mutation \u51FD\u6570\u7684\u6D4B\u8BD5\u59CB\u7EC8\u662F\u65AD\u8A00 state \u5BF9\u8C61\u6709\u6CA1\u6709\u88AB\u6B63\u786E\u66F4\u6539\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> mutations <span class="token keyword">from</span> <span class="token string">&#39;src/store/mutations.js&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;mutations&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;ADD a number to the state.count&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">10</span> <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u8981\u4F5C\u4E3A payload \u53C2\u6570\u7684\u503C</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6A21\u62DF\u4E00\u4E2A\u5047\u7684 state \u5BF9\u8C61</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    mutations<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> num<span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ol start="2"><li>action</li></ol><p>\u901A\u5E38 action \u51FD\u6570\u91CC\u4F1A\u5F02\u6B65\u8FDB\u884C API \u63A5\u53E3\u8C03\u7528\uFF0C\u4F46\u6211\u4EEC\u6D4B\u8BD5\u65F6\u53EF\u4E0D\u60F3\u53D1\u9001\u4E00\u4E2A\u771F\u5B9E\u8BF7\u6C42\u6765\u803D\u8BEF\u6D4B\u8BD5\u65F6\u957F\u3002</p><p>\u6240\u4EE5\u4E00\u4E2A action \u51FD\u6570\u7684\u6D4B\u8BD5\u96BE\u70B9\u5728\u4E8E\u9700\u8981\u4F7F\u7528 <strong>\u6A21\u62DF\u4EE3\u7801</strong> \u6765\u6A21\u62DF\u51FD\u6570\u5185\u7528\u4E8E\u8BF7\u6C42\u7684\u5BF9\u8C61\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> actions <span class="token keyword">from</span> <span class="token string">&#39;src/store/actions.js&#39;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

<span class="token function">decrible</span><span class="token punctuation">(</span><span class="token string">&#39;actions&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;fetchCount&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;api.test.com&#39;</span>
    <span class="token keyword">const</span> mockRes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">commit</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">get</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    axios<span class="token punctuation">.</span>get<span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span>mockRes<span class="token punctuation">)</span>
    <span class="token keyword">await</span> actions<span class="token punctuation">.</span><span class="token function">fetchCount</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token punctuation">{</span>url<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u6CE8\u610F fetchCount \u51FD\u6570\u7684\u5B9E\u73B0\u9700\u8981\u8FD4\u56DE promise \u5BF9\u8C61</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span>get<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment">// \u65AD\u8A00 fetch \u65B9\u6CD5\u4EE5\u6B63\u786E\u53C2\u6570\u88AB\u8C03\u7528</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span>get<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveReturnedWith</span><span class="token punctuation">(</span>mockRes<span class="token punctuation">)</span> <span class="token comment">// \u4E14\u8FD4\u56DE\u6B63\u786E\u503C</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>commit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span><span class="token string">&#39;ADD&#39;</span><span class="token punctuation">,</span> mockRes<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token comment">// \u65AD\u8A00 commit \u88AB\u8C03\u7528\uFF0C\u4E14\u4F20\u5165\u6B63\u786E\u7684\u53C2\u6570</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;fetchCount Error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;api.test.com&#39;</span>
    <span class="token keyword">const</span> errorMsg <span class="token operator">=</span> <span class="token string">&#39;API Error occurred&#39;</span>
    jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">get</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    axios<span class="token punctuation">.</span>get<span class="token punctuation">.</span><span class="token function">mockRejectedValue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>errorMsg<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>actions<span class="token punctuation">.</span><span class="token function">fetchCount</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token punctuation">{</span>url<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toThrow</span><span class="token punctuation">(</span>errorMsg<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5-store-\u5B9E\u4F8B" tabindex="-1">\u6D4B\u8BD5 store \u5B9E\u4F8B <a class="header-anchor" href="#\u6D4B\u8BD5-store-\u5B9E\u4F8B" aria-hidden="true">#</a></h2><p>\u6D4B\u8BD5 vuex \u53E6\u4E00\u79CD\u65B9\u6CD5\u662F\u6D4B\u8BD5\u4E00\u4E2A store \u5B9E\u4F8B\u3002</p><p>\u6D4B\u8BD5\u65AD\u8A00\uFF1A\u5C06 mutation \u548C action \u4F5C\u4E3A store \u7684\u8F93\u5165\uFF0Cstate \u548C getter \u7684\u7ED3\u679C\u4F5C\u4E3A\u8F93\u51FA\u3002</p><blockquote><p>\u5355\u5143\u6D4B\u8BD5\u7684\u57FA\u672C\u539F\u5219\u662F\u5982\u4F55\u63D0\u4F9B\u8F93\u5165\u548C\u65AD\u8A00\u8F93\u51FA\u3002</p></blockquote><p>\u5148\u7528\u4E00\u4E2A\u7B80\u5355\u7684\u8BA1\u6570\u5668\u793A\u4F8B\u6765\u6D4B\u8BD5</p><div class="language-js"><pre><code><span class="token comment">// storeConfig.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>count<span class="token operator">--</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> storeConfig <span class="token keyword">from</span> <span class="token string">&#39;src/store/index.js&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span> <span class="token comment">// 2. \u521B\u5EFA\u4E00\u4E2A store \u5B9E\u4F8B</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;increment updates state.count by 1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u65AD\u8A00\u521D\u59CB\u503C state.count</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u63D0\u4EA4\u4E00\u4E2A increment \u7684 commit</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;decrement updates state.count by 1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;decrement&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0A\u9762\u6D4B\u8BD5\u7528\u4F8B\u6D4B\u8BD5\u901A\u8FC7\uFF0C\u4F46\u662F\u5B58\u5728\u4E24\u4E2A\u9690\u85CF\u95EE\u9898\uFF1A</p><ul><li>\u4E00\u4E2A store \u4E2D\u7684 state \u5BF9\u8C61\u662F\u5BF9 storeConfig \u914D\u7F6E\u4E2D\u5BF9\u8C61\u5B9A\u4E49\u7684 state \u5BF9\u8C61\u7684\u5F15\u7528\u3002</li></ul><p>store \u5BF9 state \u7684\u4EFB\u4F55\u66F4\u6539\u90FD\u4F1A\u6539\u53D8\u914D\u7F6E\u6587\u4EF6 storeConfig \u4E2D\u7684 state \u7684\u503C\uFF0C\u8FD9\u6837\u5C31\u5BFC\u81F4\u4F60\u7F16\u5199\u5176\u5B83\u6D4B\u8BD5\u7528\u4F8B\u65F6\uFF0Cstate.count \u4E0D\u518D\u662F\u521D\u59CB\u503C\u3002\u8FD9\u5C31\u662F<strong>\u6D4B\u8BD5\u6CC4\u9732</strong>\u3002</p><p>\u6BD4\u5982\u4E0A\u9762\u7B2C\u4E8C\u4E2A\u6D4B\u8BD5\u7528\u4F8B <code>decrement</code> \u4E2D\uFF0C\u65AD\u8A00 state.count \u7684\u521D\u59CB\u503C\u6B63\u662F\u4E0A\u4E00\u4E2A\u6D4B\u8BD5\u7528\u4F8B\u66F4\u6539\u8FC7\u7684\u503C\u3002</p><p>\u89E3\u51B3\u529E\u6CD5\uFF1A\u5C1D\u8BD5\u514B\u9686 storeConfig \u914D\u7F6E\u5BF9\u8C61\uFF0C\u7528\u514B\u9686\u5BF9\u8C61\u53BB\u521D\u59CB\u5316 store \u5373\u53EF\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> cloneDeep <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span>
<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> clonedStoreConfig <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span>
  Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span> <span class="token comment">// 1. \u5728 Vue \u4E0A\u6CE8\u518C Vuex</span>
  <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span>clonedStoreConfig<span class="token punctuation">)</span> <span class="token comment">// 2. \u521B\u5EFA\u4E00\u4E2A store \u5B9E\u4F8B</span>

  <span class="token comment">// \u7701\u7565</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> cloneDeep <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span>
<span class="token keyword">import</span> storeConfig <span class="token keyword">from</span> <span class="token string">&#39;src/store/index.js&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;increment updates state.count by 1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> clonedStoreConfig <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span>
    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span>clonedStoreConfig<span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;decrement updates state.count by 1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> clonedStoreConfig <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span>
    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span>clonedStoreConfig<span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u65AD\u8A00\u521D\u59CB\u503C 0</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;decrement&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u73B0\u5728\u6765\u770B\u4E00\u4E2A\u5B8C\u6574 Vuex \u6D4B\u8BD5\u4F8B\u5B50\uFF1A \u57FA\u672C\u529F\u80FD\uFF1Aactions \u4E2D\u5B9A\u4E49\u4E00\u4E2A\u8BF7\u6C42\u5217\u8868\u6570\u636E\u7684\u5F02\u6B65\u8BF7\u6C42\uFF0C\u5C06\u8FD4\u56DE\u6570\u636E commit \u4E00\u4E2A mutation \u5B58\u5230 state.list \u6570\u7EC4\u5BF9\u8C61\u4E2D\u3002</p><div class="language-js"><pre><code><span class="token comment">// src/api/user.js</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>

<span class="token comment">// \u5728 tests/__mocks__ \u6587\u4EF6\u4E2D\u5EFA\u7ACB\u540C\u540D\u7684 user.js \u6A21\u62DF\u6587\u4EF6</span>
<span class="token comment">// tests/__mocks__/user.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// /src/store/index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getUserList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/api/user.js&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">userList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// [{id, name}]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">getUserNames</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>userList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token constant">SET_USERLIST</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> <span class="token punctuation">{</span> userList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>userList <span class="token operator">=</span> userList
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">httpGetUserList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> commit <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> url <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserList</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_USERLIST&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u6587\u4EF6 tests/vuex.spec.js</span>

<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> cloneDeep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span>

<span class="token keyword">import</span> storeConfig <span class="token keyword">from</span> <span class="token string">&#39;src/store/index.js&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getUserList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/api/user.js&#39;</span>

jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;src/api/user.js&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> store

<span class="token function">beforEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA store \u5B9E\u4F8B</span>
  <span class="token keyword">const</span> clonedStoreConfig <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span>
  store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Veux<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span>clonedStoreConfig<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Vuex store&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;getter getUserNames&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tom&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jane&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span><span class="token function">getUserNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;jane&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;mutation SET_USERLIST&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u51C6\u5907\u6A21\u62DF\u6570\u636E</span>
    <span class="token keyword">const</span> mockData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>

    <span class="token comment">// commit mutation \u89E6\u53D1\u4F5C\u4E3A\u8F93\u5165</span>
    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_USERLIST&#39;</span><span class="token punctuation">,</span> mockData<span class="token punctuation">)</span>

    <span class="token comment">// \u65AD\u8A00 state \u7684\u8F93\u51FA\u6B63\u786E</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>mockData<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;dispatch httpGetUserList&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    expect<span class="token punctuation">.</span><span class="token function">assertions</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// \u65AD\u8A00\u5F02\u6B65\u6D4B\u8BD5\u4E2D\u5C06\u4F1A\u6210\u529F\u4E24\u4E2A\u65AD\u8A00</span>
    <span class="token comment">// \u51C6\u5907\u6A21\u62DF\u6570\u636E</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;api/users&#39;</span>
    <span class="token keyword">const</span> mockResData <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;lilei&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hanmeimei&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
    getUserList<span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span>mockResData<span class="token punctuation">)</span>

    <span class="token comment">// dispatch action \u89E6\u53D1\u4F5C\u4E3A\u8F93\u5165</span>
    <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;httpGetUserList&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>

    <span class="token comment">// \u65AD\u8A00 1. getUserList \u662F\u5426\u88AB\u6B63\u786E\u7684\u5165\u53C2\u8C03\u7528\uFF1B2. state.userList \u662F\u5426\u662F\u6B63\u786E\u7684\u6570\u636E</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>getUserList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>mockResData<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u5728\u7EC4\u4EF6\u5185\u6D4B\u8BD5-vuex" tabindex="-1">\u5728\u7EC4\u4EF6\u5185\u6D4B\u8BD5 vuex <a class="header-anchor" href="#\u5728\u7EC4\u4EF6\u5185\u6D4B\u8BD5-vuex" aria-hidden="true">#</a></h2><p>\u4E3A\u4E86\u80FD\u5728\u7EC4\u4EF6\u5185\u90E8\u4F7F\u7528 vuex store\uFF0C\u6211\u4EEC\u901A\u5E38\u4F1A\u5728 main.js \u4E2D\u5168\u5C40\u6CE8\u518C store\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> storeConfig <span class="token keyword">from</span> <span class="token string">&#39;src/store/index.js&#39;</span>

<span class="token comment">// \u6CE8\u518C vuex\uFF0C\u5373\u5168\u5C40\u6DF7\u5165 beforeCreate \u94A9\u5B50\u4E2D\u6267\u884C vuexInit \u51FD\u6570\uFF0C\u5728\u7EC4\u4EF6 this \u5BF9\u8C61\u4E0A\u6302\u8F7D $store</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>

<span class="token comment">// \u5B9E\u4F8B\u5316 store</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  store<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E00\u4E2A\u7B80\u5355\u7684\u7EC4\u4EF6\u8BA1\u6570\u6D4B\u8BD5\uFF1A</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>plus<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>increase<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Plus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>minus<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>decrease<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Minus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Counter&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>getCount
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;increase&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">decrease</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;decrease&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// storeConfig</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>count<span class="token operator">--</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> shallowMount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> cloneDeep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span>

<span class="token keyword">import</span> storeConfig <span class="token keyword">from</span> <span class="token string">&#39;src/store/index.js&#39;</span>
<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">&#39;src/components/Counter&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Counter.vue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>
  <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u907F\u514D storeConfig \u56E0\u4E3A\u5BF9\u8C61\u5F15\u7528\u800C\u6C61\u67D3</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Counter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    store<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;get state.count init render&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> span <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>span<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;commit a mutation increment when a button is clicked&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> btnIncrement <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#plus&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> btnDecrement <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#minus&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> span <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> btnIncrement<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>span<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> btnDecrement<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>span<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD9\u91CC\u6D4B\u8BD5\u7528\u4F8B\u4F1A\u901A\u8FC7\uFF0C\u5E76\u4E14\u6211\u4EEC\u901A\u8FC7\u6DF1\u62F7\u8D1D\u907F\u514D\u4E86\u4E00\u4E2A\u6F5C\u5728\u7684<strong>\u6D4B\u8BD5\u6CC4\u9732</strong>\u3002\u4F46\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u9690\u85CF\u7740\u53E6\u4E00\u4E2A\u6D4B\u8BD5\u6CC4\u9732\u7684\u95EE\u9898\uFF1A\u5373\u76F4\u63A5\u4F7F\u7528\u5168\u5C40\u552F\u4E00\u7684 Vue \u57FA\u7840\u6784\u9020\u51FD\u6570\u6765\u6CE8\u518C Vuex\uFF0C\u4F1A\u5BFC\u81F4\u5176\u5B83\u6D4B\u8BD5\u5957\u4EF6\u4F7F\u7528\u7684 Vue \u88AB\u6C61\u67D3\u4E86\u3002</p><p>\u5728 JEST \u4E2D\uFF0C\u6BCF\u4E2A\u6D4B\u8BD5\u6587\u4EF6\u90FD\u62E5\u6709\u72EC\u7ACB\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CVue Test Utils \u6302\u8F7D\u4E00\u4E2A\u7EC4\u4EF6\u65F6\u4F7F\u7528\u5168\u5C40\u552F\u4E00\u7684 Vue \u57FA\u7840\u6784\u9020\u51FD\u6570\u3002</p><p>\u4E3A\u4E86\u4FDD\u6301\u5355\u5143\u6D4B\u8BD5\u7684\u9694\u79BB\u548C\u6E05\u6D01\uFF0C\u5BF9\u4E8E\u9700\u8981\u6269\u5C55 Vue \u57FA\u7840\u6784\u9020\u51FD\u6570\u7684\u529F\u80FD\u7684\u64CD\u4F5C\u90FD\u5E94\u8BE5\u4F7F\u7528 Vue \u7684\u672C\u5730\u526F\u672C\u3002\u800C <code>@vue/test-utils</code> \u6D4B\u8BD5\u5957\u4EF6\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5DE5\u5382\u51FD\u6570 <code>createLocalVue</code> \u6765\u521B\u5EFA\u4E00\u4E2A Vue \u57FA\u7840\u6784\u9020\u51FD\u6570\u7684\u672C\u5730\u526F\u672C\u3002</p><blockquote><p>\u539F\u4EF6\u548C\u590D\u5370\u4EF6\uFF1A\u5728\u9700\u8981\u4F7F\u7528\u8EAB\u4EFD\u8BC1\u7684\u5730\u65B9\uFF0C\u90FD\u4E0D\u4F1A\u628A\u8EAB\u4EFD\u8BC1\u539F\u4EF6\u7ED9\u5BF9\u65B9\u5904\u7406\uFF0C\u800C\u662F\u5F71\u5370\u4E00\u4EFD\u526F\u672C\u6587\u4EF6\u3002\u540C\u6837\u7684\uFF0C\u5C06 Vue \u57FA\u7840\u6784\u9020\u51FD\u6570\u89C6\u4E3A\u539F\u4EF6\uFF0ClocalVue \u6784\u9020\u51FD\u6570\u5C31\u662F\u539F\u4EF6\u7684\u590D\u5370\u4EF6\uFF0C\u5B83\u63D0\u4F9B\u4E86\u539F\u7248\u76F8\u540C\u7684\u529F\u80FD\uFF0C\u5982\u679C\u4F60\u9700\u8981\u5728\u6D4B\u8BD5\u4EE3\u7801\u4E2D\u66F4\u6539 Vue \u57FA\u7840\u6784\u9020\u51FD\u6570\uFF0C\u5C31\u4F7F\u7528\u672C\u5730\u590D\u5370\u4EF6 LocalVue\u3002</p></blockquote><div class="language-js"><pre><code><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> shallowMount<span class="token punctuation">,</span> createLocalVue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> cloneDeep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span>

<span class="token keyword">import</span> storeConfig <span class="token keyword">from</span> <span class="token string">&#39;src/store/index.js&#39;</span>
<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">&#39;src/components/Counter&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Counter.vue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> localVue <span class="token operator">=</span> <span class="token function">createLocalVue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  localVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>
  <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>storeConfig<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u907F\u514D storeConfig \u56E0\u4E3A\u5BF9\u8C61\u5F15\u7528\u800C\u6C61\u67D3</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Counter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    localVue<span class="token punctuation">,</span> <span class="token comment">// \u4F5C\u4E3A\u6302\u8F7D\u9009\u9879\u4F20\u5165</span>
    store<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// \u7701\u7565\u4EE3\u7801</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0A\u9762\u8FD9\u79CD\u901A\u8FC7\u5F15\u5165 localVue\uFF0C\u5E76\u6CE8\u518C store \u7684\u65B9\u5F0F\uFF0C\u4F7F\u5F97\u6D4B\u8BD5\u4EE3\u7801\u4E2D\u5B58\u5728\u4E00\u4E9B\u5197\u4F59\u7684\u6A21\u677F\u4EE3\u7801\uFF0C\u867D\u7136\u6211\u4EEC\u53EF\u4EE5\u5728\u4F7F\u7528\u5DE5\u5382\u51FD\u6570\u6216\u5728 jest \u7684\u94A9\u5B50\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C\u6765\u51CF\u5C11\u5197\u4F59\u4EE3\u7801\u3002</p><p>\u4F46\u5982\u679C\u6709\u66F4\u591A\u7684\u7EC4\u4EF6\u9700\u8981\u6D4B\u8BD5 Vuex store \u529F\u80FD\uFF0C\u4ECD\u7136\u663E\u5F97\u8F83\u4E3A\u7E41\u7410\u3002\u6240\u4EE5\u4E00\u79CD\u66F4\u597D\u7684\u65B9\u6CD5\u662F\u4F7F\u7528 <code>@vue/test-utils</code> \u6D4B\u8BD5\u5957\u4EF6\u63D0\u4F9B\u7684 <code>mocks</code> \u6302\u8F7D\u9009\u9879\u6765\u6A21\u62DF\u5F15\u5165\u7684\u5168\u5C40\u516C\u5171\u53D8\u91CF\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> shallowMount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">&#39;src/components/Counter&#39;</span>

<span class="token function">descible</span><span class="token punctuation">(</span><span class="token string">&#39;counter.vue store&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;getters getCount&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Counter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">mocks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">$store</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">getCount</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;11&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;commit a mutation when a button is clicked&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mockStore <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">commit</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>

    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Counter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">mocks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">$store</span><span class="token operator">:</span> mockStore<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#plus&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>mockStore<span class="token punctuation">.</span>commit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;dispatches an action when a button is clicked&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mockStore <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">dispatch</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>ComponentWithButtons<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">mocks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">$store</span><span class="token operator">:</span> mockStore<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.dispatch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>mockStore<span class="token punctuation">.</span>dispatch<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span><span class="token string">&#39;httpGetUserList&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;api/users&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h1 id="\u603B\u7ED3\uFF1A" tabindex="-1">\u603B\u7ED3\uFF1A <a class="header-anchor" href="#\u603B\u7ED3\uFF1A" aria-hidden="true">#</a></h1><p>\u5BF9\u6574\u4E2A Vuex \u7684\u6D4B\u8BD5\u53EF\u4EE5\u6709\u4EE5\u4E0B\u51E0\u79CD\u6D4B\u8BD5\uFF1A</p><ul><li>\u4E3A Vuex store \u7684 getter / mutation / action \u5206\u522B\u7F16\u5199\u5355\u5143\u6D4B\u8BD5</li><li>\u4E3A\u4E00\u4E2A Vuex stroe \u5B9E\u4F8B\u7F16\u5199\u5355\u5143\u6D4B\u8BD5</li><li>\u4E3A\u8FDE\u63A5 Vuex \u7684\u7EC4\u4EF6\u7F16\u5199\u5355\u5143\u6D4B\u8BD5 <ul><li>localVue \u6CE8\u518C store \u5B9E\u4F8B\u6765\u6D4B\u8BD5</li><li>mocks \u6302\u8F7D\u9009\u9879\u4F20\u5165\u6A21\u62DF\u7684 $store</li></ul></li></ul><p>\u6240\u4EE5\u66F4\u5EFA\u8BAE\u7684 vuex \u6D4B\u8BD5\u7EC4\u5408\u5E94\u8BE5\u662F\uFF1A</p><ul><li>\u4E3A\u4E00\u4E2A Vuex stroe \u5B9E\u4F8B\u7F16\u5199\u5355\u5143\u6D4B\u8BD5</li><li>\u8FDE\u63A5\u4E86 Vuex \u7684\u7EC4\u4EF6\uFF0C\u4F7F\u7528 mocks \u6302\u8F7D\u9009\u9879\u4F20\u5165\u6A21\u62DF\u7684 $store \u6765\u7F16\u5199\u5355\u5143\u6D4B\u8BD5</li></ul><p>\u53E6\u5916\u6709\u4E24\u79CD<strong>\u6D4B\u8BD5\u6CC4\u9732</strong>\u7684\u60C5\u51B5\u8981\u6CE8\u610F\uFF1A</p><ul><li>storeConfig \u5BF9\u8C61\u5F15\u7528\uFF0C\u9700\u8981\u4F7F\u7528\u6DF1\u62F7\u8D1D\u6765\u590D\u5236\u4E00\u4EFD\u526F\u672C\u4F7F\u7528</li><li>Vue \u5168\u5C40\u529F\u80FD\u7684\u6CE8\u518C\u9700\u8981\u4F7F\u7528 createLocalVue \u51FD\u6570\u751F\u6210\u4E00\u4E2A\u672C\u5730 Vue \u7684\u526F\u672C\u6765\u6CE8\u518C\u3002</li></ul><p>\u8FD9\u6837\u7684\u76EE\u7684\u90FD\u662F\u4E3A\u4E86\u4FDD\u6301\u6BCF\u4E2A\u6D4B\u8BD5\u6587\u4EF6\u4E0A\u4E0B\u6587\u73AF\u5883\u7684\u9694\u79BB\u548C\u6E05\u6D01\u3002</p>`,74),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{g as __pageData,y as default};
