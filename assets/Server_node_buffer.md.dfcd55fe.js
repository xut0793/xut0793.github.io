import{_ as n,c as s,o as a,a as t}from"./app.fa011131.js";const d='{"title":"Buffer \u7F13\u51B2\u5668","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u521B\u5EFA","slug":"\u521B\u5EFA"},{"level":2,"title":"\u5199\u5165","slug":"\u5199\u5165"},{"level":2,"title":"\u8BFB\u53D6","slug":"\u8BFB\u53D6"},{"level":2,"title":"\u7C7B\u6570\u7EC4\u64CD\u4F5C","slug":"\u7C7B\u6570\u7EC4\u64CD\u4F5C"},{"level":2,"title":"\u76F8\u5173\u5E38\u91CF","slug":"\u76F8\u5173\u5E38\u91CF"},{"level":3,"title":"\u6570\u7EC4\u76F8\u5173\u64CD\u4F5C\u793A\u4F8B\uFF1A","slug":"\u6570\u7EC4\u76F8\u5173\u64CD\u4F5C\u793A\u4F8B\uFF1A"}],"relativePath":"Server/node/buffer.md"}',p={},o=t(`<h1 id="buffer-\u7F13\u51B2\u5668" tabindex="-1">Buffer \u7F13\u51B2\u5668 <a class="header-anchor" href="#buffer-\u7F13\u51B2\u5668" aria-hidden="true">#</a></h1><p><div class="table-of-contents"><ul><li><a href="#\u521B\u5EFA">\u521B\u5EFA</a></li><li><a href="#\u5199\u5165">\u5199\u5165</a></li><li><a href="#\u8BFB\u53D6">\u8BFB\u53D6</a></li><li><a href="#\u7C7B\u6570\u7EC4\u64CD\u4F5C">\u7C7B\u6570\u7EC4\u64CD\u4F5C</a></li><li><a href="#\u76F8\u5173\u5E38\u91CF">\u76F8\u5173\u5E38\u91CF</a><ul><li><a href="#\u6570\u7EC4\u76F8\u5173\u64CD\u4F5C\u793A\u4F8B\uFF1A">\u6570\u7EC4\u76F8\u5173\u64CD\u4F5C\u793A\u4F8B\uFF1A</a></li></ul></li></ul></div></p><p>\u5177\u4F53Buffer\u7684\u6982\u5FF5\u89C1\u4E0A\u4E00\u8282\uFF0C\u8FD9\u8282\u4E3B\u8981\u8BB2Buffer\u64CD\u4F5C\u7684\u4E3B\u8981API</p><h2 id="\u521B\u5EFA" tabindex="-1">\u521B\u5EFA <a class="header-anchor" href="#\u521B\u5EFA" aria-hidden="true">#</a></h2><div class="language-js"><pre><code>Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span>size<span class="token punctuation">[</span><span class="token punctuation">,</span> fill<span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code>Buffer<span class="token punctuation">.</span><span class="token function">allocUnsafe</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span>
Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>string<span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>\u793A\u4F8B\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">let</span> buf1 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf2 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf3 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// alloc\u7533\u8BF7\u5185\u5B58\u7F13\u51B2\u65F6\u4F1A\u5BF9\u8FD9\u6BB5\u7F13\u51B2\u533A\u8FDB\u884C\u5185\u5BB9\u6E05\u9664\uFF0C\u5373\u7ED3\u679C\u662F\u8FD9\u4E2Abuffer\u662F\u7A7A\u767D\u7684\u3002</span>
<span class="token comment">// allocUnsafe \u7533\u8BF7\u65F6\u53EA\u4F1A\u4FDD\u8BC1\u5927\u5C0F\u7B26\u5408\uFF0C\u4F46\u5185\u5BB9\u4E0D\u4F1A\u53BB\u6E05\u9664\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u5185\u5B58\u7F13\u5B58\u51B2\u6709\u53EF\u80FD\u662F\u6709\u5386\u53F2\u5185\u5BB9\u7684\uFF0C\u90A3toString\u80FD\u628A\u5185\u5BB9\u8BFB\u51FA\u6765\uFF0C\u6240\u4EE5\u4E0D\u5B89\u5168\uFF0C\u4EE5unsafe\u547D\u540D</span>
<span class="token keyword">let</span> buf4 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">allocUnsafe</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf4&#39;</span><span class="token punctuation">,</span> buf4<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// \u6CA1\u6709\u5199\u5165\u8FC7\u5185\u5BB9\uFF0C\u4F46\u8F93\u51FA\u662F\u6709\u5185\u5BB9\u7684\u054F\uFFFD</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">let</span> buf5 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0xe8</span><span class="token punctuation">,</span><span class="token number">0xbf</span><span class="token punctuation">,</span><span class="token number">0x9e</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf5&#39;</span><span class="token punctuation">,</span>buf5<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FDE</span>

<span class="token keyword">let</span> buf6 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>buf5<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf6&#39;</span><span class="token punctuation">,</span> buf6<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FDE</span>

<span class="token keyword">let</span> buf7 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf7&#39;</span><span class="token punctuation">,</span> buf7<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span>
</code></pre></div><h2 id="\u5199\u5165" tabindex="-1">\u5199\u5165 <a class="header-anchor" href="#\u5199\u5165" aria-hidden="true">#</a></h2><div class="language-js"><pre><code>buf<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>string<span class="token punctuation">[</span><span class="token punctuation">,</span> offset<span class="token punctuation">[</span><span class="token punctuation">,</span> length<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token punctuation">,</span> offset<span class="token punctuation">[</span><span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>\u793A\u4F8B\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">let</span> buf8 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
buf8<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token comment">// let buf8 = Buffer.alloc(6,&#39;b&#39;,&#39;utf8&#39;)</span>

<span class="token keyword">let</span> buf9 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
buf9<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf9&#39;</span><span class="token punctuation">,</span> buf9<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// { type: &#39;Buffer&#39;, data: [ 0, 0, 98, 98, 0, 0 ] }</span>

<span class="token keyword">let</span> buf10 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
buf10<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf10&#39;</span><span class="token punctuation">,</span> buf10<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// hello world</span>

<span class="token comment">// \u91CD\u590D\u5199\u4F1A\u8986\u76D6\uFF0C\u8D85\u51FA\u7533\u8BF7\u7684\u7F13\u5B58\u533A\u5927\u5C0F\u4F1A\u6EA2\u51FA\u622A\u65AD</span>
buf10<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;this is buffer&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf10&#39;</span><span class="token punctuation">,</span> buf10<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// this is buf</span>
</code></pre></div><h2 id="\u8BFB\u53D6" tabindex="-1">\u8BFB\u53D6 <a class="header-anchor" href="#\u8BFB\u53D6" aria-hidden="true">#</a></h2><div class="language-js"><pre><code>buf<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">[</span>encoding<span class="token punctuation">[</span><span class="token punctuation">,</span> start<span class="token punctuation">[</span><span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token comment">// {type:&#39;Buffer&#39;, data: [116,104]}</span>
<span class="token comment">// data\u6570\u7EC4\u5185\u5B57\u8282\u8F93\u51FA\u4E3A10\u8FDB\u5236\u6570</span>
</code></pre></div><p>\u6CE8\u610F\uFF1A<code>toJSON()</code>\u8F93\u51FA\u7684data\u6570\u636E\u9879\u662F\u5341\u8FDB\u5236\u6570\u503C</p><h2 id="\u7C7B\u6570\u7EC4\u64CD\u4F5C" tabindex="-1">\u7C7B\u6570\u7EC4\u64CD\u4F5C <a class="header-anchor" href="#\u7C7B\u6570\u7EC4\u64CD\u4F5C" aria-hidden="true">#</a></h2><p>Buffer \u7C7B\u7684\u5B9E\u4F8B\u662F\u4E00\u4E2A\u7C7B\u6570\u7EC4\uFF0C\u6BCF\u4E2A\u6570\u7EC4\u5143\u7D20\u5373\u5176\u4E2D\u4E00\u4E2A\u5B57\u8282\u6570\u636E\u3002\u6240\u4EE5\u6570\u7EC4\u76F8\u5173\u65B9\u6CD5\u5728Buffer\u4E0A\u4E5F\u6709\u5BF9\u5E94\u7684\u5B9E\u73B0\u3002</p><div class="language-js"><pre><code>Buffer<span class="token punctuation">.</span><span class="token function">isBuffer</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
buf<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token comment">// \u8FD4\u56DE\u7684\u8BE5\u4F4D\u7F6E\u5B57\u8282\u7684\u5341\u8FDB\u5236\u6570\u503C 0 - 255</span>
buf<span class="token punctuation">.</span>length
Buffer<span class="token punctuation">.</span><span class="token function">byteLength</span><span class="token punctuation">(</span>string<span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
buf<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>otherBuffer<span class="token punctuation">)</span> <span class="token comment">// \u5B58\u50A8\u7684\u5B57\u8282\u6570\u503C\u5B8C\u5168\u76F8\u540C\u624D\u76F8\u7B49</span>
buf<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token punctuation">,</span> byteOffset<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u4ECE\u524D\u5F80\u540E\u627E\u7B2C\u4E00\u6B21\u5339\u914Dvalue\u503C\u7684\u7D22\u5F15\u53F7</span>
buf<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token punctuation">,</span> byteOffset<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u4ECE\u540E\u5F80\u524D\u6BCF\u4E00\u6B21\u5339\u914Dvalue\u503C\u7684\u7D22\u5F15\u53F7\uFF0C\u5373value\u6700\u540E\u4E00\u6B21\u51FA\u73B0\u7684\u7D22\u5F15\u53F7</span>
buf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token punctuation">,</span> byteOffset<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">[</span>start<span class="token punctuation">[</span><span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">subarray</span><span class="token punctuation">(</span><span class="token punctuation">[</span>start<span class="token punctuation">[</span><span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span><span class="token punctuation">,</span> targetStart<span class="token punctuation">[</span><span class="token punctuation">,</span> sourceStart<span class="token punctuation">[</span><span class="token punctuation">,</span> sourceEnd<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// target\u4E3A\u60F3\u8981\u7684\u65B0\u503C</span>
Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token punctuation">,</span> totalLength<span class="token punctuation">]</span><span class="token punctuation">)</span>
buf<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span><span class="token punctuation">,</span> targetStart<span class="token punctuation">[</span><span class="token punctuation">,</span> targetEnd<span class="token punctuation">[</span><span class="token punctuation">,</span> sourceStart<span class="token punctuation">[</span><span class="token punctuation">,</span> sourceEnd<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u5BF9\u6BD4\u662F\u57FA\u4E8E\u5404\u81EA Buffer \u5B9E\u9645\u7684\u5B57\u8282\u5E8F\u5217\u3002 buf\u5728target\u7684\u524D\u3001\u76F8\u540C\u3001\u540E \u5206\u522B\u5BF9\u5E94 -1 0 1</span>
</code></pre></div><p>\u793A\u4F8B\u89C1\u6700\u4E0B\u9762\u3002</p><h2 id="\u76F8\u5173\u5E38\u91CF" tabindex="-1">\u76F8\u5173\u5E38\u91CF <a class="header-anchor" href="#\u76F8\u5173\u5E38\u91CF" aria-hidden="true">#</a></h2><div class="language-js"><pre><code>Buffer<span class="token punctuation">.</span>poolSize  <span class="token comment">// \u9ED8\u8BA4\u503C: 8192 \u7528\u4E8E\u7F13\u51B2\u6C60\u7684\u9884\u5206\u914D\u7684\u5185\u90E8 Buffer \u5B9E\u4F8B\u7684\u5927\u5C0F\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09 8192 B = 8KB</span>
buffer<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">MAX_LENGTH</span>  <span class="token comment">// 2147483647 B = 2GB  \u5728 32 \u4F4D\u7684\u67B6\u6784\u4E0A\uFF0C\u8BE5\u503C\u662F (2^30)-1 (~1GB)\u3002 \u5728 64 \u4F4D\u7684\u67B6\u6784\u4E0A\uFF0C\u8BE5\u503C\u662F (2^31)-1 (~2GB)\u3002</span>
buffer<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">MAX_STRING_LENGTH</span> <span class="token comment">// \u5355\u4E2A string \u5B9E\u4F8B\u5141\u8BB8\u7684\u6700\u5927\u957F\u5EA6,\u53D6\u51B3\u4E8E\u4F7F\u7528\u7684 JS \u5F15\u64CE</span>
</code></pre></div><p>\u793A\u4F8B\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">let</span> buffer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;buffer&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">MAX_LENGTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">MAX_STRING_LENGTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-js"><pre><code>Buffer<span class="token punctuation">.</span><span class="token function">isEncoding</span><span class="token punctuation">(</span>encoding<span class="token punctuation">)</span> <span class="token comment">//\u68C0\u6D4B\u662F\u5426\u662FBuffer\u652F\u6301\u7684\u5B57\u7B26\u7F16\u7801\u683C\u5F0F</span>
</code></pre></div><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">isEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">isEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><p>node\u652F\u6301\u7684\u50A8\u5B58\u7F16\u7801\u65B9\u6848\u5305\u62EC\uFF1A \u524D\u56DB\u79CD\u8F83\u5E38\u7528</p><ul><li><p><strong>ascii</strong> - \u4EC5\u9002\u7528\u4E8E 7 \u4F4D ASCII \u6570\u636E\u3002\u6B64\u7F16\u7801\u901F\u5EA6\u5F88\u5FEB\uFF0C\u5982\u679C\u8BBE\u7F6E\u5219\u4F1A\u5265\u79BB\u9AD8\u4F4D\u3002</p></li><li><p><strong>utf8</strong> - \u591A\u5B57\u8282\u7F16\u7801\u7684 Unicode \u5B57\u7B26\u3002\u8BB8\u591A\u7F51\u9875\u548C\u5176\u4ED6\u6587\u6863\u683C\u5F0F\u90FD\u4F7F\u7528 UTF-8\u3002</p></li><li><p><strong>base64</strong> - Base64 \u7F16\u7801\u3002\u5F53\u4ECE\u5B57\u7B26\u4E32\u521B\u5EFA Buffer \u65F6\uFF0C\u6B64\u7F16\u7801\u4E5F\u4F1A\u6B63\u786E\u5730\u63A5\u53D7 RFC 4648 \u7B2C 5 \u8282\u4E2D\u6307\u5B9A\u7684 \u201CURL \u548C\u6587\u4EF6\u540D\u5B89\u5168\u5B57\u6BCD\u201D\u3002</p></li><li><p><strong>hex</strong> - \u5C06\u6BCF\u4E2A\u5B57\u8282\u7F16\u7801\u6210\u4E24\u4E2A\u5341\u516D\u8FDB\u5236\u7684\u5B57\u7B26\u3002</p></li><li><p><strong>utf16le</strong> - 2 \u6216 4 \u4E2A\u5B57\u8282\uFF0C\u5C0F\u7AEF\u5E8F\u7F16\u7801\u7684 Unicode \u5B57\u7B26\u3002\u652F\u6301\u4EE3\u7406\u5BF9\uFF08U+10000 \u81F3 U+10FFFF\uFF09\u3002</p></li><li><p><strong>ucs2</strong> - &#39;utf16le&#39; \u7684\u522B\u540D\u3002</p></li><li><p><strong>latin1</strong> - \u4E00\u79CD\u5C06 Buffer \u7F16\u7801\u6210\u5355\u5B57\u8282\u7F16\u7801\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5\uFF08\u7531 RFC 1345 \u4E2D\u7684 IANA \u5B9A\u4E49\uFF0C\u7B2C 63 \u9875\uFF0C\u4F5C\u4E3A Latin-1 \u7684\u8865\u5145\u5757\u548C C0/C1 \u63A7\u5236\u7801\uFF09\u3002</p></li><li><p><strong>binary</strong> - &#39;latin1&#39; \u7684\u522B\u540D\u3002</p></li></ul><h3 id="\u6570\u7EC4\u76F8\u5173\u64CD\u4F5C\u793A\u4F8B\uFF1A" tabindex="-1">\u6570\u7EC4\u76F8\u5173\u64CD\u4F5C\u793A\u4F8B\uFF1A <a class="header-anchor" href="#\u6570\u7EC4\u76F8\u5173\u64CD\u4F5C\u793A\u4F8B\uFF1A" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">let</span> buf11 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;node buffer&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf11 keys&#39;</span><span class="token punctuation">,</span> buf11<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> buf11<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf11 values&#39;</span><span class="token punctuation">,</span> buf11<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token keyword">of</span> buf11<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf11 entries&#39;</span><span class="token punctuation">,</span> buf11<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token keyword">of</span> buf11<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> buf12 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;AB&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf13 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;4142&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf14 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;ABC&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf12<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>buf13<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf13<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>buf12<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf12<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>buf14<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf14<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>buf12<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf12<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf12<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;42&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token keyword">let</span> buf15 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;ABAC&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf15<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf15<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf15<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf15<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token keyword">let</span> buf16 <span class="token operator">=</span> buf15<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf16&#39;</span><span class="token punctuation">,</span> buf16<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// AC</span>
<span class="token keyword">let</span> buf17 <span class="token operator">=</span> buf15<span class="token punctuation">.</span><span class="token function">subarray</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf17&#39;</span><span class="token punctuation">,</span> buf17<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// AC</span>

<span class="token comment">// slice subarray\u88C1\u5207\u51FA\u6765\u7684buffer\u4E0E\u6E90buffer\u5171\u7528\u76F8\u540C\u7684\u5185\u5B58\uFF0C\u6240\u4EE5\u4FEE\u6539\u4F1A\u76F8\u4E92\u5F71\u54CD</span>
buf16<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">++</span>
buf17<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">--</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf15&#39;</span><span class="token punctuation">,</span> buf15<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ABBB</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf16&#39;</span><span class="token punctuation">,</span> buf16<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// BB</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf17&#39;</span><span class="token punctuation">,</span> buf17<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// BB</span>

<span class="token keyword">let</span> buf18 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;welcome&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf19 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
buf18<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>buf19<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf19&#39;</span><span class="token punctuation">,</span>buf19<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// come</span>

<span class="token keyword">let</span> buf20 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;wel&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf21 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;come&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf22 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>buf20<span class="token punctuation">,</span>buf21<span class="token punctuation">]</span><span class="token punctuation">,</span> buf20<span class="token punctuation">.</span>length <span class="token operator">+</span> buf21<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;buf22&#39;</span><span class="token punctuation">,</span> buf22<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// welcome</span>

<span class="token comment">// compare \u5BF9\u6BD4\u662F\u57FA\u4E8E\u5404\u81EA Buffer \u5B9E\u9645\u7684\u5B57\u8282\u5E8F\u5217\u3002</span>
<span class="token keyword">let</span> buf23 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;ABCD&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf24 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;AB&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> buf25 <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;CD&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf24<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>buf23<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1 ,\u5373buf24\u5728buf23\u524D\u9762</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf25<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>buf23<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 \uFF0C \u5373buf25\u5728buf23\u540E\u9762</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buf23<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>buf25<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1 \uFF0C \u5373buf23\u5728buf25\u540E\u9762</span>
</code></pre></div>`,32),c=[o];function u(e,l,i,k,f,r){return a(),s("div",null,c)}var b=n(p,[["render",u]]);export{d as __pageData,b as default};
