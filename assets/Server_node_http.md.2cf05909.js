import{_ as n,c as s,o as a,a as t}from"./app.f1e974b0.js";var p="/assets/request.a6571e9e.png",o="/assets/response.fc74b1dc.png";const f='{"title":"\u7F51\u7EDC\u64CD\u4F5C http","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u7684\u6570\u636E\u7ED3\u6784","slug":"\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u7684\u6570\u636E\u7ED3\u6784"},{"level":2,"title":"http \u4F5C\u4E3A\u5BA2\u6237\u7AEF","slug":"http-\u4F5C\u4E3A\u5BA2\u6237\u7AEF"},{"level":3,"title":"1. \u5EFA\u7ACB\u4E00\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B9E\u4F8B","slug":"_1-\u5EFA\u7ACB\u4E00\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B9E\u4F8B"},{"level":3,"title":"2. \u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587","slug":"_2-\u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587"},{"level":3,"title":"3. \u8BFB\u53D6\u54CD\u5E94\u62A5\u6587","slug":"_3-\u8BFB\u53D6\u54CD\u5E94\u62A5\u6587"},{"level":3,"title":"\u7EFC\u5408\u4F8B\u5B50","slug":"\u7EFC\u5408\u4F8B\u5B50"},{"level":2,"title":"http \u4F5C\u4E3A\u670D\u52A1\u7AEF","slug":"http-\u4F5C\u4E3A\u670D\u52A1\u7AEF"},{"level":3,"title":"1. \u5EFA\u7ACB\u4E00\u4E2A\u670D\u52A1\u7AEF\u5B9E\u4F8B","slug":"_1-\u5EFA\u7ACB\u4E00\u4E2A\u670D\u52A1\u7AEF\u5B9E\u4F8B"},{"level":3,"title":"2. \u63A5\u53D7\u5E76\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587","slug":"_2-\u63A5\u53D7\u5E76\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587"},{"level":3,"title":"3. \u8BBE\u7F6E\u5E76\u53D1\u9001\u54CD\u5E94\u62A5\u6587","slug":"_3-\u8BBE\u7F6E\u5E76\u53D1\u9001\u54CD\u5E94\u62A5\u6587"},{"level":3,"title":"4. \u7EFC\u5408\u793A\u4F8B","slug":"_4-\u7EFC\u5408\u793A\u4F8B"},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3"}],"relativePath":"Server/node/http.md"}',e={},c=t('<h1 id="\u7F51\u7EDC\u64CD\u4F5C-http" tabindex="-1">\u7F51\u7EDC\u64CD\u4F5C http <a class="header-anchor" href="#\u7F51\u7EDC\u64CD\u4F5C-http" aria-hidden="true">#</a></h1><p><div class="table-of-contents"><ul><li><a href="#\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u7684\u6570\u636E\u7ED3\u6784">\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u7684\u6570\u636E\u7ED3\u6784</a></li><li><a href="#http-\u4F5C\u4E3A\u5BA2\u6237\u7AEF">http \u4F5C\u4E3A\u5BA2\u6237\u7AEF</a><ul><li><a href="#_1-\u5EFA\u7ACB\u4E00\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B9E\u4F8B">1. \u5EFA\u7ACB\u4E00\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B9E\u4F8B</a></li><li><a href="#_2-\u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587">2. \u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587</a></li><li><a href="#_3-\u8BFB\u53D6\u54CD\u5E94\u62A5\u6587">3. \u8BFB\u53D6\u54CD\u5E94\u62A5\u6587</a></li><li><a href="#\u7EFC\u5408\u4F8B\u5B50">\u7EFC\u5408\u4F8B\u5B50</a></li></ul></li><li><a href="#http-\u4F5C\u4E3A\u670D\u52A1\u7AEF">http \u4F5C\u4E3A\u670D\u52A1\u7AEF</a><ul><li><a href="#_1-\u5EFA\u7ACB\u4E00\u4E2A\u670D\u52A1\u7AEF\u5B9E\u4F8B">1. \u5EFA\u7ACB\u4E00\u4E2A\u670D\u52A1\u7AEF\u5B9E\u4F8B</a></li><li><a href="#_2-\u63A5\u53D7\u5E76\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587">2. \u63A5\u53D7\u5E76\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587</a></li><li><a href="#_3-\u8BBE\u7F6E\u5E76\u53D1\u9001\u54CD\u5E94\u62A5\u6587">3. \u8BBE\u7F6E\u5E76\u53D1\u9001\u54CD\u5E94\u62A5\u6587</a></li><li><a href="#_4-\u7EFC\u5408\u793A\u4F8B">4. \u7EFC\u5408\u793A\u4F8B</a></li></ul></li><li><a href="#\u603B\u7ED3">\u603B\u7ED3</a></li></ul></div></p><p>node \u7684\u6838\u5FC3\u6A21\u5757\u4E4B\u4E00\uFF1A<code>http</code>\u6A21\u5757\u8D1F\u8D23\u5EFA\u7ACB\u7F51\u7EDC\u94FE\u63A5\u3002</p><p>\u4E86\u89E3\u57FA\u672C\u7F51\u7EDC\u77E5\u8BC6\uFF0C\u6211\u4EEC\u5C31\u77E5\u8BC6\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u7AEF\u901A\u4FE1\u5904\u7406\u4E3B\u8981\u4E24\u5757\u5185\u5BB9\uFF1A\u8BF7\u6C42<code>request</code>\u548C\u54CD\u5E94<code>response</code>\u3002</p><h2 id="\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u7684\u6570\u636E\u7ED3\u6784" tabindex="-1">\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u7684\u6570\u636E\u7ED3\u6784 <a class="header-anchor" href="#\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u7684\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a></h2><p>\u770B\u4E0B\u8BF7\u6C42\u548C\u54CD\u5E94\u62A5\u6587\u7684\u57FA\u672C\u7ED3\u6784\u5982\u4E0B\uFF1A</p><p><strong>\u8BF7\u6C42\u62A5\u6587</strong></p><p><img src="'+p+`" alt=""> \u793A\u4F8B\uFF1A</p><div class="language-bash"><pre><code>POST /user HTTP/1.1             //\u8BF7\u6C42\u9996\u884C\uFF1A \u8BF7\u6C42\u65B9\u5F0F \u8BF7\u6C42\u63A5\u53E3 \u534F\u8BAE/\u7248\u672C\u53F7
Host: www.user.com
Content-Type: application/x-www-form-urlencoded
Connection: Keep-Alive
User-agent: Mozilla/5.0.        //\u4EE5\u4E0A\u662F\u8BF7\u6C42\u5934
                                //\u6B64\u5904\u5FC5\u987B\u6709\u4E00\u7A7A\u884C,\u7A7A\u884C\u5206\u5272header\u548C\u8BF7\u6C42\u5185\u5BB9
<span class="token assign-left variable">name</span><span class="token operator">=</span>world                      // \u8BF7\u6C42\u4F53\uFF0CGET\u65B9\u6CD5\u8BF7\u6C42\u4F53\u65E0\u5185\u5BB9
</code></pre></div><p><strong>\u54CD\u5E94\u62A5\u6587</strong></p><p><img src="`+o+`" alt=""></p><p>\u793A\u4F8B\uFF1A</p><div class="language-bash"><pre><code>HTTP/1.1 <span class="token number">200</span> OK             // \u54CD\u5E94\u9996\u884C\uFF1A \u534F\u8BAE/\u7248\u672C\u53F7 \u72B6\u6001\u7801 \u72B6\u6001\u7B80\u77ED\u4FE1\u606F
Server: bfe/1.0.8.18
Date: Thu, 03 Nov <span class="token number">2016</span> 08:30:43 GMT
Content-Type: text/html
Content-Length: <span class="token number">277</span>
Last-Modified: Mon, <span class="token number">13</span> Jun <span class="token number">2016</span> 02:50:03 GMT
Connection: Keep-Alive
ETag: <span class="token string">&quot;575e1f5b-115&quot;</span>
Cache-Control: private, no-cache, no-store, proxy-revalidate, no-transform
Pragma: no-cache
Accept-Ranges: bytes
                            // \u7A7A\u884C\uFF0C\u5206\u5272\u54CD\u5E94\u5934\u548C\u54CD\u5E94\u4F53
\u54CD\u5E94\u4F53                       // \u54CD\u5E94content-type\u683C\u5F0F\u4E0D\u540C\uFF0C\u8FD4\u56DE\u7684\u54CD\u5E94\u4F53\u5F62\u5F0F\u4E0D\u540C
</code></pre></div><p>\u6240\u4EE5<code>http</code>\u6A21\u5757\u7684 API \u57FA\u672C\u5C31\u662F\u5BF9\u8BF7\u6C42\u62A5\u6587\u548C\u54CD\u5E94\u62A5\u6587\u5404\u90E8\u5206\u5185\u5BB9\u7684\u64CD\u4F5C\u3002<code>http</code>\u6A21\u5757\u7684\u4F7F\u7528\u5206\u4E3A\u5BA2\u6237\u7AEF\u529F\u80FD\u548C\u670D\u52A1\u5668\u529F\u80FD\uFF0C\u4E24\u90E8\u5206\u64CD\u4F5C\u903B\u8F91\u521A\u597D\u76F8\u53CD\u3002\u5BA2\u6237\u7AEF\u662F\u8BBE\u7F6E\u8BF7\u6C42\u548C\u8BFB\u53D6\u54CD\u5E94\uFF0C\u670D\u52A1\u7AEF\u662F\u8BFB\u53D6\u8BF7\u6C42\u548C\u8BBE\u7F6E\u54CD\u5E94\u3002</p><h2 id="http-\u4F5C\u4E3A\u5BA2\u6237\u7AEF" tabindex="-1">http \u4F5C\u4E3A\u5BA2\u6237\u7AEF <a class="header-anchor" href="#http-\u4F5C\u4E3A\u5BA2\u6237\u7AEF" aria-hidden="true">#</a></h2><h3 id="_1-\u5EFA\u7ACB\u4E00\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B9E\u4F8B" tabindex="-1">1. \u5EFA\u7ACB\u4E00\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B9E\u4F8B <a class="header-anchor" href="#_1-\u5EFA\u7ACB\u4E00\u4E2A\u5BA2\u6237\u7AEF\u8BF7\u6C42\u5B9E\u4F8B" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token comment">// \u5F15\u5165http\u6A21\u5757</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">requier</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// http.request\u8FD4\u56DE\u4E00\u4E2Ahttp.ClientRequest\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u62E5\u6709\u64CD\u4F5C\u8BF7\u6C42\u62A5\u6587\u7684API</span>
<span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u4E24\u4E2AAPI\u4E00\u6837\uFF0C\u53EA\u662F\u8FD9\u91CC\u628Aurl\u5355\u72EC\u4F5C\u4E3A\u9996\u53C2</span>

<span class="token comment">// \u4F7F\u7528request\u65B9\u6CD5\u6BCF\u6B21\u90FD\u8981\u624B\u52A8req.end()\u6765\u6807\u8BC6\u8BF7\u6C42\u7ED3\u675F\uFF0C\u6240\u4EE5node\u5BF9\u7B80\u5355\u7684GET\u65B9\u6CD5\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7B80\u4FBF\u7684API</span>
<span class="token comment">// \u8BF7\u6C42\u662F\u901A\u8FC7 http.get() \u53D1\u8D77\u7684\uFF0C\u5219\u4F1A\u81EA\u52A8\u8C03\u7528 request.end()\u3002</span>
<span class="token keyword">const</span> reqGet <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>options<span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> reqGet <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0B\u9762\u5BF9\u5BA2\u6237\u7AEF\u521B\u5EFA\u5E76\u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587\u548C\u63A5\u53D7\u5E76\u8BFB\u53D6\u54CD\u5E94\u62A5\u6587\u4E24\u90E8\u5206\u5185\u5BB9\u8BB2\u89E3\uFF1A</p><h3 id="_2-\u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587" tabindex="-1">2. \u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587 <a class="header-anchor" href="#_2-\u8BBE\u7F6E\u8BF7\u6C42\u62A5\u6587" aria-hidden="true">#</a></h3><p>\u6309\u4E0A\u56FE\u4E2D\u8BF7\u6C42\u62A5\u6587\u7684\u7ED3\u6784\uFF1A</p><div class="language-"><pre><code>\u8BF7\u6C42\u884C\uFF1A\u8BF7\u6C42\u65B9\u6CD5\u3001\u8BF7\u6C42url \u534F\u8BAE/\u7248\u672C\u53F7
\u8BF7\u6C42\u5934\uFF1A\u5BF9\u8C61\u952E\u503C\u5BF9\u5F62\u5F0F
\u8BF7\u6C42\u4F53
</code></pre></div><p>\u5176\u4E2D\u8BF7\u6C42\u884C\u548C\u8BF7\u6C42\u5934\u7684\u4FE1\u606F\u53EF\u4EE5\u5728<code>options</code>\u5BF9\u8C61\u4E2D\u914D\u7F6E\uFF0C\u7136\u540E\u521B\u5EFA\u8BF7\u6C42\u65F6\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token comment">// node \u4E2D\u8BF7\u6C42\u65B9\u6CD5\u90FD\u662F\u5927\u5199</span>
    <span class="token comment">// hostname + path + port \u7EC4\u6210\u8BF7\u6C42\u7684url\u3002\u6240\u4EE5\u4E5F\u53EF\u4EE5\u5C06url\u63D0\u51FA\u6765\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570</span>
    <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/index.html?page=12&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
    <span class="token literal-property property">protocol</span><span class="token operator">:</span> <span class="token string">&#39;http:&#39;</span>
    <span class="token comment">// \u8BF7\u6C42\u5934</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>\uFF0C
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token comment">// \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u8FC7\u8FD8\u672A\u5EFA\u7ACB\u8FDE\u63A5\u5219\u4E2D\u65AD\u7ED3\u675F</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53E6\u5916\u8BF7\u6C42\u5934\u9664\u4E86\u5728\u521B\u5EFA\u8BF7\u6C42\u65F6\u901A\u8FC7options\u8BBE\u7F6E\uFF0C\u4E5F\u53EF\u4EE5\u7528\u8FD4\u56DE\u7684\u8BF7\u6C42\u5B9E\u4F8B\u5BF9\u8C61\u63D0\u4F9B\u7684\u65B9\u6CD5\u8BBE\u7F6E</span>
request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
request<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
request<span class="token punctuation">.</span><span class="token function">removeHeader</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
request<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// \u5982\u679C\u6709\u8BF7\u6C42\u4F53\uFF0C\u901A\u8FC7http.get\u6216http.request\u8FD4\u56DE\u7684\u5BA2\u6237\u7AEF\u5B9E\u4F8B\u8BBE\u7F6E</span>
request<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>chunk<span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
request<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u5FC5\u987B\u8981\u7528request.end()\u4F5C\u4E3A\u8BF7\u6C42\u7ED3\u675F</span>
</code></pre></div><h3 id="_3-\u8BFB\u53D6\u54CD\u5E94\u62A5\u6587" tabindex="-1">3. \u8BFB\u53D6\u54CD\u5E94\u62A5\u6587 <a class="header-anchor" href="#_3-\u8BFB\u53D6\u54CD\u5E94\u62A5\u6587" aria-hidden="true">#</a></h3><p>\u5BF9\u8BF7\u6C42\u7ED3\u679C\u7684\u54CD\u5E94\u6570\u636E\u4F1A\u4F5C\u4E3A\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u4F20\u5165\uFF0C\u8BE5\u53C2\u6570\u662F <code>http.IncomingMessage</code> \u7684\u5B9E\u4F8B\uFF0C\u4E5F\u662F\u4E00\u4E2A\u53EF\u8BFB\u6D41\u5B9E\u4F8B\uFF0C\u7528\u4E8E\u8BFB\u53D6\u54CD\u5E94\u884C\u3001\u54CD\u5E94\u5934\u4EE5\u53CA\u54CD\u5E94\u4F53\u6570\u636E\u3002</p><p>\u5BF9\u54CD\u5E94\u7684\u6570\u636E\u8BFB\u53D6\u8FD8\u662F\u6309\u54CD\u5E94\u62A5\u6587\u7ED3\u6784\uFF08\u89C1\u4E0A\u56FE\uFF09\u6765\u8BB2\u89E3\uFF1A</p><div class="language-"><pre><code>\u54CD\u5E94\u884C\uFF1A\u534F\u8BAE/\u7248\u672C\u53F7 \u72B6\u6001\u7801 \u72B6\u6001\u7B80\u77ED\u63CF\u8FF0
\u54CD\u5E94\u5934\uFF1A\u5BF9\u8C61\u952E\u503C\u5BF9\u5F62\u5F0F
\u54CD\u5E94\u4F53
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> rssponseHandler<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">responseHandler</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u4ECE\u54CD\u5E94\u4E2D\u83B7\u53D6\u4E4B\u524D\u8BF7\u6C42\u7684\u76F8\u5173\u4FE1\u606F</span>
	res<span class="token punctuation">.</span>method
	res<span class="token punctuation">.</span>url
	<span class="token comment">// \u54CD\u5E94\u9996\u884C</span>
	<span class="token punctuation">;</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>httpVersion <span class="token operator">=</span> <span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>statusCode
	res<span class="token punctuation">.</span>statusMessage
	<span class="token comment">// \u54CD\u5E94\u5934\u4FE1\u606F</span>
	res<span class="token punctuation">.</span>headers <span class="token comment">// \u4E00\u4E2A\u5BF9\u8C61</span>

	<span class="token comment">// \u54CD\u5E94\u4F53\uFF1A\`res\`\u8FD4\u56DE\u7684\u53EF\u8BFB\u6D41\uFF0C\u6240\u4EE5\u901A\u8FC7\u6D41stream\u76F8\u5173\u4E8B\u4EF6API\u8BFB\u53D6\u54CD\u5E94\u4F53\u7684\u6570\u636E</span>
	<span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		body<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		body <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u8FD4\u56DE\u7684\u54CD\u5E94\u4F53\u6570\u636E\uFF1A&#39;</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u8BF7\u6C42\u54CD\u5E94\u51FA\u9519\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// \u6216\u8005\u54CD\u5E94\u4F53\u76F4\u63A5\u7528pipe\u7BA1\u9053\u5BF9\u63A5\u53E6\u4E00\u5904\u53EF\u5199\u6D41</span>
	res<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writableStream<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u7EFC\u5408\u4F8B\u5B50" tabindex="-1">\u7EFC\u5408\u4F8B\u5B50 <a class="header-anchor" href="#\u7EFC\u5408\u4F8B\u5B50" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">BASE_URL</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./constant&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;user/v1/users&#39;</span>

<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token constant">BASE_URL</span> <span class="token operator">+</span> url<span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token punctuation">{</span> statusCode<span class="token punctuation">,</span> statusMessage <span class="token punctuation">}</span> <span class="token operator">=</span> res
	<span class="token keyword">let</span> error

	<span class="token keyword">if</span> <span class="token punctuation">(</span>statusCode <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		error <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6CE8\u518C\u8BF7\u6C42\u54CD\u5E94\u5931\u8D25\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>statusCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>statusMessage<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
		<span class="token comment">// \u6D88\u8D39\u54CD\u5E94\u6570\u636E\u6765\u91CA\u653E\u5185\u5B58\u3002</span>
		res<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	res<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		body<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			body <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;response&#39;</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6CE8\u518C\u8BF7\u6C42\u5931\u8D25</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&#39;18070198888&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;e10adc3949ba59abbe56e057f20f883e&#39;</span>
<span class="token punctuation">}</span>
req<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>

req<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="http-\u4F5C\u4E3A\u670D\u52A1\u7AEF" tabindex="-1">http \u4F5C\u4E3A\u670D\u52A1\u7AEF <a class="header-anchor" href="#http-\u4F5C\u4E3A\u670D\u52A1\u7AEF" aria-hidden="true">#</a></h2><h3 id="_1-\u5EFA\u7ACB\u4E00\u4E2A\u670D\u52A1\u7AEF\u5B9E\u4F8B" tabindex="-1">1. \u5EFA\u7ACB\u4E00\u4E2A\u670D\u52A1\u7AEF\u5B9E\u4F8B <a class="header-anchor" href="#_1-\u5EFA\u7ACB\u4E00\u4E2A\u670D\u52A1\u7AEF\u5B9E\u4F8B" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token comment">// \u5F15\u5165http\u6A21\u5757</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> requestListener<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// \u8FD4\u56DEhttp.Server\u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u7EE7\u627F\u81F3net.Server\uFF0C\u6240\u4EE5net.Server\u76F8\u5173\u63A5\u53E3\u4E5F\u53EF\u7528\u3002</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">[</span>port<span class="token punctuation">[</span><span class="token punctuation">,</span> host<span class="token punctuation">[</span><span class="token punctuation">,</span> backlog<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0B\u9762\u5BF9\u670D\u52A1\u7AEF\u751F\u6210\u7684\u670D\u52A1\u5668\u5B9E\u4F8B\u5206\u63A5\u6536\u8BFB\u53D6\u7684\u8BF7\u6C42\u62A5\u6587\u548C\u8BBE\u7F6E\u53D1\u9001\u54CD\u5E94\u62A5\u6587\u4E24\u90E8\u5206\u8BB2\u89E3\uFF1A</p><h3 id="_2-\u63A5\u53D7\u5E76\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587" tabindex="-1">2. \u63A5\u53D7\u5E76\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587 <a class="header-anchor" href="#_2-\u63A5\u53D7\u5E76\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587" aria-hidden="true">#</a></h3><p>\u521B\u5EFA\u670D\u52A1\u5668\u4F20\u5165\u7684<code>requestListener</code>\u51FD\u6570\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF1A<code>reuqest:IncomingMessage</code>, <code>response:ServerResponse</code></p><div class="language-js"><pre><code><span class="token keyword">const</span> requestListener <span class="token operator">=</span> <span class="token function">funciton</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECErequest\u4E2D\u8BFB\u53D6\u8BF7\u6C42\u62A5\u6587</span>
    <span class="token comment">// request\u662Fhttp.IncomingMessage\u7C7B\u5B9E\u4F8B\uFF0C\u4E5F\u662F\u4E00\u4E2A\u53EF\u8BFB\u6D41\u5B9E\u4F8B\uFF0C\u7528\u4E8E\u8BBF\u95EE\u8BF7\u6C42\u884C\u3001\u8BF7\u6C42\u5934\u3001\u4EE5\u53CA\u8BF7\u6C42\u4F53\u6570\u636E\u3002</span>
    <span class="token comment">// \u5177\u4F53API\u540Chttp.clientRequest\u4E2D\u7684\u54CD\u5E94\u7ED3\u679C\u4E00\u6837\uFF08\u89C1\u4E0A\uFF09</span>
    req<span class="token punctuation">.</span>method
    req<span class="token punctuation">.</span>url <span class="token comment">// \u53EF\u4F7F\u7528 new URL(req.url)\u89E3\u6790\u8BF7\u6C42\u8DEF\u5F84\u53C2\u6570</span>
    req<span class="token punctuation">.</span>headers
    <span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        body<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        body <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u8BF7\u6C42\u4F53\u6570\u636E\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>body<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u8BF7\u6C42\u63A5\u6536\u9519\u8BEF\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6216\u8005\u7528\u53EF\u8BFB\u6D41\u7684API\uFF1A\u7BA1\u9053pipe\u76F4\u63A5\u5C06\u8BF7\u6C42\u4F53\u6570\u636E\u63A5\u5165\u53E6\u4E00\u53EF\u5199\u6D41</span>
    req<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writableStream<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_3-\u8BBE\u7F6E\u5E76\u53D1\u9001\u54CD\u5E94\u62A5\u6587" tabindex="-1">3. \u8BBE\u7F6E\u5E76\u53D1\u9001\u54CD\u5E94\u62A5\u6587 <a class="header-anchor" href="#_3-\u8BBE\u7F6E\u5E76\u53D1\u9001\u54CD\u5E94\u62A5\u6587" aria-hidden="true">#</a></h3><p>\u540C\u4E0A\uFF0C<code>requestListener</code>\u7B2C\u4E8C\u4E2A\u6570\u636E<code>response:ServerResponse</code></p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">requestListener</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// request \u76F8\u5173\u5904\u7406</span>
    <span class="token comment">// response\u662Fhttp.ServerResponse\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u4E5F\u662F\u4E00\u4E2A\u53EF\u5199\u6D41\uFF0C\u7528\u4E8E\u8BBE\u7F6E\u54CD\u5E94\u6570\u636E\uFF0C\u4F20\u7ED9\u5BA2\u6237\u7AEF\u7684http.clientRequest\u7684\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u3002</span>

    <span class="token comment">// \u8BBE\u7F6E\u54CD\u5E94\u884C\uFF1A\u72B6\u6001\u7801 \u72B6\u6001\u7B80\u77ED\u63CF\u8FF0</span>
    res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">400</span>
    res<span class="token punctuation">.</span>statusMessage <span class="token operator">=</span> <span class="token string">&#39;ok&#39;</span>
    <span class="token comment">// \u8BBE\u7F6E\u54CD\u5E94\u5173\uFF1A</span>
    res<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">hasHeaders</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>value<span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>msecs<span class="token punctuation">[</span><span class="token punctuation">,</span>callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6216\u8005\u54CD\u5E94\u884C\u548C\u54CD\u5E94\u5934\u4E00\u8D77\u8BBE\u7F6E</span>
    res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span>statusCode<span class="token punctuation">[</span><span class="token punctuation">,</span>statusMessage<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span>headers<span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment">// \u5199\u5165\u54CD\u5E94\u4F53\u6570\u636E</span>
    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>chunk<span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token punctuation">,</span> encoding<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u5FC5\u987B\u4F20\u5165res.end()\u4E0D\u80FD\u4E0D\u80FD\u54CD\u5E94</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_4-\u7EFC\u5408\u793A\u4F8B" tabindex="-1">4. \u7EFC\u5408\u793A\u4F8B <a class="header-anchor" href="#_4-\u7EFC\u5408\u793A\u4F8B" aria-hidden="true">#</a></h3><p><strong>server</strong></p><div class="language-js"><pre><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token constant">PORT</span> <span class="token operator">=</span> <span class="token number">3000</span>
<span class="token keyword">const</span> <span class="token constant">HOST</span> <span class="token operator">=</span> <span class="token string">&#39;localhost&#39;</span>

<span class="token keyword">const</span> srv <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span>

	<span class="token keyword">const</span> <span class="token punctuation">{</span> method<span class="token punctuation">,</span> url <span class="token punctuation">}</span> <span class="token operator">=</span> req
	<span class="token keyword">const</span> <span class="token punctuation">{</span> pathname<span class="token punctuation">,</span> searchParams <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">HOST</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&#39;favicon.ico&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">&#39;GET&#39;</span> <span class="token operator">&amp;&amp;</span> pathname <span class="token operator">===</span> <span class="token string">&#39;/users&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> uid <span class="token operator">=</span> searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;uid&#39;</span><span class="token punctuation">)</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;uid&#39;</span><span class="token punctuation">,</span> uid<span class="token punctuation">)</span>
		<span class="token keyword">let</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">uid</span><span class="token operator">:</span> uid<span class="token punctuation">,</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
			<span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span>
		<span class="token punctuation">}</span>
		res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
		res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		req<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
srv<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token constant">PORT</span><span class="token punctuation">,</span> <span class="token constant">HOST</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">server is runnig at http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">HOST</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><strong>client</strong></p><div class="language-js"><pre><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> querystring <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;querystring&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token constant">BASE_URL</span> <span class="token operator">=</span> <span class="token string">&#39;http://localhost:3000/&#39;</span>

<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">BASE_URL</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">users?uid=123</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token punctuation">{</span> statusCode<span class="token punctuation">,</span> statusMessage <span class="token punctuation">}</span> <span class="token operator">=</span> res

	<span class="token keyword">let</span> error
	<span class="token keyword">if</span> <span class="token punctuation">(</span>statusCode <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		error <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u67E5\u8BE2\u5931\u8D25\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>statusCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>statusMessage<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	res<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		body <span class="token operator">+=</span> chunk
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;body:&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;req\u8BF7\u6C42\u9519\u8BEF\uFF1A&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>http \u53EF\u4F5C\u4E3A\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u7AEF\u4F7F\u7528\uFF0C\u80FD\u591F\u8FDB\u884C\u6D41\u5904\u7406\u548C\u6D88\u606F\u89E3\u6790\u3002</p><p><code>http.createServer((request,response)=&gt;{})</code>\u521B\u5EFA\u670D\u52A1\u5668\uFF0C\u8FD4\u56DE<code>http.Server</code>\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u7EE7\u627F\u81F3<code>net.Server</code>\u7C7B\u3002\u5176\u4E2D\u7684 request \u662F\u4E00\u4E2A<code>http.IncomingRequest</code>\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5E76\u4E14\u4E5F\u662F\u4E00\u4E2A\u53EF\u8BFB\u6D41\u5B9E\u4F8B\u3002\u5176\u4E2D<code>response</code>\u662F\u4E00\u4E2A<code>http.ServerResponse</code>\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5E76\u4E14\u4E5F\u662F\u4E00\u4E2A\u53EF\u5199\u6D41\u7684\u5B9E\u4F8B\u3002\u6240\u6709\u5373\u6709<code>http</code>\u76F8\u5173\u7C7B\u7684\u63A5\u53E3\uFF0C\u4E5F\u6709<code>stream</code>\u6D41\u76F8\u5173\u7684\u63A5\u53E3\u53EF\u7528\u3002</p><p><code>http.request(options,response=&gt;{})</code>\u6216<code>http.get(options,response=&gt;{})</code>\u521B\u5EFA\u5BA2\u6237\u7AEF\uFF0C\u8FD4\u56DE<code>http.ClientRequest</code>\u7C7B\u7684\u5B9E\u4F8B\u3002\u5176\u4E2D\u56DE\u8C03\u51FD\u6570\u4F20\u5165\u7684\u53C2\u6570<code>response</code>\u662F<code>http.IncomingMessage</code>\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5E76\u4E14\u4E5F\u662F\u4E00\u4E2A\u53EF\u8BFB\u6D41\u5B9E\u4F8B\u3002\u540C\u670D\u52A1\u5668\u7AEF\u7684<code>request</code>\u662F\u4E00\u4E2A\u7C7B\u578B\u3002\u5E76\u4E14\u6570\u636E\u662F\u7531\u670D\u52A1\u5668\u7AEF\u7684<code>response</code>\u8FD4\u56DE\u7684\u3002</p><div class="language-"><pre><code>    --http.ClientRequest-------------                       --http.Server--------------------
    |                               |                       |   srv = http.createServer     |
    |               http.request    |                       |                               |
    |                   http.get    |-------------------------&gt; request:IncomingRequest     |
    |                               |                       |                               |
    |   response:IncomingRequest  &lt;-------------------------|   response:ServerResponse     |
    |                               |                       |                               |
    ---------------------------------                       ---------------------------------
</code></pre></div>`,51),u=[c];function l(i,k,r,d,g,h){return a(),s("div",null,u)}var y=n(e,[["render",l]]);export{f as __pageData,y as default};
