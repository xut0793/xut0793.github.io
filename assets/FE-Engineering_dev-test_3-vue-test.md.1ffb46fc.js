import{_ as n,c as s,o as a,a as t}from"./app.fa011131.js";const m='{"title":"vue \u5E94\u7528\u6D4B\u8BD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6D4B\u8BD5\u4E2D\u6302\u8F7D\u7EC4\u4EF6\u6E32\u67D3\u7684\u65B9\u5F0F","slug":"\u6D4B\u8BD5\u4E2D\u6302\u8F7D\u7EC4\u4EF6\u6E32\u67D3\u7684\u65B9\u5F0F"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u6E32\u67D3\u7684\u8F93\u51FA test html attribute class","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u6E32\u67D3\u7684\u8F93\u51FA-test-html-attribute-class"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u5951\u7EA6\u7684\u8F93\u5165 props() / setProps()","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u5951\u7EA6\u7684\u8F93\u5165-props-setprops"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u65B9\u6CD5","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u65B9\u6CD5"},{"level":3,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u5185\u5168\u5C40\u516C\u5171\u65B9\u6CD5\u7684\u8C03\u7528 mocks","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u5185\u5168\u5C40\u516C\u5171\u65B9\u6CD5\u7684\u8C03\u7528-mocks"},{"level":3,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u4E2D\u4F9D\u8D56\u7684\u5BFC\u5165\u6A21\u5757","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u4E2D\u4F9D\u8D56\u7684\u5BFC\u5165\u6A21\u5757"},{"level":2,"title":"\u67E5\u627E\u7EC4\u4EF6\u5185\u5143\u7D20\u7684\u65B9\u6CD5 find findAll","slug":"\u67E5\u627E\u7EC4\u4EF6\u5185\u5143\u7D20\u7684\u65B9\u6CD5-find-findall"},{"level":2,"title":"\u67E5\u627E\u7EC4\u4EF6\u5185\u5B50\u7EC4\u4EF6\u7684\u65B9\u6CD5 findComponent findAllComponents","slug":"\u67E5\u627E\u7EC4\u4EF6\u5185\u5B50\u7EC4\u4EF6\u7684\u65B9\u6CD5-findcomponent-findallcomponents"},{"level":2,"title":"\u6D4B\u8BD5\u5143\u7D20\u539F\u751F Dom \u4E8B\u4EF6","slug":"\u6D4B\u8BD5\u5143\u7D20\u539F\u751F-dom-\u4E8B\u4EF6"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u81EA\u5B9A\u4E49\u4E8B\u4EF6","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u81EA\u5B9A\u4E49\u4E8B\u4EF6"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF v-on / $emit","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF-v-on-emit"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF provide / inject","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF-provide-inject"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6\u7ED1\u5B9A\u7684\u54CD\u5E94\u6570\u636E data / setData","slug":"\u6D4B\u8BD5\u7EC4\u4EF6\u7ED1\u5B9A\u7684\u54CD\u5E94\u6570\u636E-data-setdata"},{"level":2,"title":"\u6D4B\u8BD5\u8868\u5355\u4E8B\u4EF6","slug":"\u6D4B\u8BD5\u8868\u5355\u4E8B\u4EF6"},{"level":2,"title":"\u6D4B\u8BD5\u7EC4\u4EF6","slug":"\u6D4B\u8BD5\u7EC4\u4EF6"},{"level":3,"title":"\u7EC4\u4EF6\u63D2\u69FD","slug":"\u7EC4\u4EF6\u63D2\u69FD"},{"level":3,"title":"\u7EC4\u4EF6\u5B58\u6839","slug":"\u7EC4\u4EF6\u5B58\u6839"},{"level":3,"title":"\u6A21\u62DF\u7236\u7EC4\u4EF6","slug":"\u6A21\u62DF\u7236\u7EC4\u4EF6"},{"level":3,"title":"\u51FD\u6570\u5F0F\u7EC4\u4EF6","slug":"\u51FD\u6570\u5F0F\u7EC4\u4EF6"}],"relativePath":"FE-Engineering/dev-test/3-vue-test.md"}',p={},o=t(`<h1 id="vue-\u5E94\u7528\u6D4B\u8BD5" tabindex="-1">vue \u5E94\u7528\u6D4B\u8BD5 <a class="header-anchor" href="#vue-\u5E94\u7528\u6D4B\u8BD5" aria-hidden="true">#</a></h1><p>\u6D4B\u8BD5\u662F\u6709\u5173\u8F93\u5165\u548C\u8F93\u51FA\u7684\uFF0C\u5728\u6D4B\u8BD5\u4E2D\uFF0C\u63D0\u4F9B\u8F93\u5165\uFF0C\u63A5\u6536\u8F93\u51FA\uFF0C\u5E76\u65AD\u8A00\u8F93\u51FA\u662F\u5426\u6B63\u786E\u7684\u8FC7\u7A0B\u3002P40</p><h2 id="\u6D4B\u8BD5\u4E2D\u6302\u8F7D\u7EC4\u4EF6\u6E32\u67D3\u7684\u65B9\u5F0F" tabindex="-1">\u6D4B\u8BD5\u4E2D\u6302\u8F7D\u7EC4\u4EF6\u6E32\u67D3\u7684\u65B9\u5F0F <a class="header-anchor" href="#\u6D4B\u8BD5\u4E2D\u6302\u8F7D\u7EC4\u4EF6\u6E32\u67D3\u7684\u65B9\u5F0F" aria-hidden="true">#</a></h2><ul><li>mount</li><li>shallowMount</li></ul><blockquote><p>\u5728\u670D\u52A1\u7AEF\u6E32\u67D3\u4E2D @vue/server-test-utils \u63D0\u4F9B\u4E86 render \u548C renderToString \u65B9\u6CD5\u3002</p></blockquote><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6\u6E32\u67D3\u7684\u8F93\u51FA-test-html-attribute-class" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u6E32\u67D3\u7684\u8F93\u51FA <code>test html attribute class</code> <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u6E32\u67D3\u7684\u8F93\u51FA-test-html-attribute-class" aria-hidden="true">#</a></h2><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary active<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> orange</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Hello Vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Hello Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><ol><li>\u6D4B\u8BD5\u6E32\u67D3\u7684\u5185\u5BB9 <code>text()</code></li></ol><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render text&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> textContent <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>textContent<span class="token punctuation">)</span> <span class="token comment">// Hello Vue Hello Test</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>textContent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>textContent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue Hello Test&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><blockquote><p>wrapper.text() \u76F8\u5F53\u4E8E Element.textContent\uFF0C\u5373\u8FD4\u56DE\u6240\u6709\u5B50\u8282\u70B9\u7684\u6587\u672C\u5185\u5BB9 toBe \u4E0E toContain \u533A\u522B\uFF1A toBe \u4F7F\u7528 <a href="http://object.is" target="_blank" rel="noopener noreferrer">object.is</a>() \u5339\u914D\u3002\u4E25\u683C\u76F8\u7B49; toContain \u76F8\u5F53\u4E8E String.prototype.includes \u65B9\u6CD5\uFF0C\u5305\u542B\u5373\u53EF\u3002</p></blockquote><ol start="2"><li>\u6D4B\u8BD5\u6E32\u67D3\u7684 DOM \u8282\u70B9\u7684\u5B57\u7B26\u4E32\u5F62\u5F0F <code>html()</code></li></ol><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render DOM node as string&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> htmlString <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>htmlString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>
    <span class="token string">&#39;&lt;div id=&quot;foo&quot; class=&quot;primary active&quot; style=&quot;color: orange&quot;&gt;&lt;span&gt;Hello Vue&lt;/span&gt;&lt;span&gt;Hello Test&lt;/span&gt;&lt;/div&gt;&#39;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ol start="3"><li>\u6D4B\u8BD5\u6E32\u67D3\u7684 DOM \u5C5E\u6027 <code>attributes()</code></li></ol><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;DOM node attribute&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">attributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u63A8\u8350\uFF0C\u5982\u679C\u6D4B\u8BD5\u672A\u901A\u8FC7\u65F6\uFF0C\u53EA\u4F1A\u5F97\u5230\u9884\u671F\u662F true,\u5B9E\u9645false\u8FD9\u7C7B\u63D0\u793A</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">attributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// wrapper.attributes() \u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C5E\u6027\u540D\u4E3Akey\uFF0C\u5C5E\u6027\u503C\u4E3A value</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">attributes</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5982\u679C\u4F20\u5165\u4E86\u5BF9\u5E94\u7684\u5C5E\u6027\uFF0C\u5219\u8FD4\u56DE\u8BE5\u5C5E\u6027\u7684\u503C</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><blockquote><p>\u907F\u514D Boolean \u65AD\u8A00\uFF0C\u4E00\u4E2A\u597D\u7684\u5355\u5143\u6D4B\u8BD5\u8981\u6709\u4E00\u4E2A\u5BCC\u6709\u8868\u8FBE\u529B\u7684\u65AD\u8A00\uFF0C\u8FD9\u6837\u5F53\u65AD\u8A00\u5931\u8D25\u65F6\uFF0C\u4F1A\u5F97\u5230\u4E00\u4E2A\u66F4\u6709\u7528\u7684\u4FE1\u606F\u3002</p></blockquote><ol start="4"><li>\u6D4B\u8BD5 Class</li></ol><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;DOM node classes&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">classes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">classes</span><span class="token punctuation">(</span><span class="token string">&#39;primary&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ol start="5"><li>\u6D4B\u8BD5 style</li></ol><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;DOM node style&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> ele <span class="token operator">=</span> wrapper<span class="token punctuation">.</span>element <span class="token comment">// \u8FD4\u56DE\u7EC4\u4EF6\u6839\u8282\u70B9\u7684 DOM \u5143\u7D20</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;orange&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4F55\u65F6\u6D4B\u8BD5\u7EC4\u4EF6\u6E32\u67D3\u7684\u8F93\u51FA</p><ul><li>\u6C38\u8FDC\u4E0D\u8981\u4E3A\u9759\u6001\u5185\u5BB9\u548C\u9759\u6001 css \u7C7B\u7F16\u5199\u5355\u5143\u6D4B\u8BD5</li><li>\u7EC4\u4EF6\u5355\u5143\u6D4B\u8BD5\u539F\u5219\u4E00\uFF1A\u4EC5\u6D4B\u8BD5\u52A8\u6001\u751F\u6210\u7684\u8F93\u51FA\uFF0C\u4EE5\u53CA\u4EC5\u6D4B\u8BD5\u7EC4\u4EF6\u5951\u7EA6\u90E8\u5206\u7684\u8F93\u51FA\u3002</li><li>\u5355\u5143\u6D4B\u8BD5\u7684\u91D1\u53D1\u59D1\u5A18\u539F\u5219\uFF1A\u4E0D\u8981\u592A\u591A\uFF0C\u4E0D\u8981\u592A\u5C11\uFF0C\u800C\u662F\u8981\u521A\u521A\u597D</li><li>\u6BCF\u589E\u52A0\u4E00\u4E2A\u6D4B\u8BD5\u5C31\u5728\u589E\u52A0\u6D4B\u8BD5\u4E0E\u6E90\u4EE3\u7801\u7684\u4F9D\u8D56\u8026\u5408\u3002\u7D27\u5BC6\u7684\u8026\u5408\u4F1A\u8BA9\u4EE3\u7801\u91CD\u6784\u53D8\u5F97\u56F0\u96BE\uFF0C\u56E0\u4E3A\u4FEE\u6539\u4E00\u5904\u4EE3\u7801\u53EF\u4EE5\u5C31\u4F1A\u7834\u574F\u6570\u5341\u4E2A\u6D4B\u8BD5\u4EE3\u7801\u3002</li></ul><p>\u6240\u4EE5\u5E94\u8BE5\u5C3D\u91CF\u907F\u514D\u4E0A\u9762\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u4E0A\u9762\u4EC5\u4EC5\u53EA\u4E3A\u8BB2\u89E3\u6D4B\u8BD5 API \u4F7F\u7528\u7684\u6F14\u793A\u5B50\u4F8B\u3002\u5B9E\u9645\u4E1A\u52A1\u4E2D\u5E94\u5982\u4E0B\u6240\u793A\uFF0C\u4EC5\u5BF9\u52A8\u6001\u7ED1\u5B9A\u7684\u5185\u5BB9\u8FDB\u884C\u5355\u5143\u6D4B\u8BD5\u3002</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[<span class="token punctuation">&#39;</span>primary<span class="token punctuation">&#39;</span>, active ? <span class="token punctuation">&#39;</span>active<span class="token punctuation">&#39;</span> : null]<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ color: active ? <span class="token punctuation">&#39;</span>orange<span class="token punctuation">&#39;</span> : null }<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">active</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue Test&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u4EC5\u5BF9\u4E0A\u8FF0\u52A8\u6001\u7ED1\u5B9A\u5185\u5BB9\u8FDB\u884C\u5355\u5143\u6D4B\u8BD5</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>
<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">&#39;path/to/Foo.vue&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Foo.vue&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render text&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;DOM node classes&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">classes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;DOM node style&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;orange&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6\u5951\u7EA6\u7684\u8F93\u5165-props-setprops" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u5951\u7EA6\u7684\u8F93\u5165 <code>props() / setProps()</code> <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u5951\u7EA6\u7684\u8F93\u5165-props-setprops" aria-hidden="true">#</a></h2><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ mssage }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">mssage</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;received prop&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">propsData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u63D0\u4F9B\u4E00\u4E2A\u6302\u8F7D\u9009\u9879\u7684 propsData \u5C5E\u6027\uFF0C\u6A21\u62DF\u7EC4\u4EF6\u7684 prop \u8F93\u5165\u3002</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">,</span> <span class="token comment">// propsData \u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A Vue API\uFF0C\u4E0D\u662F Vue Test Utils \u5B9E\u73B0\u7684\u6302\u8F7D\u9009\u9879\u3002\u5982\u540C\u5176\u5B83 data method \u5C5E\u6027\u4E00\u6837\uFF0C\u5185\u90E8\u4F1A\u88AB Vue.extends \u5904\u7406</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">props</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// wrapper.props() \u8FD4\u56DE\u7EC4\u4EF6\u63A5\u6536\u7684\u6240\u6709 prop \u7EC4\u6210\u7684\u5BF9\u8C61</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">props</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679C\u6A21\u62DF\u5916\u90E8\u66F4\u65B0\u4E86 prop\uFF0C\u5219\u9700\u8981\u65AD\u8A00\u7EC4\u4EF6\u63A5\u6536\u5230 prop \u662F\u5426\u540C\u6837\u66F4\u65B0\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>setProps</code></p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;updated prop&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">propsData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">props</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">setProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue updated&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">props</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue updated&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;updated&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><blockquote><p>setProps \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A Promise\uFF0C\u786E\u4FDD Vue \u5F02\u6B65\u6E32\u67D3\u66F4\u65B0\u540E\u88AB resolved\u3002\u7C7B\u4F3C\u7684\u65B9\u6CD5\u8FD8\u6709\uFF1Atrigger / setData / setValue / setChecked / setSelected</p></blockquote><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6\u65B9\u6CD5" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u65B9\u6CD5 <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u65B9\u6CD5" aria-hidden="true">#</a></h2><p>\u7EC4\u4EF6 <code>method</code> \u7684\u51FD\u6570\uFF0C\u4E3B\u8981\u5173\u6CE8\u51FD\u6570\u5185\u90E8\u4EE3\u7801\u903B\u8F91\uFF0C\u5982\u679C\u662F\u65E0\u526F\u4F5C\u7528\u7684\u7EAF\u51FD\u6570\uFF0C\u90A3\u5C31\u5F53\u666E\u901A\u51FD\u6570\u4E00\u6837\u65AD\u8A00\u8F93\u5165\u8F93\u51FA\u5373\u53EF\uFF0C\u6BD4\u5982\u5E38\u89C1\u7684\u4E00\u4E9B\u8F6C\u6362\u51FD\u6570\uFF0C\u5E03\u5C14\u65AD\u8A00\u51FD\u6570\u7B49\u3002</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;pure function&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">isEvenNumber</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>Foo<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">isEvenNumber</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>Foo<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">isEvenNumber</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4F46\u662F\u5B9E\u9645\u4E1A\u52A1\u4E2D\uFF0Cmethod \u51FD\u6570\u66F4\u591A\u90FD\u662F\u5177\u6709\u4F9D\u8D56\u7684\u51FD\u6570\u3002</p><p><strong>\u4F9D\u8D56\u662F\u6307\u5728\u88AB\u6D4B\u8BD5\u4EE3\u7801\u5355\u5143\u63A7\u5236\u4E4B\u5916\u7684\u4EFB\u4F55\u4EE3\u7801</strong>\u3002\u6BD4\u5982\uFF1A</p><ul><li>\u65B9\u6CD5\u51FD\u6570\u4E2D\u8C03\u7528\u4E86\u6D4F\u89C8\u5668\u7684 API\uFF1A\u5982 <code>setTimeout</code> <code>fetch</code> \u7B49</li><li>\u88AB\u5BFC\u5165\u7B2C\u4E09\u6A21\u5757\u7684\u65B9\u6CD5\uFF1A\u5982 <code>import api from &#39;path/to/api.js&#39;</code></li><li>Vue \u5168\u5C40\u6CE8\u5165\u7684\u65B9\u6CD5\u6216\u5B9E\u4F8B\u5C5E\u6027: \u5982 <code>Vue.prototype.$utils.someFn</code>\u3002</li></ul><p>\u6D4B\u8BD5\u6709\u4F9D\u8D56\u9879\u7684\u65B9\u6CD5\uFF0C\u5219\u9700\u8981\u4E00\u4E9B\u66F4\u590D\u6742\u7684\u65B9\u6CD5\u53BB\u5B9E\u73B0\u6D4B\u8BD5\u3002\u4E3A\u4E86\u51CF\u5C11\u6D4B\u8BD5\u4EE3\u7801\u548C\u4E1A\u52A1\u4EE3\u7801\u7684\u8026\u5408\uFF0C\u5728\u6D4B\u8BD5\u4E2D\u901A\u8FC7<strong>\u6A21\u62DF\u4EE3\u7801</strong>\u6765\u89E3\u51B3\u8FD9\u4E9B\u590D\u6742\u7684\u4F9D\u8D56\u3002</p><p><strong>\u6A21\u62DF\u4EE3\u7801\u662F\u6307\u7528\u4F60\u53EF\u63A7\u5236\u7684\u4EE3\u7801\u6765\u66FF\u6362\u4F60\u4E0D\u53EF\u63A7\u5236\u7684\u4F9D\u8D56</strong></p><p><code>Jest</code> \u6D4B\u8BD5\u6846\u67B6\u63D0\u4F9B\u4E86\u4EE5\u4E0B API \u6765\u751F\u6210\u6A21\u62DF\u4EE3\u7801\uFF1A</p><ul><li><code>jest.fn</code>\uFF1A\u6A21\u62DF\u4E00\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0</li><li><code>jest.spyOn</code>: \u6A21\u62DF\u590D\u6742\u5BF9\u8C61\u4E2D\u67D0\u4E2A\u65B9\u6CD5\u7684\u5B9E\u73B0</li><li><code>jest.mock</code>\uFF1A\u6A21\u62DF\u4E00\u4E2A\u6A21\u5757\u5BF9\u8C61</li><li><code>jest.useFakeTimers</code>\uFF1A\u6A21\u62DF\u5B9A\u65F6\u5668\u7684\u5B9E\u73B0 <blockquote><p>\u5173\u4E8E jest \u6A21\u62DF\u65B9\u6CD5\u7684\u8BB2\u89E3\u8BF7\u79FB\u5C11 jest \u7684\u5B66\u4E60\u603B\u7ED3\u3002</p></blockquote></li></ul><p>\u53E6\u5916 <code>@vue/test-utils</code> \u4E5F\u63D0\u4F9B\u4E86\u9014\u5F84\u6765\u6A21\u62DF Vue \u5168\u5C40\u6CE8\u5165\u65B9\u6CD5\u3001\u5C5E\u6027\u7B49\u3002\u5B83\u4EEC\u901A\u8FC7 <code>mount / shallowMout</code> \u6302\u8F7D\u51FD\u6570\u7684\u9009\u9879\u5BF9\u8C61\u6765\u5B9E\u73B0\u3002</p><ul><li><code>options.mocks</code>: \u4F2A\u9020 Vue \u5168\u5C40\u6CE8\u5165\u7684\u5C5E\u6027\u6216\u65B9\u6CD5</li></ul><h3 id="\u6D4B\u8BD5\u7EC4\u4EF6\u5185\u5168\u5C40\u516C\u5171\u65B9\u6CD5\u7684\u8C03\u7528-mocks" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u5185\u5168\u5C40\u516C\u5171\u65B9\u6CD5\u7684\u8C03\u7528 <code>mocks</code> <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u5185\u5168\u5C40\u516C\u5171\u65B9\u6CD5\u7684\u8C03\u7528-mocks" aria-hidden="true">#</a></h3><p>\u5728 Vue \u9879\u76EE\u4E2D\uFF0C\u6211\u4EEC\u901A\u5E38\u4F1A\u5C06\u5168\u5C40\u516C\u7528\u7684\u65B9\u6CD5\u6302\u8F7D\u5230 <code>Vue.prototype</code> \u539F\u578B\u5BF9\u8C61\u4E0A\u3002\u5BF9\u4E8E\u8BE5\u65B9\u6CD5\u7684\u5185\u90E8\u903B\u8F91\u7684\u6D4B\u8BD5\u5E94\u8BE5\u5728\u5B83\u72EC\u7ACB\u7684\u6D4B\u8BD5\u6587\u4EF6\u4E2D\u5B8C\u6210\uFF0C\u5728\u7EC4\u4EF6\u7684\u6D4B\u8BD5\u4E2D\u4EC5\u4EC5\u662F\u6D4B\u8BD5\u8BE5\u65B9\u6CD5\u662F\u5426\u80FD\u8C03\u7528\u6210\u529F\uFF0C\u6216\u8C03\u7528\u8FD4\u56DE\u6B63\u5E38\u7684\u8F93\u51FA\u5373\u53EF\u3002</p><p>\u6B64\u65F6\uFF0C\u56E0\u4E3A\u4E0D\u9700\u8981\u5B9E\u9645\u6267\u884C\u65B9\u6CD5\u5185\u90E8\u903B\u8F91\uFF0C\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u901A\u8FC7\u6A21\u62DF\u4EE3\u7801\u6765\u6D4B\u8BD5\u8F93\u51FA\u3002</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;calls $t.start on load&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;mock global method&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> $t <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">start</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">mocks</span><span class="token operator">:</span> <span class="token punctuation">{</span> $t <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>$t<span class="token punctuation">.</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><code>mocks</code> \u6302\u8F7D\u9009\u9879\u7528\u5904\u6700\u591A\u7684\u5E94\u8BE5\u5C31\u662F\u6A21\u62DF <code>$route / $router / $store</code> \u7684\u5168\u5C40\u5C5E\u6027\u4E86\uFF0C\u6211\u4EEC\u4F1A\u5728\u4E0B\u9762\u7684\u6D4B\u8BD5 <code>vue-router / vuex</code> \u4EE3\u7801\u4E2D\u770B\u5230\u3002</p><h3 id="\u6D4B\u8BD5\u7EC4\u4EF6\u4E2D\u4F9D\u8D56\u7684\u5BFC\u5165\u6A21\u5757" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u4E2D\u4F9D\u8D56\u7684\u5BFC\u5165\u6A21\u5757 <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u4E2D\u4F9D\u8D56\u7684\u5BFC\u5165\u6A21\u5757" aria-hidden="true">#</a></h3><p>\u6211\u4EEC\u901A\u5E38\u4F1A\u5728\u7EC4\u4EF6\u4E2D\u4F7F\u7528 <code>axios</code> \u8BF7\u6C42\u6570\u636E\u3002</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getList(<span class="token punctuation">&#39;</span>user<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u8BF7\u6C42\u6570\u636E<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in List<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item.value }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">getList</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://api.example.com/list?q=&#39;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> res<span class="token punctuation">.</span>data
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><code>getList</code> \u51FD\u6570\u7684\u8C03\u7528\u4F1A\u53D1\u8D77\u4E00\u4E2A HTTP \u8BF7\u6C42\uFF0C\u4F46\u5728\u6D4B\u8BD5\u4E2D\uFF0C\u6211\u4EEC\u4E0D\u4F1A\u60F3\u771F\u6B63\u53D1\u8D77\u4E00\u4E2A\u8BF7\u6C42\u7684\uFF0C\u56E0\u4E3A\u8FD9\u4F1A\u8BA9\u6D4B\u8BD5\u65F6\u95F4\u66F4\u957F\uFF0C\u4E14\u8BA9\u6D4B\u8BD5\u7ED3\u679C\u53D8\u5F97\u4E0D\u786E\u5B9A\u3002\u6240\u4EE5\u6211\u4EEC\u9700\u8981<strong>\u6A21\u62DF\u4EE3\u7801</strong>\u6765\u6A21\u62DF\u6B64\u5904\u7684\u8BF7\u6C42\u4EE3\u7801\u3002</p><p>\u56E0\u4E3A <code>axios</code> \u662F\u7EC4\u4EF6\u4F9D\u8D56\u7684\u5916\u90E8\u6A21\u5757\uFF0C\u5982\u679C\u8981\u6A21\u62DF\u6574\u4E2A\u6A21\u5757\u6587\u4EF6\uFF0C\u5C31\u8981\u7528\u5230 <code>jest.mock</code> \u51FD\u6570\u3002</p><div class="language-js"><pre><code>jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">get</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD9\u91CC\u6211\u4EEC\u6A21\u62DF\u4E86\u6574\u4E2A <code>axios</code> \u6A21\u5757\u5BF9\u8C61\uFF0C\u5E76\u4E14\u6A21\u62DF\u5B9E\u73B0\u4E86\u7528\u5230\u7684 <code>get</code> \u65B9\u6CD5\u3002</p><div class="language-js"><pre><code><span class="token comment">// List.spec.js</span>

<span class="token comment">// jest.mock \u9700\u8981\u653E\u7F6E\u5728\u6D4B\u8BD5\u6587\u4EF6\u9876\u90E8</span>
jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">get</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">&#39;../src/components/List.vue&#39;</span>

<span class="token function">jest</span><span class="token punctuation">(</span><span class="token string">&#39;called axios.get&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  List<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function">getLis</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span>
  <span class="token function">exptect</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span>get<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span><span class="token string">&#39;http://api.example.com/list?q=user&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0A\u8FF0\u6D4B\u8BD5\u7528\u4F8B\u786E\u5B9E\u80FD\u901A\u8FC7\uFF0C\u4E5F\u4E0D\u4F1A\u53D1\u8D77\u771F\u5B9E\u7684 HTTP \u8BF7\u6C42\u3002\u4F46\u662F\u771F\u5B9E axios \u8C03\u7528\u8FD4\u56DE\u7684\u662F\u5F02\u6B65\u7684 promise \u51FD\u6570\uFF0C\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u4FEE\u6539\u6D4B\u8BD5\u7528\u4F8B</p><div class="language-js"><pre><code><span class="token function">jest</span><span class="token punctuation">(</span><span class="token string">&#39;called axios.get&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  expect<span class="token punctuation">.</span><span class="token function">assertions</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  cosnt res <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
  axios<span class="token punctuation">.</span>get<span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token comment">// \u6A21\u62DFaxios.get \u8FD4\u56DE\u4E00\u4E2Aresolved \u72B6\u6001 promise \u5BF9\u8C61\u3002\u662F\u4EE5\u4E0B\u4EE3\u7801\u7684\u8BED\u6CD5\u7CD6jest.fn().mockImplementation(() =&gt; Promise.resolve(value))\uFF0C\u4E5F\u53EF\u4EE5\u76F4\u63A5\u5B9A\u4E49\u5728\u6A21\u62DF\u4EE3\u7801\u4E2D\uFF1A get: jest.fn(()=&gt; Promise.resolve({data: [1,2,3]}))</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">)</span>
  <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">getLis</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
  <span class="token function">exptect</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span>get<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span><span class="token string">&#39;http://api.example.com/list?q=user&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u771F\u5B9E\u4E1A\u52A1\u573A\u666F\u4E0B\uFF0C\u4F1A\u8C03\u7528 axios \u7684\u591A\u4E2A\u65B9\u6CD5<code>get / post / patch</code> \u7B49\uFF0C\u6240\u4EE5\u6700\u597D\u5C06\u6A21\u62DF\u7684 axios \u5BF9\u8C61\u653E\u5728\u4E00\u4E2A\u5355\u72EC\u7684\u6A21\u62DF\u6587\u4EF6\u4E2D\u3002</p><p>\u6B64\u65F6\uFF0Cjest \u5DF2\u7ECF\u7EA6\u5B9A\u6A21\u62DF\u6587\u4EF6\u7684\u5B9E\u73B0\u7EDF\u4E00\u653E\u5728 <code>__mocks__</code> \u76EE\u5F55\u4E0B\uFF0C\u5C31\u50CF\u7EA6\u5B9A\u7684 <code>__tests__</code> \u6587\u4EF6\u5939\u4E00\u6837\u4F1A\u81EA\u52A8\u5904\u7406\u3002</p><p>\u5728<code>node</code>\u73AF\u5883\u4E2D\uFF0Cnode \u5185\u90E8\u4F7F\u7528 <code>CommonJS</code> \u6A21\u5757\u89C4\u8303\u5B9E\u73B0\u4E86\u6A21\u5757\u89E3\u6790\u5668\uFF0C\u6765\u67E5\u627E\u6A21\u5757\u6587\u4EF6\u3002\u5728 <code>webpack</code> \u7684\u9879\u76EE\u4E2D\uFF0C<code>webpack</code> \u4E5F\u81EA\u5DF1\u5B9E\u73B0\u4E86\u6A21\u5757\u89E3\u6790\u65B9\u6CD5 <code>__webpack_require__</code>\uFF0C\u6240\u4EE5 <code>Jest</code> \u4E5F\u6709\u81EA\u5DF1\u7684\u6A21\u5757\u89E3\u6790\u5668\u6765\u67E5\u627E\u6A21\u62DF\u7684\u6587\u4EF6\u3002</p><p>\u6240\u4EE5\u8C03\u7528 <code>jest.mock(&#39;axios&#39;)</code> \u51FD\u6570\u540E\uFF0C\u5F53\u7EC4\u4EF6\u5185\u5BFC\u5165\u4E86 <code>import axios from &#39;axios&#39;</code>\u6A21\u5757\uFF0C Jset \u4F1A\u81EA\u52A8\u5728 <code>__mocks__</code> \u6587\u4EF6\u4E2D\u67E5\u627E\u540C\u540D\u7684\u6587\u4EF6\u5BFC\u5165\u6D4B\u8BD5\u4E2D\u3002</p><blockquote><p>\u5FC5\u987B\u662F <strong>mocks</strong> \u547D\u540D\uFF0C\u540C <strong>tests</strong> \u76EE\u5F55\u4E00\u6837\uFF0Cjest \u4F1A\u5229\u7528\u81EA\u5DF2\u5B9E\u73B0\u7684\u6A21\u62DF\u89E3\u6790\u5668\u81EA\u52A8\u67E5\u627E\u3002\u540C\u6837\u7684\uFF0C<strong>mocks</strong> \u6587\u4EF6\u5939\u53EF\u4EE5\u5728 tests \u76EE\u5F55\u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u5C31\u8FD1\u5728\u9700\u8981\u6A21\u62DF\u7684\u6A21\u62DF\u76EE\u5F55\u4E0B\u3002</p></blockquote><div class="language-js"><pre><code><span class="token comment">// tests/__mocks__/axios.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">get</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  post\uFF1Ajest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  put\uFF1A jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">&#39;../src/components/List.vue&#39;</span>

jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">)</span>

<span class="token function">jest</span><span class="token punctuation">(</span><span class="token string">&#39;called axios.get&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  expect<span class="token punctuation">.</span><span class="token function">assertions</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  cosnt res <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
  axios<span class="token punctuation">.</span>get<span class="token punctuation">.</span><span class="token function">mockResolvedValue</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token comment">// \u6A21\u62DFaxios.get \u8FD4\u56DE\u4E00\u4E2Aresolved \u72B6\u6001 promise \u5BF9\u8C61\u3002\u662F\u4EE5\u4E0B\u4EE3\u7801\u7684\u8BED\u6CD5\u7CD6jest.fn().mockImplementation(() =&gt; Promise.resolve(value))\uFF0C\u4E5F\u53EF\u4EE5\u76F4\u63A5\u5B9A\u4E49\u5728\u6A21\u62DF\u4EE3\u7801\u4E2D\uFF1A get: jest.fn(()=&gt; Promise.resolve({data: [1,2,3]}))</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">)</span>
  <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">getLis</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token function">exect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
  <span class="token function">exptect</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span>get<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span><span class="token string">&#39;http://api.example.com/list?q=user&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><strong>\u6CE8\u610F\u6E05\u9664 mock \u5F71\u54CD</strong></p><p>\u5982\u679C\u6B64\u65F6\u5728\u540C\u4E00\u4E2A\u6D4B\u8BD5\u6587\u4EF6\u4E2D\u589E\u52A0\u4EE5\u4E0B\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u4ECD\u7136\u4F1A\u901A\u8FC7\u3002</p><div class="language-js"><pre><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;Axios should not be called here&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span>get<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeCalledWith</span><span class="token punctuation">(</span>
    <span class="token string">&#39;https://jsonplaceholder.typicode.com/posts?q=an&#39;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679C\u6211\u4EEC\u4E0D\u60F3\u6A21\u62DF\u7684 axios \u5F71\u54CD\u5176\u5B83\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u5219\u9700\u8981\u6E05\u7A7A\u88AB\u6CE8\u518C\u7684\u6A21\u62DF\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5728 beforeEach \u51FD\u6570\u4E2D\u6DFB\u52A0\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-js"><pre><code><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  jest<span class="token punctuation">.</span><span class="token function">resetMoules</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  jest<span class="token punctuation">.</span><span class="token function">clearAllMocks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD9\u6837\u5C31\u53EF\u4EE5\u786E\u4FDD\u6BCF\u4E2A\u6D4B\u8BD5\u7528\u4F8B\u5728\u5F00\u59CB\u7684\u65F6\u5019\u6709\u4E00\u4E2A\u6E05\u6D01\u65E0\u6C61\u67D3\u7684\u6A21\u62DF\u4F9D\u8D56\u73AF\u5883\u3002</p><p>\u53E6\u5916\uFF0C\u6211\u4EEC\u901A\u5E38\u4E0D\u4F1A\u76F4\u63A5\u5728\u7EC4\u4EF6\u4E2D\u8C03\u7528 axios\uFF0C\u800C\u662F\u7528\u4F7F\u7528\u5C01\u88C5\u7684\u8BF7\u6C42 api \u8C03\u7528\u3002</p><p>\u6BD4\u5982\u5728 <code>/src/api/index.js</code> \u4E2D\u6709\u4E00\u4E2A\u83B7\u53D6\u5217\u8868\u6570\u636E\u7684\u8BF7\u6C42</p><div class="language-js"><pre><code><span class="token comment">// src/api/index.js</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/path/list&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// List.vue</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../api/index.js&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;ul&gt;&lt;li v-for=&quot;item in List&quot; :key=&quot;item.id&quot;&gt;{{item.value}}&lt;/li&gt;&lt;/ul&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u540C\u6837\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u4EE3\u7801\u6A21\u62DF api \u6587\u4EF6\uFF0C\u53EA\u9700\u8981\u4FDD\u8BC1\u5728 <code>__mocks__</code> \u76EE\u5F55\u4E0B\u5B58\u5728\u540C\u540D\u7684\u6587\u4EF6\u5373\u53EF\u3002</p><div class="language-js"><pre><code>jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;../api/index.js&#39;</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u67E5\u627E\u7EC4\u4EF6\u5185\u5143\u7D20\u7684\u65B9\u6CD5-find-findall" tabindex="-1">\u67E5\u627E\u7EC4\u4EF6\u5185\u5143\u7D20\u7684\u65B9\u6CD5 <code>find findAll</code> <a class="header-anchor" href="#\u67E5\u627E\u7EC4\u4EF6\u5185\u5143\u7D20\u7684\u65B9\u6CD5-find-findall" aria-hidden="true">#</a></h2><p><code>wrapper.find(selector) / wrapper.findAll(selector)</code>\u540C\u539F\u751F\u7684 DOM API <code>element.querySelector / querySelectorAll</code> \u4E00\u6837\uFF0C\u4F20\u5165\u6B63\u786E\u7684 CSS \u9009\u62E9\u5668\uFF0C\u4F1A\u8FD4\u56DE <code>DOMWrapper</code>\u5305\u88C5\u5BF9\u8C61\u3002</p><ul><li>CSS \u9009\u62E9\u5668 <ul><li>\u6807\u7B7E\u9009\u62E9\u5668 (div\u3001foo\u3001bar)</li><li>\u7C7B\u9009\u62E9\u5668 (.foo\u3001.bar)</li><li>=\u7279\u6027\u9009\u62E9\u5668 ([foo]\u3001[foo=&quot;bar&quot;])</li><li>id \u9009\u62E9\u5668 (#foo\u3001#bar)</li><li>\u4F2A\u9009\u62E9\u5668 (div:first-of-type)</li></ul></li><li>\u7EC4\u5408\u9009\u62E9\u5668\uFF1A <ul><li>\u76F4\u63A5\u4ECE\u5C5E\u7ED3\u5408 (div &gt; #bar &gt; .foo)</li><li>\u4E00\u822C\u4ECE\u5C5E\u7ED3\u5408 (div #bar .foo)</li><li>\u8FD1\u90BB\u5144\u5F1F\u9009\u62E9\u5668 (div + .foo)</li><li>\u4E00\u822C\u5144\u5F1F\u9009\u62E9\u5668 (div ~ .foo)</li></ul></li></ul><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;find element&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> divWrapper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#foo&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>divWrapper<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>divWrapper<span class="token punctuation">.</span>element<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;find all span&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> spanWrapperArray <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>spanWrapperArray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u67E5\u627E\u7EC4\u4EF6\u5185\u5B50\u7EC4\u4EF6\u7684\u65B9\u6CD5-findcomponent-findallcomponents" tabindex="-1">\u67E5\u627E\u7EC4\u4EF6\u5185\u5B50\u7EC4\u4EF6\u7684\u65B9\u6CD5 <code>findComponent findAllComponents</code> <a class="header-anchor" href="#\u67E5\u627E\u7EC4\u4EF6\u5185\u5B50\u7EC4\u4EF6\u7684\u65B9\u6CD5-findcomponent-findallcomponents" aria-hidden="true">#</a></h2><p><code>find / findAll</code> \u7528\u6765\u67E5\u627E DOM \u5143\u7D20\uFF0C<code>findComponent / findAllComponents</code> \u7528\u6765\u67E5\u627E\u5B50\u7EC4\u4EF6\u3002</p><p>\u7C7B\u4F3C\u9009\u62E9\u5668\uFF0C\u53EF\u4EE5\u4F20\u5165\u7EC4\u4EF6<code>\u6784\u5EFA\u51FD\u6570\u3001ref\u3001name</code>\u6765\u67E5\u627E\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vue/test-utils&#39;</span>

<span class="token keyword">const</span> Bar <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;Bar&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Foo&#39;</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
    &lt;span&gt;Foo&lt;/span&gt;
    &lt;Bar ref=&quot;bar&quot; /&gt;
  &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> Bar <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> warpper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span> <span class="token comment">// =&gt; finds Bar by component instance</span>
<span class="token function">expect</span><span class="token punctuation">(</span>bar<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> barByName <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; finds Bar by \`name\`</span>
<span class="token function">expect</span><span class="token punctuation">(</span>barByName<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> barRef <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">ref</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; finds Bar by \`ref\`</span>
<span class="token function">expect</span><span class="token punctuation">(</span>barRef<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> bar <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findAllComponents</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// WrapperArray.at(number) \u8FD4\u56DE\u6570\u7EC4\u7B2C\u51E0\u4E2A\u5143\u7D20</span>
<span class="token function">expect</span><span class="token punctuation">(</span>bar<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> bars <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findAllComponents</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>bars<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u5143\u7D20\u539F\u751F-dom-\u4E8B\u4EF6" tabindex="-1">\u6D4B\u8BD5\u5143\u7D20\u539F\u751F Dom \u4E8B\u4EF6 <a class="header-anchor" href="#\u6D4B\u8BD5\u5143\u7D20\u539F\u751F-dom-\u4E8B\u4EF6" aria-hidden="true">#</a></h2><p>\u539F\u751F DOM \u4E8B\u4EF6\u89E6\u53D1\u53EF\u4EE5\u4F7F\u7528 <code>find</code> \u67E5\u627E\u76EE\u6807\u5143\u7D20\u540E\u8FD4\u56DE\u7684\u5305\u88C5\u5BF9\u8C61 <code>DOMWrapper</code> \u63D0\u4F9B\u7684 <code>trigger</code> \u65B9\u6CD5\u3002\u8BE5\u65B9\u6CD5\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u5177\u4F53\u89E6\u53D1\u7684\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u89E6\u53D1\u540E\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code>\uFF0C\u4FDD\u8BC1\u7EC4\u4EF6\u5F02\u6B65\u66F4\u65B0\u540E\uFF0C\u88AB <code>resolved</code>\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> Bar <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;button @click=&quot;onButtonClick&quot;&gt;\u70B9\u51FB {{ count }}&lt;/button&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onButtonClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;DOM event&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span>
  <span class="token keyword">const</span> btnWrapper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> btnWrapper<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6\u81EA\u5B9A\u4E49\u4E8B\u4EF6" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u81EA\u5B9A\u4E49\u4E8B\u4EF6 <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u81EA\u5B9A\u4E49\u4E8B\u4EF6" aria-hidden="true">#</a></h2><p>\u53EF\u4EE5\u5728\u7EC4\u4EF6\u6302\u8F7D\u65F6\u901A\u8FC7 <code>listeners</code> \u9009\u9879\u4F20\u5165\u6A21\u62DF\u65B9\u6CD5\uFF0C\u7136\u540E\u4E8B\u4EF6\u89E6\u53D1\u540E\uFF0C\u65AD\u8A00\u65B9\u6CD5\u662F\u5426\u8C03\u7528\uFF0C\u6765\u8BC1\u5B9E\u4E8B\u4EF6\u89E6\u53D1\u4E86\u3002</p><p>\u539F\u7406\u662F\u8BBE\u7F6E\u4E86\u7EC4\u4EF6\u5B9E\u4F8B\u7684 <code>vm.$listeners</code> \u5BF9\u8C61</p><blockquote><p>\u5B50\u7EC4\u4EF6\u7684 $listeners \u5305\u542B\u4E86\u7236\u4F5C\u7528\u57DF\u4E2D\u7684 (\u4E0D\u542B .native \u4FEE\u9970\u5668\u7684) v-on \u4E8B\u4EF6\u76D1\u542C\u5668\u3002</p></blockquote><div class="language-js"><pre><code><span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;button v-on:click=&quot;onClick&quot;&gt;&lt;/button&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;button clicked&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> onClick <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">listeners</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">click</span><span class="token operator">:</span> onClick<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

wrapper<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>onClick<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF-v-on-emit" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF <code>v-on / $emit</code> <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF-v-on-emit" aria-hidden="true">#</a></h2><p>\u4ECE\u7EC4\u4EF6\u5951\u7EA6\u89C4\u5219\u770B\uFF0CVue \u7EC4\u4EF6\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u5206\u4E3A\u4E24\u4E2A\u90E8\u5206\uFF1A\u7236\u7EC4\u4EF6\u76D1\u542C\u4E8B\u4EF6\u548C\u5B50\u7EC4\u4EF6\u89E6\u53D1\u4E8B\u4EF6</p><ul><li>\u5BF9\u4E8E\u5B50\u7EC4\u4EF6\u89D2\u5EA6\u6765\u8BF4, DOM \u4E8B\u4EF6 trigger \u89E6\u53D1\u662F\u8F93\u5165\uFF0C\u7136\u540E\u5B50\u7EC4\u4EF6 emit \u4E8B\u4EF6\u662F\u8F93\u51FA\u3002</li><li>\u5BF9\u4E8E\u7236\u7EC4\u4EF6\u89D2\u5EA6\u6765\u8BF4\uFF0C\u5B50\u7EC4\u4EF6\u89E6\u53D1 emit \u7684\u4E8B\u4EF6\u662F\u8F93\u5165\uFF0C\u4E8B\u4EF6\u5904\u7406\u5668\u7684\u6267\u884C\u662F\u8F93\u51FA\u3002</li></ul><ol><li>\u6D4B\u8BD5\u7EC4\u4EF6\u53D1\u5C04\u81EA\u5B9A\u4E49\u4E8B\u4EF6 <code>ecmitted()</code></li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> Bar <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;button @click=&quot;onButtonClick&quot;&gt;\u70B9\u51FB {{ count }}&lt;/button&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onButtonClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">,</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;emitted 1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span>
  wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>

  <span class="token comment">// wrapper.emitted() \u8FD4\u56DE {&#39;on-click&#39;: [[1], [2]]}</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// [2].length</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u56E0\u4E3A\u6211\u4EEC\u7ED1\u5B9A\u4E86\u4E8B\u4EF6\uFF0C\u6240\u4EE5\u4E5F\u53EF\u4EE5\u5229\u7528\u5143\u7D20\u7684\u70B9\u51FB\u4E8B\u4EF6\u89E6\u53D1 emit</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;emitted 2&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span>
  <span class="token keyword">const</span> btnWrapper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> btnWrapper<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> btnWrapper<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// wrapper.emitted() \u8FD4\u56DE {&#39;on-click&#39;: [[1], [2]]}</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveProperty</span><span class="token punctuation">(</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">emitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// [2].length</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ol start="2"><li>\u6D4B\u8BD5\u7EC4\u4EF6\u76D1\u542C\u81EA\u5B9A\u4E49\u4E8B\u4EF6</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
    &lt;span&gt;{{ payload }}&lt;/span&gt;
    &lt;Bar @on-click=&quot;onClick&quot; /&gt;
  &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> Bar <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>payload <span class="token operator">=</span> payload
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;update payload when Bar click to emit on-click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> btnWrapper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> btnWrapper<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5728\u6B64\u5904 showMount(Foo) \u548C mount(Foo) \u6302\u8F7D\u4F1A\u6709\u4EC0\u4E48\u533A\u522B\u561B\uFF1F</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;update payload by shallowMount&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token comment">// const btnWrapper = wrapper.find(&#39;button&#39;) // \u56E0\u4E3A\u662F\u6D45\u6302\u8F7D\uFF0CBar \u7EC4\u4EF6\u662F\u63D2\u6869 Bar-Stub\uFF0C\u67E5\u627E\u5176\u4E2D\u7684DOM\u5143\u7D20\u4F1A\u62A5\u9519</span>
  <span class="token keyword">const</span> bar <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span>Bar<span class="token punctuation">)</span> <span class="token comment">// \u4F46\u662F\u76F4\u63A5\u67E5\u627E Bar \u7EC4\u4EF6\u53EF\u4EE5\u83B7\u5F97\u5B8C\u6574\u7684 VueWrapper \u5305\u88C5\u5BF9\u8C61</span>
  bar<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;on-click&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF-provide-inject" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF <code>provide / inject</code> <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u95F4\u4E8B\u4EF6\u901A\u8BAF-provide-inject" aria-hidden="true">#</a></h2><p>\u7236\u7EC4\u4EF6\u53EF\u4EE5\u4F7F\u7528 <code>provide</code> \u5411\u6240\u6709\u5B50\u7EC4\u4EF6\u4F20\u5165\u5171\u4EAB\u7684\u6570\u636E\uFF0C\u5B50\u7EC4\u4EF6\u901A\u8FC7 <code>inject</code> \u6765\u8BBF\u95EE\u7236\u7EC4\u4EF6\u4F20\u5165\u4E0B\u6765\u7684\u516C\u5171\u5C5E\u6027\u3002</p><p>\u5B50\u7EC4\u4EF6\u6D4B\u8BD5\u4E2D\uFF0C\u60F3\u8981\u77E5\u9053\u7236\u7EC4\u4EF6\u901A\u8BAF <code>provide</code> \u4F20\u5165\u7684\u6570\u636E\u80FD\u5426\u88AB\u6B63\u5E38\u6E32\u67D3\uFF0C\u53EF\u4EE5\u5BF9\u5B50\u7EC4\u4EF6\u52A0\u8F7D\u65F6\u4F20\u5165 <code>provide</code> \u5C5E\u6027\u6765\u4F2A\u88C5\u662F\u7236\u7EC4\u4EF6\u4F20\u5165\u7684\u6570\u636E\u3002</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;provide inject&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">inject</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;{{this.bar()}}&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Component<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">provide</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;barValue&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;barValue&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6\u7ED1\u5B9A\u7684\u54CD\u5E94\u6570\u636E-data-setdata" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6\u7ED1\u5B9A\u7684\u54CD\u5E94\u6570\u636E <code>data / setData</code> <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6\u7ED1\u5B9A\u7684\u54CD\u5E94\u6570\u636E-data-setdata" aria-hidden="true">#</a></h2><p>\u6700\u5F00\u53D1\u7684\u4F8B\u5B50,\u5F53\u6211\u4EEC\u7B80\u5355\u6D4B\u8BD5\u4E00\u4E2A\u7EC4\u4EF6\u7684\u6E32\u67D3\u8F93\u51FA,\u53EF\u4EE5\u662F\u8FD9\u6837</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;{{ msg }}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679C\u6B64\u65F6\u6211\u4EEC\u8981\u6D4B\u8BD5 msg \u53D8\u91CF\u662F\u5426\u662F vue \u54CD\u5E94\u5F0F\u6570\u636E,\u6211\u4EEC\u5E0C\u671B\u624B\u52A8\u6539\u53D8 msg \u7684\u503C,\u89C6\u56FE\u6E32\u67D3\u4E5F\u4F1A\u66F4\u65B0,\u6B64\u65F6\u4F1A\u8FD9\u4E48\u505A:</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;{{ msg }}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
  wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;Hello Vue Test&#39;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4F46\u6D4B\u8BD5\u7ED3\u679C\u8FD4\u56DE\u5931\u8D25.\u539F\u56E0\u662F vue \u54CD\u5E94\u5F0F\u6570\u636E\u89E6\u53D1\u89C6\u56FE\u66F4\u65B0\u662F\u5F02\u6B65\u7684.</p><p>\u5728\u4E1A\u52A1\u4EE3\u7801\u4E2D,\u5982\u679C\u6211\u4EEC\u66F4\u6539\u4E86\u54CD\u5E94\u5F0F\u6570\u636E,\u60F3\u63A5\u7740\u67E5\u770B\u5176\u54CD\u5E94\u5F0F\u7ED3\u679C,\u901A\u5E38\u4F1A\u5728 <code>Vue.nextTick</code> \u56DE\u8C03\u51FD\u6570\u4E2D\u6267\u884C.\u540C\u6837\u5728\u6D4B\u8BD5\u4E2D,\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5F02\u6B65\u6D4B\u8BD5,\u7B49\u5F85 vue \u6E32\u67D3\u7684\u4E0B\u4E00\u5E27 <code>nextTick</code> \u518D\u65AD\u8A00\u3002</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;data / nextTick&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;{{ msg }}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
  wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;Hello Vue Test&#39;</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5BF9\u8FD9\u79CD\u60C5\u5F62\uFF0C\u5728 <code>@vue/test-utils</code> \u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E2A\u8BED\u6CD5\u7CD6 <code>setData</code>\uFF0C\u53EF\u4EE5\u7B80\u5316\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-js"><pre><code>test<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token string">&#39;data / setData&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;{{ msg }}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Hello Vue&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue Test&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u8868\u5355\u4E8B\u4EF6" tabindex="-1">\u6D4B\u8BD5\u8868\u5355\u4E8B\u4EF6 <a class="header-anchor" href="#\u6D4B\u8BD5\u8868\u5355\u4E8B\u4EF6" aria-hidden="true">#</a></h2><p>\u5728\u8868\u5355\u5143\u7D20\u4E2D\uFF0C\u901A\u5E38\u4F1A\u4F7F\u7528 <code>v-model</code> \u7ED1\u5B9A\u54CD\u5E94\u6570\u636E\u3002</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputVal<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>\u4F46\u5176\u5B9E\u8FD9\u662F\u4E00\u4E2A\u8BED\u6CD5\u7CD6\u8BED\u6CD5\uFF0C\u5B83\u662F\u54CD\u5E94\u5F0F\u6570\u636E\u7ED1\u5B9A\u548C\u4E8B\u4EF6\u7ED1\u5B9A\u7684\u7B80\u5199</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(<span class="token punctuation">&#39;</span>input<span class="token punctuation">&#39;</span>, $event.target.value)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>\u5728\u6D4B\u8BD5\u8FD9\u7C7B\u6570\u636E\u65F6\uFF0C\u6211\u4EEC\u53EF\u80FD\u9700\u8981\uFF1A\u8BBE\u7F6E input \u5143\u7D20\u7684 value \u503C\uFF0C\u7136\u540E\u5728\u5143\u7D20\u4E0A\u89E6\u53D1\u4E00\u4E2A\u53D8\u66F4\u4E8B\u4EF6\u4EE5\u66F4\u65B0\u7ED1\u5B9A\u7684\u503C\u3002</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;input :value=&quot;inputValue&quot; @input=&quot;onInput&quot;&gt;&lt;/input&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">inputValue</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">onInput</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>inputValue <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> input <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span>
  input<span class="token punctuation">.</span>element<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span>
  input<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u540C\u6837\uFF0C<code>@vue/test-utils</code> \u63D0\u4F9B\u4E86\u7B80\u5355\u7684 API <code>setValue</code></p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;input / setValue&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;input v-model=&quot;inputValue&quot;&gt;&lt;/input&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">inputValue</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Foo<span class="token punctuation">)</span>
  <span class="token keyword">const</span> input <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u540C\u6837\u7684\u539F\u7406\uFF0C\u5BF9\u4E8E\u5355\u9009\u6846\u63D0\u4F9B\u4E86 <code>setChecked</code>\u3001\u591A\u9009\u6846\u7EC4\u4EF6\u63D0\u4F9B\u4E86 <code>setSelected</code> \u8BED\u6CD5\uFF1A</p><div class="language-js"><pre><code><span class="token comment">// input =&gt; setValue \u76F8\u5F53\u4E8E</span>
textInput<span class="token punctuation">.</span>element<span class="token punctuation">.</span>value <span class="token operator">=</span> value
textInput<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// radio =&gt; setChecked</span>
checkboxInput<span class="token punctuation">.</span>element<span class="token punctuation">.</span>checked <span class="token operator">=</span> checked
checkboxInput<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// select =&gt; setSelected</span>
option<span class="token punctuation">.</span>element<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token boolean">true</span>
parentSelect<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E00\u4E2A\u8868\u5355\u7EC4\u4EF6\u6D4B\u8BD5\uFF1A</p><div class="language-js"><pre><code>describe<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Form <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;form&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;form&gt;
    &lt;label&gt;Name:
      &lt;input type=&quot;text&quot; v-model=&quot;name&quot; /&gt;
    &lt;/label&gt;
    &lt;label&gt;Gender: 
      &lt;input type=&quot;radio&quot; id=&quot;male&quot; value=&quot;male&quot; v-model=&quot;gender&quot;&gt; Male
      &lt;input type=&quot;radio&quot; id=&quot;female&quot; value=&quot;female&quot; v-model=&quot;gender&quot;&gt; Female
    &lt;/label&gt;
    &lt;label&gt;Please choose one or more pets:
        &lt;select v-model=&quot;pets&quot; name=&quot;pets&quot; multiple&gt;
          &lt;optgroup label=&quot;4-legged pets&quot;&gt;
            &lt;option value=&quot;dog&quot;&gt;Dog&lt;/option&gt;
            &lt;option value=&quot;cat&quot;&gt;Cat&lt;/option&gt;
            &lt;option value=&quot;hamster&quot;&gt;Hamster&lt;/option&gt;
          &lt;/optgroup&gt;
          &lt;optgroup label=&quot;Flying pets&quot;&gt;
            &lt;option value=&quot;parrot&quot;&gt;Parrot&lt;/option&gt;
            &lt;option value=&quot;macaw&quot;&gt;Macaw&lt;/option&gt;
            &lt;option value=&quot;albatross&quot;&gt;Albatross&lt;/option&gt;
          &lt;/optgroup&gt;
        &lt;/select&gt;
      &lt;/label&gt;
    &lt;/form&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">pets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Form<span class="token punctuation">)</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;input / setValue&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> inputWrapper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=&quot;text&quot;]&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> inputWrapper<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;radio / setChecked&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> maleRadioWraaper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;input#male&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> maleRadioWraaper<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>maleRadioWraaper<span class="token punctuation">.</span>element<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>gender<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;select / setSelected&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> options <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&#39;option&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> optionDog <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> optionMacaw <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> optionDog<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> optionMacaw<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&#39;option:checked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>optionMacaw<span class="token punctuation">.</span>element<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>optionMacaw<span class="token punctuation">.</span>element<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>pets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;macaw&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5\u7EC4\u4EF6" tabindex="-1">\u6D4B\u8BD5\u7EC4\u4EF6 <a class="header-anchor" href="#\u6D4B\u8BD5\u7EC4\u4EF6" aria-hidden="true">#</a></h2><h3 id="\u7EC4\u4EF6\u63D2\u69FD" tabindex="-1">\u7EC4\u4EF6\u63D2\u69FD <a class="header-anchor" href="#\u7EC4\u4EF6\u63D2\u69FD" aria-hidden="true">#</a></h3><p>\u5BF9\u4E8E\u7EC4\u4EF6\u63D2\u69FD\u7684\u6D4B\u8BD5\u662F\u65AD\u8A00\u63D2\u69FD\u7684\u5185\u5BB9\u662F\u5426\u6210\u529F\u6E32\u67D3\u5728\u7236\u7EC4\u4EF6\u4E2D\u3002</p><p>\u5728 Vue \u4E2D\u6709\u4E09\u79CD\u7C7B\u578B\u7684\u63D2\u69FD\uFF1A</p><ul><li>\u9ED8\u8BA4\u63D2\u69FD</li><li>\u5177\u540D\u63D2\u69FD</li><li>\u4F5C\u7528\u57DF\u63D2\u69FD</li></ul><p>\u4E00\u4E2A\u6E32\u67D3\u5217\u8868\u7684\u4F8B\u5B50\uFF1A</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;List&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span>
<span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u901A\u8FC7 <code>@vue/test-utils</code> \u63D0\u4F9B\u7684 <code>slots</code> \u6302\u8F7D\u9009\u9879\u53EF\u4EE5\u4E3A\u7EC4\u4EF6\u6CE8\u5165\u63D2\u69FD\u5185\u5BB9</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render default slot&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&lt;li class=&quot;list-item&quot;&gt;list-item&lt;/li&gt;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&#39;.list-item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u73B0\u5728\u4E3A\u5217\u8868\u7EC4\u4EF6\u589E\u52A0\u4E24\u4E2A\u5177\u540D\u7684\u63D2\u69FD\uFF0C\u6765\u81EA\u5B9A\u4E49\u5217\u8868\u8868\u5934\u548C\u5C3E\u90E8</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>This is default List header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;List&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span>
<span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Vue \u6D4B\u8BD5\u5957\u4EF6 <code>@vue/test-utils</code> \u63D0\u4F9B\u7684 <code>slots</code> \u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u9ED8\u8BA4\u63D2\u69FD\u4F7F\u7528 <code>default</code> \u4E3A\u5065\u540D\uFF0C\u6240\u4EE5\u5177\u540D\u63D2\u69FD\u53EF\u4EE5\u4F7F\u7528\u5177\u4F53\u540D\u79F0\u4E3A\u952E\u540D\u3002</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render named slot&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&lt;li class=&quot;list-item&quot;&gt;list-item&lt;/li&gt;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1 class=&quot;list-header&quot;&gt;This is Test List header&lt;/h1&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;p class=&quot;list-footer&quot;&gt;2021-5-18 6:05 am&lt;/p&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&#39;.list-item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.list-header&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.list-footer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u56E0\u4E3A header \u8FD8\u63D0\u4F9B\u4E86\u63D2\u69FD\u9ED8\u8BA4\u5185\u5BB9\uFF0C\u53EF\u4EE5\u6D4B\u8BD5\u5176\u662F\u5426\u6E32\u67D3</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render slot default content&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&lt;li class=&quot;list-item&quot;&gt;list-item&lt;/li&gt;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;This is default List header&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5047\u8BBE\u6211\u4EEC\u5217\u8868\u7684\u5177\u540D\u63D2\u69FD\u5141\u8BB8\u6211\u4EEC\u81EA\u5B9A\u4E49 html \u7ED3\u6784\u548C\u6837\u5F0F\uFF0C\u6BD4\u5982\u6807\u9898\u524D\u9700\u8981\u589E\u52A0\u4E00\u4E2A\u56FE\u6807\uFF0C\u4F46\u662F\u6807\u9898\u5185\u5BB9\u4E0D\u518D\u662F\u5916\u90E8\u5B9A\u4E49\uFF0C\u800C\u662F\u4F7F\u7528 <code>List</code> \u7EC4\u4EF6\u4F20\u5165\u7684 <code>prop</code> \u6570\u636E <code>title</code>\u3002\u6B64\u65F6\u53EF\u4EE5\u4F7F\u7528\u5E26\u6709\u4F5C\u7528\u57DF\u7684\u5177\u540D\u63D2\u69FD\u3002</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>default list<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;List&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">title</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span>
<span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u6211\u4EEC\u4F7F\u7528\u65F6\u53EF\u4EE5\u81EA\u5B9A\u4E49\u4E00\u4E2A\u5E26 icon \u7684\u6807\u9898\uFF1A</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>List</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slotProps<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iconfont icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token entity" title="\uE7CB">&amp;#xe7cb;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ slotProps.data }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>list-item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>List</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u5BF9\u4E8E\u4F5C\u7528\u57DF\u63D2\u69FD\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u6D4B\u8BD5\u5957\u4EF6\u63D0\u4F9B\u4E86 <code>scopedSlots</code> \u6302\u8F7D\u9009\u9879\u3002</p><p>\u5E76\u4E14\u5BF9\u4E8E\u4F5C\u7528\u57DF\u63D2\u69FD\u4E2D\u6570\u636E slotProps \u7684\u63D0\u4F9B\u53EF\u4EE5\u6709\u4EE5\u4E0B\u51E0\u79CD\u65B9\u5F0F\uFF1A</p><div class="language-js"><pre><code><span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">scopedSlots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token string">&#39;&lt;p&gt;{{props.data}}&lt;/p&gt;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u9ED8\u8BA4\u901A\u8FC7 props \u5BF9\u8C61\uFF0C\u7B49\u540C\u4E8E slotProps \u5BF9\u8C61</span>
    <span class="token function-variable function">header</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$createElement</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">header</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>data<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u5982\u679C\u5B89\u88C5\u4E86 jsx \u5BF9\u5E94\u7684\u8BED\u6CD5\u63D2\u4EF6</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u6D4B\u8BD5\u7528\u4F8B\uFF1A</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render scoped slot&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">propsData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;This is Test header used scoped&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&lt;li class=&quot;list-item&quot;&gt;list-item&lt;/li&gt;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;p class=&quot;list-footer&quot;&gt;2021-5-18 6:05 am&lt;/p&gt;</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">scopedSlots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
                &lt;i class=&quot;iconfont icon list-header__icon&quot;&gt;&amp;#xe7cb;&lt;/i&gt;
                &lt;span class=&quot;list-header__title&quot;&gt;{{ props.data }}&lt;/span&gt;
              &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;list-header__icon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;list-header__title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;used scoped&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="\u7EC4\u4EF6\u5B58\u6839" tabindex="-1">\u7EC4\u4EF6\u5B58\u6839 <a class="header-anchor" href="#\u7EC4\u4EF6\u5B58\u6839" aria-hidden="true">#</a></h3><p>\u5728\u5B9E\u9645\u4E1A\u52A1\u4E2D\uFF0C\u50CF <code>List</code> \u8FD9\u7C7B\u7EC4\u4EF6\u63D2\u69FD\u5F80\u5F80\u4F7F\u7528\u7684\u662F\u7EC4\u4EF6\u4F20\u5165</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>List</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListItem</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>List</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u4F46\u5F80\u5F80\u7EC4\u4EF6<code>ListItem</code> \u91CC\u9762\u53C8\u6709\u4E00\u4E9B\u5916\u90E8\u4F9D\u8D56\uFF0C\u4F8B\u5982\u4F1A\u53D1\u8D77\u63A5\u53E3\u8BF7\u6C42\u7B49\u3002\u4F46\u5728\u8FD9\u91CC\u6211\u4EEC\u6D4B\u8BD5\u63D2\u69FD\u53EA\u60F3\u7B80\u5355\u65AD\u8A00\u4E0B<code>ListItem</code>\u7EC4\u4EF6\u662F\u4E0D\u662F\u5728 <code>List</code> \u7EC4\u4EF6\u7684\u9ED8\u8BA4\u63D2\u69FD\u4E2D\u6E32\u67D3\u5373\u53EF\uFF0C\u4E0D\u60F3\u6A21\u62DF <code>ListItem</code> \u5185\u90E8\u590D\u6742\u4F9D\u8D56\u7684\u6D4B\u8BD5\uFF0C\u8FD9\u662F\u5B83\u8FDB\u884C\u7EC4\u4EF6\u81EA\u8EAB\u6D4B\u8BD5\u7684\u5185\u5BB9\uFF0C\u4F46\u4E0D\u662F\u5728\u8FD9\u91CC\u3002</p><p>\u6B64\u65F6\u6211\u4EEC\u53EF\u4EE5\u6CBF\u7528<strong>\u6A21\u62DF\u4EE3\u7801</strong>\u6765\u5C4F\u853D\u6389 <code>ListItem</code> \u5185\u90E8\u4F9D\u8D56\u7684\u5B9E\u73B0\u3002<code>@vue/test-utils</code> \u6D4B\u8BD5\u5957\u4EF6\u63D0\u4F9B\u4E86\u4E00\u4E2A <code>stubs</code> \u7684\u6302\u8F7D\u9009\u9879\u3002</p><blockquote><p>stub \u7FFB\u8BD1\u4E3A\u5B58\u6839\uFF0C\u6D4B\u8BD5\u7528\u8BED\u4E2D\u5E38\u7406\u89E3\u4E3A \u6869\uFF0C\u5C31\u597D\u6BD4\u5728\u67D0\u4E2A\u4F4D\u7F6E\u63D2\u6869\u8FDB\u884C\u6807\u8BC6\u8FD9\u91CC\u5B58\u5728\u67D0\u4E2A\u4E1C\u897F\u5373\u53EF\u3002</p></blockquote><div class="language-js"><pre><code><span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">&#39;src/components/List.vue&#39;</span>
<span class="token keyword">import</span> ListItem <span class="token keyword">from</span> <span class="token string">&#39;src/components/ListItem.vue&#39;</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;stubbing ListItem&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">default</span><span class="token operator">:</span> ListItem<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token literal-property property">stubs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">ListItem</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &lt;ul&gt;&lt;listitem-stub&gt;&lt;/ul&gt;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span>ListItem<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5411 <code>stubs</code> \u4F20\u5165 <code>[component]: true</code> \u540E\uFF0C\u4F1A\u7528\u4E00\u4E2A <code>stub</code> \u66FF\u6362\u4E86\u539F\u59CB\u7684\u7EC4\u4EF6\u3002\u5916\u90E8\u7684\u63A5\u53E3\u4E5F\u7167\u65E7\uFF08\u6211\u4EEC\u4F9D\u7136\u53EF\u4EE5\u7528 find \u9009\u53D6\uFF0C\u56E0\u4E3A find \u5185\u90E8\u4F7F\u7528\u7684 name \u5C5E\u6027\u4ECD\u65E7\u76F8\u540C\uFF09\u3002\u88AB <code>stubbing</code> \u7684\u7EC4\u4EF6\u5185\u90E8\u8BF8\u5982 axios \u8BF7\u6C42\u7B49\u590D\u6742\u4F9D\u8D56\u7684\u5185\u90E8\u65B9\u6CD5\uFF0C\u5219\u4E0D\u4F1A\u88AB\u6267\u884C\uFF0C\u5B83\u4EEC\u88AB <code>stubbed out</code> \u4E86\u3002</p><p><strong>shallowMount \u4F1A\u81EA\u52A8\u5316 stubbing \u5185\u90E8\u5B50\u7EC4\u4EF6</strong></p><p>\u4E0D\u540C\u4E8E\u4F7F\u7528 mount \u6302\u8F7D\uFF0C\u5E76\u624B\u52A8 stub \u6389 <code>ListItem</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7B80\u5355\u7684\u4F7F\u7528 <code>shallowMount</code>\uFF0C\u5B83\u53EA\u4F1A\u6E32\u67D3\u9876\u5C42\u7EC4\u4EF6\uFF0C\u9ED8\u8BA4\u4F1A\u81EA\u52A8 stub \u6389\u4EFB\u4F55\u5B50\u7EC4\u4EF6\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">&#39;src/components/List.vue&#39;</span>
<span class="token keyword">import</span> ListItem <span class="token keyword">from</span> <span class="token string">&#39;src/components/ListItem.vue&#39;</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;stubbing ListItem&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">defalut</span><span class="token operator">:</span> ListItem<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &lt;ul&gt;&lt;listitem-stub&gt;&lt;/ul&gt;</span>
<span class="token keyword">const</span> ListItemWrapper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span>ListItem<span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>ListItemWrapper<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6D4B\u8BD5\u901A\u8FC7</span>
<span class="token function">expect</span><span class="token punctuation">(</span>ListItemWrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;some thing&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre></div><p>\u6CE8\u610F\uFF1A<code>stubbed</code> \u540E\u7684\u7EC4\u4EF6\u5C31\u4E0D\u53EF\u4EE5\u518D\u67E5\u627E\u5176\u4E2D\u5143\u7D20\u6216\u89E6\u53D1\u4E8B\u4EF6\uFF0C\u56E0\u4E3A\u662F\u6A21\u62DF\u7684\uFF0C\u5185\u90E8\u5143\u7D20\u548C\u65B9\u6CD5\u90FD\u88AB <code>stubbed out</code>\u4E86\uFF0C\u6240\u4EE5\u4F1A\u62A5\u9519\u3002</p><p>\u4E0A\u8FF0\u8FD9\u79CD\u76F4\u63A5\u4F20\u5165\u7EC4\u4EF6<code>defalut: ListItem</code> \u4F5C\u4E3A\u9ED8\u8BA4\u63D2\u69FD\u7684\u4F7F\u7528\u60C5\u5F62\u662F\u6BD4\u8F83\u53D7\u9650\u7684\u3002\u5982\u679C\u5F53 <code>ListItem</code> \u7EC4\u4EF6\u5B9A\u4E49\u4E86 prop \u6765\u6E32\u67D3\u5185\u5BB9\u65F6\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u5C31\u4F1A\u5BFC\u81F4\u6D4B\u8BD5\u62A5\u9519\uFF1A<code>[Vue warn]: Missing required prop: &quot;xxx&quot;</code></p><p>\u6B64\u65F6\uFF0C\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u79CD\u65B9\u5F0F\u89E3\u51B3\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">&#39;src/components/List.vue&#39;</span>
<span class="token keyword">import</span> ListItem <span class="token keyword">from</span> <span class="token string">&#39;src/components/ListItem.vue&#39;</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;stubbing ListItem&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ListItemWrap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>ListItem<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&#39;something&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">defalut</span><span class="token operator">:</span> ListItemWrap<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &lt;ul&gt;&lt;listitem-stub&gt;&lt;/ul&gt;</span>
<span class="token keyword">const</span> ListItemWrapper <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">findComponent</span><span class="token punctuation">(</span>ListItem<span class="token punctuation">)</span>
<span class="token function">expect</span><span class="token punctuation">(</span>ListItemWrapper<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6D4B\u8BD5\u901A\u8FC7</span>
</code></pre></div><p>\u4F7F\u7528 shallowMount \u6D4B\u8BD5\u4F1A\u5F88\u6709\u7528\uFF0C\u5EFA\u8BAE\u9ED8\u8BA4\u4F7F\u7528 shallowMount \u6302\u8F7D\u7EC4\u4EF6\u3002</p><h3 id="\u6A21\u62DF\u7236\u7EC4\u4EF6" tabindex="-1">\u6A21\u62DF\u7236\u7EC4\u4EF6 <a class="header-anchor" href="#\u6A21\u62DF\u7236\u7EC4\u4EF6" aria-hidden="true">#</a></h3><p>\u6709\u65F6\u6211\u4EEC\u4F1A\u5728\u5B50\u7EC4\u4EF6\u4E2D\u8C03\u7528\u7236\u7EC4\u4EF6\u7684\u67D0\u4E9B\u65B9\u6CD5\u6216\u5C5E\u6027\uFF0C\u4F46\u5728\u6D4B\u8BD5\u65F6\u6211\u4EEC\u6CA1\u5FC5\u8981\u628A\u7236\u7EC4\u4EF6\u4E5F\u5305\u88F9\u8FDB\u6765\u7528\u4E8E\u6D4B\u8BD5\u6E32\u67D3\u3002\u8FD9\u65F6\u5C31\u53EF\u4EE5\u5229\u7528\u6D4B\u8BD5\u5957\u4EF6\u63D0\u4F9B\u7684 <code>parentComponent</code> \u9009\u9879\u3002</p><div class="language-js"><pre><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;parent component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">shallowMount</span><span class="token punctuation">(</span>Component<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">parentComponent</span><span class="token operator">:</span> Foo<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>$parent<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="\u51FD\u6570\u5F0F\u7EC4\u4EF6" tabindex="-1">\u51FD\u6570\u5F0F\u7EC4\u4EF6 <a class="header-anchor" href="#\u51FD\u6570\u5F0F\u7EC4\u4EF6" aria-hidden="true">#</a></h3><p>\u82E5\u4E00\u4E2A\u7EC4\u4EF6\u53EA\u7528\u4E8E\u5C06\u7236\u7EC4\u4EF6\u4F20\u5165\u7684\u6570\u636E\u8FDB\u884C\u6E32\u67D3\uFF0C\u5219\u63A8\u8350\u4F7F\u7528\u51FD\u6570\u5F0F\u7EC4\u4EF6\u6765\u63D0\u5347 vue \u7684\u6027\u80FD\u3002</p><p>\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684\u7279\u70B9\uFF1A</p><ul><li>\u6240\u6709\u52A8\u6001\u6570\u636E\u90FD\u4ECE\u7236\u7EC4\u4EF6\u4F20\u9012\u8FDB\u6765\uFF08\u53EA\u6709 props\uFF09</li><li>\u5185\u90E8\u6CA1\u6709\u903B\u8F91\u4EA4\u4E92\uFF08\u65E0 methods \u65B9\u6CD5\u3001\u4E5F\u6CA1\u6709 mounted \u7B49\u4EFB\u4F55\u751F\u547D\u5468\u671F\u5904\u7406\u51FD\u6570\uFF09</li><li>\u6CA1\u6709\u72B6\u6001\u4FEE\u6539(\u65E0 data\uFF0C\u5373\u6CA1\u6709\u54CD\u5E94\u5F0F\u6570\u636E)</li><li>\u4E5F\u6CA1\u6709\u5B9E\u4F8B (\u6CA1\u6709 this \u4E0A\u4E0B\u6587)</li></ul><p>\u4F8B\u5982\u4E0A\u9762\u7684\u5217\u8868\u6E32\u67D3\u7EC4\u4EF6\u5C31\u5F88\u9002\u5408\u4F5C\u4E3A\u51FD\u6570\u5F0F\u7EC4\u4EF6\u4F7F\u7528\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u5F0F\u7684\u5355\u6587\u4EF6\u7EC4\u4EF6\uFF0C\u53EA\u9700\u8981\u5728 <code>template</code> \u6807\u7B7E\u6DFB\u52A0 <code>functional</code> \u5C5E\u6027\u5373\u53EF\u3002</p><blockquote><p>\u5728 2.3.0 \u4E4B\u524D\u7684\u7248\u672C\u4E2D\uFF0C\u5982\u679C\u4E00\u4E2A\u51FD\u6570\u5F0F\u7EC4\u4EF6\u60F3\u8981\u63A5\u6536 prop\uFF0C\u5219\u58F0\u660E props \u9009\u9879\u662F\u5FC5\u987B\u7684\u3002 \u5728 2.3.0 \u6216\u4EE5\u4E0A\u7684\u7248\u672C\u4E2D\uFF0C\u4F60\u53EF\u4EE5\u7701\u7565 props \u9009\u9879\uFF0C\u6240\u6709\u7EC4\u4EF6\u4E0A\u7684 attribute \u90FD\u4F1A\u88AB\u81EA\u52A8\u9690\u5F0F\u89E3\u6790\u4E3A prop\uFF0C\u5E76\u4F5C\u4E3A\u6A21\u677F\u91CC\u9ED8\u8BA4\u53EF\u89E3\u6790\u7684 props \u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p></blockquote><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">functional</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>
      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item, index) in props.items<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.itemClick(item)<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      {{ item }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u5B9E\u9645 Vue \u4E3A\u51FD\u6570\u5F0F\u5355\u6587\u4F2F\u7EC4\u4EF6\u6A21\u677F\u9ED8\u8BA4\u63D0\u4F9B\u4E86\u4E0A\u4E0B\u6587 context \u5BF9\u8C61\u3002\u5982\u679C\u4F7F\u7528\u7EC4\u4EF6\u5BF9\u8C61\u53EF\u4EE5\u66F4\u76F4\u89C2\u770B\u5230 context \u7684\u5B9A\u4E49\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> List <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">functional</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> items<span class="token punctuation">,</span> itemClick <span class="token punctuation">}</span> <span class="token operator">=</span> context<span class="token punctuation">.</span>props
    <span class="token keyword">const</span> ListItems <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>
        <span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> index<span class="token punctuation">,</span>
          <span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">itemClick</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        item
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> ListItems<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u4E2A <code>context</code> \u5BF9\u8C61\uFF0C\u63D0\u4F9B\u4E86\u4EE5\u4E0B\u5C5E\u6027\u53EF\u4F9B\u4F7F\u7528\uFF1A</p><div class="language-"><pre><code>context = {
  props\uFF1A\u63D0\u4F9B\u6240\u6709 prop \u7684\u5BF9\u8C61
  children\uFF1AVNode \u5B50\u8282\u70B9\u7684\u6570\u7EC4
  slots\uFF1A\u4E00\u4E2A\u51FD\u6570\uFF0C\u8FD4\u56DE\u4E86\u5305\u542B\u6240\u6709\u63D2\u69FD\u7684\u5BF9\u8C61
  scopedSlots\uFF1A(2.6.0+) \u4E00\u4E2A\u66B4\u9732\u4F20\u5165\u7684\u4F5C\u7528\u57DF\u63D2\u69FD\u7684\u5BF9\u8C61\u3002\u4E5F\u4EE5\u51FD\u6570\u5F62\u5F0F\u66B4\u9732\u666E\u901A\u63D2\u69FD\u3002
  data\uFF1A\u4F20\u9012\u7ED9\u7EC4\u4EF6\u7684\u6574\u4E2A\u6570\u636E\u5BF9\u8C61\uFF0C\u4F5C\u4E3A createElement \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F20\u5165\u7EC4\u4EF6\uFF0C\u6CE8\u610F\u4E0D\u8981\u8DDF\u7EC4\u4EF6\u58F0\u660E\u4E2D\u7684 data \u5C5E\u6027\u641E\u6DF7\u3002
  parent\uFF1A\u5BF9\u7236\u7EC4\u4EF6\u7684\u5F15\u7528
  listeners\uFF1A(2.3.0+) \u4E00\u4E2A\u5305\u542B\u4E86\u6240\u6709\u7236\u7EC4\u4EF6\u4E3A\u5F53\u524D\u7EC4\u4EF6\u6CE8\u518C\u7684\u4E8B\u4EF6\u76D1\u542C\u5668\u7684\u5BF9\u8C61\u3002\u8FD9\u662F data.on \u7684\u4E00\u4E2A\u522B\u540D\u3002
  injections\uFF1A(2.3.0+) \u5982\u679C\u4F7F\u7528\u4E86 inject \u9009\u9879\uFF0C\u5219\u8BE5\u5BF9\u8C61\u5305\u542B\u4E86\u5E94\u5F53\u88AB\u6CE8\u5165\u7684 property\u3002
}
</code></pre></div><p>\u6240\u4EE5\u5BF9\u4E8E\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684\u6D4B\u8BD5\uFF0C<code>@vue/test-utils</code> \u6D4B\u8BD5\u5957\u4EF6\u5BF9\u51FD\u6570\u5F0F\u7EC4\u4EF6\u52A0\u8F7D\u4E5F\u63D0\u4F9B\u4E86 <code>context</code> \u9009\u9879\u3002</p><div class="language-js"><pre><code>describe<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token string">&#39;functional component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> List <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">functional</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> items<span class="token punctuation">,</span> itemClick <span class="token punctuation">}</span> <span class="token operator">=</span> context<span class="token punctuation">.</span>props
      <span class="token keyword">const</span> ListItems <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>
          <span class="token string">&#39;li&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">key</span><span class="token operator">:</span> index<span class="token punctuation">,</span>
            <span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">itemClick</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          item
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> ListItems<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render funcaional&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">itemClick</span><span class="token operator">:</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveLength</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;render funcaional event&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mockFn <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">itemClick</span><span class="token operator">:</span> mockFn<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> wrapper
      <span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>mockFn<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledWith</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,181),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var f=n(p,[["render",e]]);export{m as __pageData,f as default};
