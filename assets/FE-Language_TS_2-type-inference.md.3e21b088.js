import{_ as n,c as s,o as a,a as t}from"./app.fa011131.js";const y='{"title":"\u7C7B\u578B\u63A8\u5BFC type inference","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7C7B\u578B\u62D3\u5BBD type widening","slug":"\u7C7B\u578B\u62D3\u5BBD-type-widening"},{"level":3,"title":"\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD","slug":"\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD"},{"level":3,"title":"\u5982\u4F55\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD","slug":"\u5982\u4F55\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD"},{"level":2,"title":"\u7C7B\u578B\u7EC6\u5316 type narrowing","slug":"\u7C7B\u578B\u7EC6\u5316-type-narrowing"},{"level":3,"title":"\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u7EC6\u5316","slug":"\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u7EC6\u5316"},{"level":3,"title":"\u7C7B\u578B\u7EC6\u5316\u7684\u5C40\u9650\u6027\uFF0C\u4F7F\u7528 is\u8FD0\u7B97\u7B26\u89E3\u51B3","slug":"\u7C7B\u578B\u7EC6\u5316\u7684\u5C40\u9650\u6027\uFF0C\u4F7F\u7528-is\u8FD0\u7B97\u7B26\u89E3\u51B3"},{"level":3,"title":"\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B discriminated union type","slug":"\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B-discriminated-union-type"},{"level":3,"title":"\u7C7B\u578B\u70D9\u5370\uFF0C\u6A21\u62DF\u540D\u4E49\u7C7B\u578B","slug":"\u7C7B\u578B\u70D9\u5370\uFF0C\u6A21\u62DF\u540D\u4E49\u7C7B\u578B"},{"level":3,"title":"\u7C7B\u578B\u65AD\u8A00 as","slug":"\u7C7B\u578B\u65AD\u8A00-as"},{"level":3,"title":"\u975E\u7A7A\u65AD\u8A00 \u540E\u7F00 value!","slug":"\u975E\u7A7A\u65AD\u8A00-\u540E\u7F00-value"},{"level":3,"title":"\u660E\u786E\u8D4B\u503C\u65AD\u8A00 \u524D\u7F00 value!: T","slug":"\u660E\u786E\u8D4B\u503C\u65AD\u8A00-\u524D\u7F00-value-t"},{"level":3,"title":"\u65AD\u8A00\u603B\u7ED3","slug":"\u65AD\u8A00\u603B\u7ED3"}],"relativePath":"FE-Language/TS/2-type-inference.md"}',p={},o=t(`<h1 id="\u7C7B\u578B\u63A8\u5BFC-type-inference" tabindex="-1">\u7C7B\u578B\u63A8\u5BFC type inference <a class="header-anchor" href="#\u7C7B\u578B\u63A8\u5BFC-type-inference" aria-hidden="true">#</a></h1><ul><li>\u7C7B\u578B\u62D3\u5BBD <ul><li>\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD</li><li>\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD\u7684\u65B9\u6CD5\uFF1A\u663E\u5F0F\u6CE8\u89E3\u548C <code>as const</code> \u65AD\u8A00</li></ul></li><li>\u7C7B\u578B\u7EC6\u5316 <ul><li>\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u7EC6\u5316\uFF1A\u6D41\u7A0B\u8BED\u53E5\u914D\u5408\u903B\u8F91\u8FD0\u7B97\u7B26\u4EE5\u53CA\u7C7B\u578B\u67E5\u8BE2\u8BED\u53E5\u65F6</li><li>\u7C7B\u578B\u7EC6\u5316\u7684\u5C40\u9650\u6027\uFF0C\u53EA\u5728\u5F53\u524D\u4F5C\u7528\u57DF\u5185\u6709\u6548\uFF0C\u9488\u5BF9<code>(arg: T) =&gt; boolean</code> \u7C7B\u578B\u7684\u51FD\u6570\u8981\u8DE8\u4F5C\u7528\u57DF\u751F\u6548\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>is</code> \u8FD0\u7B97\u7B26\u8FDB\u884C\u7C7B\u578B\u65AD\u8A00\uFF08\u7C7B\u578B\u8C13\u8BCD\uFF09<code>arg is T</code></li><li>\u65E0\u6CD5\u8FDB\u884C\u7C7B\u578B\u7EC6\u5316\u65F6\uFF0C\u9700\u8981\u624B\u52A8\u660E\u786E\u7C7B\u578B <ul><li>\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B discriminated union type</li><li>\u7C7B\u578B\u70D9\u5370\uFF0C\u6A21\u62DF\u540D\u4E49\u7C7B\u578B</li><li>\u7C7B\u578B\u65AD\u8A00: <code>as is ! !:</code></li></ul></li></ul></li></ul><p>TypeScript\u662F\u4E00\u79CD\u5E26\u6709<strong>\u7C7B\u578B\u8BED\u6CD5</strong>\u7684JavaScript\u3002TypeScript \u4E2D\u7684\u7C7B\u578B\u7CFB\u7EDF\u8981\u6C42\uFF1A\u663E\u5F0F<strong>\u58F0\u660E</strong>\u90E8\u5206\u7C7B\u578B\uFF0C\u7136\u540E\u5728\u7F16\u8BD1\u65F6\u4F1A<strong>\u63A8\u5BFC</strong>\u4F59\u4E0B\u7C7B\u578B\uFF0C\u5E76\u5728\u7F16\u8BD1\u65F6<strong>\u68C0\u67E5</strong>\u7C7B\u578B\u3002</p><p>\u524D\u9762\u8BB2\u89E3\u4E86 <a href="./1-type-declaration-1.1-basic-type.html">TS \u5982\u4F55\u58F0\u660E\u5404\u79CD\u7C7B\u578B</a>\uFF0C\u8FD9\u4E00\u8282\u8BB2\u89E3 TS \u5982\u4F55\u63A8\u5BFC\u7C7B\u578B\uFF0C\u5305\u542B\u4E24\u90E8\u5206\u5185\u5BB9\uFF1A\u7C7B\u578B\u62D3\u5BBD\u548C\u7C7B\u578B\u7EC6\u5316\u3002</p><h2 id="\u7C7B\u578B\u62D3\u5BBD-type-widening" tabindex="-1">\u7C7B\u578B\u62D3\u5BBD type widening <a class="header-anchor" href="#\u7C7B\u578B\u62D3\u5BBD-type-widening" aria-hidden="true">#</a></h2><p>\u7C7B\u578B\u62D3\u5BBD(type widening) \u662F\u7406\u89E3 TS \u7C7B\u578B\u63A8\u5BFC\u673A\u5236\u7684\u5173\u952E\u3002TS \u5728\u63A8\u5BFC\u7C7B\u578B\u65F6\u4F1A\u653E\u5BBD\u8981\u6C42\uFF0C\u6545\u610F\u63A8\u5BFC\u51FA\u4E00\u4E2A\u66F4\u5BBD\u6CDB\u7684\u7C7B\u578B\uFF0C\u800C\u4E0D\u662F\u9650\u5B9A\u4E3A\u67D0\u4E2A\u7279\u5B9A\u7684\u7C7B\u578B\u3002\u8FD9\u6837\u505A\u7684\u597D\u5904\u662F\u5927\u5927\u51CF\u5C11\u4E86\u7C7B\u578B\u68C0\u67E5\u5668\u62A5\u9519\u7684\u65F6\u95F4\u3002</p><h3 id="\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD" tabindex="-1">\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD <a class="header-anchor" href="#\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD" aria-hidden="true">#</a></h3><ol><li>\u4F7F\u7528 <code>let / var</code> \u58F0\u660E\u53D8\u91CF\u65F6\uFF0C\u56E0\u4E3A\u540E\u7EED\u53EF\u80FD\u4F1A\u88AB\u91CD\u65B0\u8D4B\u503C\uFF0C\u6240\u4EE5\u53D8\u91CF\u7C7B\u578B\u5C06\u62D3\u5BBD\uFF0C\u4ECE\u5B57\u9762\u91CF\u7C7B\u578B\u62D3\u5BBD\u5230\u8BE5\u5B57\u9762\u91CF\u7684\u57FA\u7C7B\u578B\uFF0C\u5176\u4E2D\u5B57\u9762\u91CF\u7C7B\u578B <code>null / udefined</code> \u62D3\u5BBD\u4E3A <code>any</code>\u3002</li></ol><div class="language-ts"><pre><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">&#39;x&#39;</span>         <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B &#39;x&#39; \u62D3\u5BBD\u5230 string \u7C7B\u578B</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">3</span>           <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B 3 \u62D3\u5BBD\u5230 number \u7C7B\u578B</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B true \u62D3\u5BBD\u5230 boolean \u7C7B\u578B</span>
<span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B null \u62D3\u5BBD\u4E3A any \u7C7B\u578B</span>
<span class="token keyword">let</span> e <span class="token operator">=</span> <span class="token keyword">undefined</span>   <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B undefined \u62D3\u5BBD\u4E3A any \u7C7B\u578B</span>
<span class="token keyword">enum</span> <span class="token constant">F</span> <span class="token punctuation">{</span> <span class="token constant">X</span><span class="token punctuation">,</span> <span class="token constant">Y</span><span class="token punctuation">,</span> <span class="token constant">Z</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token constant">F</span><span class="token punctuation">.</span><span class="token constant">X</span>         <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B F.X \u62D3\u5BBD\u5230 F \u7C7B\u578B</span>
</code></pre></div><p>\u5BF9\u5E94\u7684\uFF0C\u4F7F\u7528 <code>const</code> \u58F0\u660E\u4E0D\u53EF\u4FEE\u6539\u7684\u53D8\u91CF\u65F6\uFF0CTS \u4E0D\u4F1A\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD\uFF0C\u56FA\u5B9A\u4E3A\u5B57\u9762\u91CF\u7C7B\u578B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token string">&#39;x&#39;</span>       <span class="token comment">// &#39;x&#39;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">3</span>         <span class="token comment">// 3</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token comment">// true</span>
<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">null</span>      <span class="token comment">// null</span>
<span class="token keyword">const</span> e <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// undefeined</span>
<span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token constant">F</span><span class="token punctuation">.</span><span class="token constant">X</span>       <span class="token comment">// F.X</span>
</code></pre></div><p>\u4F46\u662F<code>const</code>\u58F0\u660E\u7684\u53D8\u91CF\u6709\u4E24\u79CD\u7279\u6B8A\u60C5\u51B5\u4E0B\uFF0C\u4ECD\u4F1A\u8FDB\u884C\u62D3\u5BBD\uFF1A</p><ul><li>\u5C06const \u58F0\u660E\u7684\u53D8\u91CF\u91CD\u65B0\u8D4B\u503C\u7ED9 let / var \u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u9075\u5FAA let / var \u89C4\u5219\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD</li><li>\u4F7F\u7528 const \u58F0\u660E\u5BF9\u8C61\u65F6\uFF0C\u5BF9\u8C61\u5C5E\u6027\u7684\u7C7B\u578B\u4ECD\u4F1A\u8FDB\u884C\u62D3\u5BBD\uFF0C\u56E0\u4E3A JS \u5BF9\u8C61\u5C5E\u6027\u662F\u53EF\u53D8\u7684</li></ul><div class="language-ts"><pre><code><span class="token comment">// \u7B2C\u4E00\u79CD\uFF1A\u5C06const \u58F0\u660E\u7684\u53D8\u91CF\u91CD\u65B0\u8D4B\u503C\u7ED9 let / var \u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u9075\u5FAA let / var \u89C4\u5219\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token string">&#39;x&#39;</span>       <span class="token comment">// &#39;x&#39;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a           <span class="token comment">// string</span>

<span class="token comment">// \u7B2C\u4E8C\u79CD\uFF1A\u4F7F\u7528 const \u58F0\u660E\u5BF9\u8C61\u65F6\uFF0C\u5BF9\u8C61\u5C5E\u6027\u7684\u7C7B\u578B\u4ECD\u4F1A\u8FDB\u884C\u62D3\u5BBD\uFF0C\u56E0\u4E3A JS \u5BF9\u8C61\u5C5E\u6027\u662F\u53EF\u53D8\u7684</span>
<span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
o<span class="token punctuation">.</span>a                 <span class="token comment">// o.a \u7684\u7C7B\u578B\u5E76\u6CA1\u6709\u56FA\u5B9A\u4E3A\u5B57\u9762\u91CF\u7C7B\u578B 1\uFF0C\u800C\u662F\u62D3\u5BBD\u4E3A number</span>
o<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span>             <span class="token comment">// \u56E0\u4E3A\u6211\u4EEC\u53EF\u4EE5\u7ED9 o.a \u91CD\u65B0\u8D4B\u503C number \u7C7B\u578B\u7684\u503C\uFF0C\u4F46\u4E0D\u80FD\u5BF9 o \u91CD\u65B0\u8D4B\u503C</span>
o<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>           <span class="token comment">// Error TS2322: Type &#39;string&#39; is not assignable to type &#39;number&#39;.</span>
o <span class="token operator">=</span> <span class="token punctuation">{</span>a<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">}</span>        <span class="token comment">// Error TS2588: Cannot assign to &#39;o&#39; because it is a constant.</span>
</code></pre></div><p>\u53E6\u5916\u9488\u5BF9 <code>null / undefined</code>\u7C7B\u578B\u4E5F\u6709\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5\uFF1A 2. \u5F53\u4F7F\u7528 <code>let / var</code> \u521D\u59CB\u5316\u4E3A <code>null / undefined</code> \u7684\u53D8\u91CF\u79BB\u5F00\u5B83\u58F0\u660E\u65F6\u6240\u5728\u4F5C\u7528\u57DF\u540E\uFF0CTS \u5C06\u4E3A\u5176\u5206\u914D\u6700\u540E\u4E00\u4E2A\u8D4B\u503C\u7684\u57FA\u7C7B\u578B\u3002</p><div class="language-ts"><pre><code><span class="token comment">// let \u58F0\u660E\u8FDB\u884C\u7C7B\u578B\u62D3\u5BBD</span>
<span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B null \u62D3\u5BBD\u4E3A any \u7C7B\u578B</span>
<span class="token keyword">let</span> e <span class="token operator">=</span> <span class="token keyword">undefined</span>   <span class="token comment">// \u4ECE\u5B57\u9762\u91CF\u7C7B\u578B undefined \u62D3\u5BBD\u4E3A any \u7C7B\u578B</span>

<span class="token keyword">function</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment">// any</span>
  x <span class="token operator">=</span> <span class="token number">3</span>       <span class="token comment">// any</span>
  x <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span>     <span class="token comment">// any</span>
  <span class="token keyword">return</span> x
<span class="token punctuation">}</span>
<span class="token keyword">let</span> ret1 <span class="token operator">=</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// string</span>
<span class="token keyword">const</span> ret2 <span class="token operator">=</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// string</span>

<span class="token keyword">function</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">undefined</span>
	<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">null</span>
	a <span class="token operator">=</span> <span class="token number">3</span>
	b <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span>	b	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE\u503C ret \u662F { a:number, b:string }</span>
</code></pre></div><ol start="3"><li>\u53EF\u9009\u53C2\u6570 <code>?</code> \u7684\u7C7B\u578B\u5C06\u62D3\u5BBD\u4E3A <code>T | undefined</code> \u7684\u8054\u5408\u7C7B\u578B</li></ol><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
	a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
	b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>  <span class="token comment">// string | undefined</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> o<span class="token operator">:</span> Obj <span class="token operator">=</span> <span class="token punctuation">{</span>
	a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
	b<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token comment">// \u53EF\u4EE5\u8D4B\u503C undefined</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> b <span class="token operator">?</span> a <span class="token operator">+</span> b <span class="token operator">:</span> a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">f</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> fn  <span class="token comment">// (a: number, b?: string | undefined) =&gt; string</span>
</code></pre></div><h3 id="\u5982\u4F55\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD" tabindex="-1">\u5982\u4F55\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD <a class="header-anchor" href="#\u5982\u4F55\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD" aria-hidden="true">#</a></h3><ol><li>\u663E\u5F0F\u6CE8\u89E3\u7C7B\u578B, \u963B\u6B62 <code>let / var</code> \u58F0\u660E\u7684\u53D8\u91CF\u7684\u7C7B\u578B\u62D3\u5BBD</li></ol><div class="language-ts"><pre><code><span class="token keyword">let</span> a<span class="token operator">:</span> <span class="token string">&#39;x&#39;</span> <span class="token operator">=</span> <span class="token string">&#39;x&#39;</span>
<span class="token keyword">let</span> b<span class="token operator">:</span> <span class="token number">3</span> <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">let</span> c<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">let</span> d<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">let</span> e<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token keyword">enum</span> <span class="token constant">F</span> <span class="token punctuation">{</span> <span class="token constant">X</span><span class="token punctuation">,</span> <span class="token constant">Y</span><span class="token punctuation">,</span> <span class="token constant">Z</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> f<span class="token operator">:</span> <span class="token constant">F</span><span class="token punctuation">.</span><span class="token constant">X</span> <span class="token operator">=</span> <span class="token constant">F</span><span class="token punctuation">.</span><span class="token constant">X</span>
</code></pre></div><ol start="2"><li>\u4F7F\u7528 <code>as const</code> \u65AD\u8A00\u3002</li></ol><p>\u5728 TS \u7684\u7C7B\u578B\u5C42\u9762\u7684\u8BED\u6CD5\u4E2D\u4E5F\u6709\u4E00\u4E2A\u7279\u6B8A\u7684 <code>const</code> \u7C7B\u578B\uFF0C\u5B83\u7528\u4F5C\u7C7B\u578B\u65AD\u8A00\u4E0D\u4EC5\u80FD\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD\uFF0C\u8FD8\u4F1A\u9012\u5F52\u5730\u628A\u5C5E\u6027\u8F6C\u4E3A <code>readonly</code>\u3002</p><blockquote><p>\u533A\u5206 TS \u4E2D\u7684 const \u5173\u952E\u5B57\u548C JS \u4E2D\u7684 const \u5173\u952E\u5B57\uFF1ATS \u4E2D const \u5173\u952E\u5B57\u914D\u5408 as \u8FD0\u7B97\u7B26\u7528\u4F5C\u7C7B\u578B\u65AD\u8A00\uFF0CJS \u4E2D const \u4F5C\u7528\u58F0\u660E\u5E38\u91CF</p></blockquote><div class="language-ts"><pre><code><span class="token comment">// \u6CA1\u6709\u6CE8\u89E3\u7C7B\u578B\uFF0CTS \u7C7B\u578B\u63A8\u5BFC\u4F1A\u5C06\u5BF9\u8C61\u5C5E\u6027\u7C7B\u578B\u8FDB\u884C\u62D3\u5BBD</span>
<span class="token keyword">const</span> o1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">1</span>      <span class="token comment">// number</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u663E\u5F0F\u6CE8\u89E3\u7C7B\u578B\uFF0C\u4E0D\u4F1A\u62D3\u5BBD\uFF0C\u4F46\u53EF\u4EE5\u8D4B\u503C\uFF0C\u867D\u7136\u5B57\u9762\u91CF\u7C7B\u578B\u7684\u503C\u53EA\u662F\u5B83\u672C\u8EAB</span>
<span class="token keyword">const</span> o2<span class="token operator">:</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
o2<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span>
o2<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">// Error TS2322: Type &#39;2&#39; is not assignable to type &#39;1&#39;.</span>

<span class="token comment">// \u5982\u679C\u8981\u963B\u6B62\u5BF9\u8C61\u5C5E\u6027\u88AB\u4FEE\u6539\uFF0C\u53EF\u4EE5\u589E\u52A0 readonly \u4FEE\u9970\u7B26</span>
<span class="token keyword">const</span> o3<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">readonly</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
o3<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">// Error TS2540: Cannot assign to &#39;a&#39; because it is a read-only property.</span>

<span class="token comment">// \u53EF\u4EE5\u4F7F\u7528 as const \u4E00\u6B65\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD\u548C\u8D4B\u503C</span>
<span class="token keyword">let</span> o4 <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span>  <span class="token comment">// {readonly x: 3 }</span>
o4<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// Error TS2540: Cannot assign to &#39;a&#39; because it is a read-only property.</span>
</code></pre></div><h2 id="\u7C7B\u578B\u7EC6\u5316-type-narrowing" tabindex="-1">\u7C7B\u578B\u7EC6\u5316 type narrowing <a class="header-anchor" href="#\u7C7B\u578B\u7EC6\u5316-type-narrowing" aria-hidden="true">#</a></h2><p>\u7C7B\u578B\u7EC6\u5316\uFF0C\u4E5F\u6709\u88AB\u79F0\u4E3A\u7C7B\u578B\u7F29\u7A84\u3001\u7C7B\u578B\u5B88\u536B\u7B49\u3002\u5B83\u4E5F\u662F TS \u7C7B\u578B\u63A8\u5BFC\u7684\u673A\u5236\u4E4B\u4E00\u3002</p><p>TS \u91C7\u7528\u7684\u662F<strong>\u57FA\u4E8E\u6D41\u7684\u7C7B\u578B\u63A8\u5BFC\uFF0C\u8FD9\u662F\u4E00\u79CD\u7B26\u53F7\u6267\u884C</strong>\uFF0C\u5728\u7C7B\u578B\u68C0\u67E5\u5668\u4E2D\u5185\u5D4C\u7B26\u53F7\u6267\u884C\u5F15\u64CE\uFF0C\u5B83\u4F1A\u5206\u6790\u4EE3\u7801\u4E2D\u7684\u6D41\u7A0B\u8BED\u53E5\uFF08\u5982 if ? || switch\u7B49\uFF09\u548C\u7C7B\u578B\u67E5\u8BE2\u8BED\u53E5\uFF08\u5982 typeof instanceof in\u7B49\uFF09\uFF0C\u7136\u540E\u5C06\u7EC6\u5316\u7684\u7C7B\u578B\u53CD\u9988\u7ED9\u7C7B\u578B\u68C0\u67E5\u5668\u3002</p><blockquote><p>\u7B26\u53F7\u6267\u884C\u662F\u4E00\u79CD\u5206\u6790\u7A0B\u5E8F\u7684\u65B9\u5F0F\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u4F7F\u7528\u4E00\u4E2A\u7279\u5B9A\u7684\u7A0B\u5E8F\uFF08\u79F0\u4E3A\u7B26\u53F7\u6C42\u503C\u7A0B\u5E8F\uFF0C\u6216\u53EB\u7B26\u53F7\u6267\u884C\u5F15\u64CE\uFF09\u6765\u8FD0\u884C\u7A0B\u5E8F\u3002\u4F46\u5B83\u7684\u8FD0\u884C\u4E0D\u662F\u4E3A\u53D8\u91CF\u8D4B\u4E88\u5177\u4F53\u7684\u503C\uFF0C\u800C\u662F\u4F7F\u7528\u7B26\u53F7\u5EFA\u6A21\u53D8\u91CF\uFF0C\u5728\u7A0B\u5E8F\u771F\u6B63\u8FD0\u884C\u7684\u8FC7\u7A0B\u4E2D\u7EA6\u675F\u53D8\u91CF\u7684\u503C\u3002\u7B26\u53F7\u6267\u884C\u5F15\u64CE\u5728\u6267\u884C\u65F6\u53EF\u4EE5\u8868\u8FBE\u51FA\u201C\u8FD9\u4E2A\u53D8\u91CF\u4ECE\u672A\u4F7F\u7528\uFF0C\u6216\u8FD9\u4E2A\u51FD\u6570\u6C38\u8FDC\u4E0D\u8FD4\u56DE\u7B49\u7C7B\u4F3C\u4FE1\u606F\uFF0C\u53CD\u9988\u7ED9\u7C7B\u578B\u68C0\u67E5\u5668\u62A5\u9519\u63D0\u793A\u3002 \u57FA\u4E8E\u6D41\u7684\u7C7B\u578B\u63A8\u5BFC\u662F\u7EC6\u5316\u4EE3\u7801\u5757\u4E2D\u7C7B\u578B\u7684\u4E00\u79CD\u65B9\u5F0F\uFF0C\u5728\u7C7B\u578B\u68C0\u67E5\u5668\u4E2D\u5185\u5D4C\u7B26\u53F7\u6267\u884C\u5F15\u64CE\uFF0C\u4E3A\u7C7B\u578B\u68C0\u67E5\u5668\u63D0\u4F9B\u53CD\u9988\uFF0C\u4EE5\u63A5\u8FD1\u4EBA\u7C7B\u7A0B\u5E8F\u5458\u7684\u65B9\u5F0F\u5206\u6790\u7A0B\u5E8F\u3002</p></blockquote><h3 id="\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u7EC6\u5316" tabindex="-1">\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u7EC6\u5316 <a class="header-anchor" href="#\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u8FDB\u884C\u7C7B\u578B\u7EC6\u5316" aria-hidden="true">#</a></h3><p>\u4F7F\u7528\u6D41\u7A0B\u8BED\u53E5\u6216\u7C7B\u578B\u67E5\u8BE2\u8BED\u53E5\u6765\u7EC6\u5316\u7C7B\u578B\u3002[P154]</p><ul><li>\u6D41\u7A0B\u8BED\u53E5\u914D\u5408\u903B\u8F91\u8FD0\u7B97\u7B26\u65F6\uFF1A <code>if switch ?</code> \u914D\u5408 <code> == != === !==</code>\u3002</li><li>\u7C7B\u578B\u67E5\u8BE2\u8BED\u53E5\uFF1A <code>typeof, instanceof, in</code>\u7B49\u3002</li></ul><div class="language-ts"><pre><code><span class="token comment">/**
 * \u793A\u4F8B\u53C2\u6570\u6765\u81EA\uFF1A[TypeScript \u591C\u70B9\u5FC3\uFF1A\u81EA\u5B9A\u4E49\u7C7B\u578B\u5B88\u536B](https://zhuanlan.zhihu.com/p/108856165)
 */</span>

<span class="token comment">// \u7C7B\u578B\u5224\u65AD typeof</span>
<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span>input<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> input <span class="token operator">==</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A string</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A number</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B9E\u4F8B\u5224\u65AD instanceof</span>
<span class="token class-name"><span class="token keyword">class</span></span> Foo <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span>input<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A Foo</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A Bar</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C5E\u6027\u5224\u65AD in</span>
<span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span>input<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span> <span class="token keyword">in</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A Foo</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A Bar</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// if \u914D\u5408\u903B\u8F91\u8FD0\u7B97\u7B26 == != === !==</span>
<span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;bar&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span>input<span class="token operator">:</span> Foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token operator">!=</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A &#39;foo&#39; | &#39;bar&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC input \u7684\u7C7B\u578B\u300C\u6536\u7D27\u300D\u4E3A &#39;unknown&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// switch \u903B\u8F91\u5224\u65AD</span>
<span class="token keyword">type</span> <span class="token class-name">UserTextEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
	type<span class="token operator">:</span> <span class="token string">&#39;TextEvent&#39;</span><span class="token punctuation">,</span>
	value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
	target<span class="token operator">:</span> HTMLInputElement
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserMouseEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
	type<span class="token operator">:</span> <span class="token string">&#39;MouseEvent&#39;</span><span class="token punctuation">,</span>
	<span class="token comment">// value: [number, number],</span>
	positionX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
	positionY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
	target<span class="token operator">:</span> HTMLElement
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserEvent</span> <span class="token operator">=</span> UserTextEvent <span class="token operator">|</span> UserMouseEvent
<span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> UserEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">switch</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token string">&#39;TextEvent&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			event<span class="token punctuation">.</span>value
			event<span class="token punctuation">.</span>target
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			event<span class="token punctuation">.</span>positionX
			event<span class="token punctuation">.</span>positionY
			event<span class="token punctuation">.</span>target
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E00\u4E2A\u7EFC\u5408\u89E3\u6790\u793A\u4F8B\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">/**
 * \u4F7F\u7528 parseWidth \u51FD\u6570\uFF0C\u628A CSS \u5BBD\u5EA6\u7684\u503C\u548C\u5355\u4F4D\u89E3\u6790\u51FA\u6765\u3002
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Unit</span> <span class="token operator">=</span> <span class="token string">&#39;cm&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;px&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;%&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Width</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
	unit<span class="token operator">:</span> Unit<span class="token punctuation">,</span>
	value<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> units<span class="token operator">:</span> Unit<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;cm&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%&#39;</span><span class="token punctuation">]</span>

<span class="token comment">// \u4F20\u5165\u7684 width \u503C\u53EF\u80FD\u662F\u4E00\u4E2A\u6570\u5B57\uFF0C\u53EF\u80FD\u662F\u4E00\u4E2A\u5E26\u5355\u4F4D\u7684\u5B57\u7B26\u4E32\uFF0C\u4E5F\u53EF\u80FD\u662F unll \u6216 undefined\u3002</span>
<span class="token keyword">function</span> <span class="token function">parseWidth</span><span class="token punctuation">(</span>width<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> Width <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
	<span class="token comment">/**
	 * \u8FD9\u91CC\u4F5C\u4E0D\u4E25\u683C\u76F8\u7B49\u6BD4\u8F83\uFF0C\u5982\u679C width \u662F null \u6216 undefined\uFF0C\u5C3D\u91CF\u8FD4\u56DE
	 * \u8FD9\u91CC\u9047\u5230 if \u6D41\u7A0B\u8BED\u53E5\uFF0CTS \u57FA\u4E8E\u6D41\u5F0F\u63A8\u5BFC\uFF0C\u5373\u901A\u8FC7\u7B26\u53F7\u6267\u884C\u7A0B\u5E8F\u540E\uFF0CTS \u4F1A\u77E5\u9053\uFF0C\u5982\u679C\u6B64\u5904\u68C0\u67E5\u4E0D\u901A\u8FC7\uFF0Cwidth \u7C7B\u578B\u5C06\u53EF\u80FD\u662F number | string
	 */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/**
	 * \u6240\u4EE5\u7ECF\u8FC7\u8FD9\u4E2A if (width == null) \u6D41\u7A0B\u8BED\u53E5\u7684\u5206\u6790\uFF0C\u6B64\u5904 width \u7684\u7C7B\u578B number | string | null | undefined \u5C06\u4F1A\u88AB\u7EC6\u5316\u6210 number | string
	 * typeof \u8FD0\u7B97\u7B26\u5728\u4E0D\u7BA1\u662F\u5728 JS \u8FD0\u884C\u65F6\u8FD8\u662F\u5728 TS \u7F16\u8BD1\u65F6\u90FD\u4F1A\u67E5\u8BE2\u503C\u7684\u7C7B\u578B\u3002
	 * \u68C0\u67E5\u901A\u8FC7\uFF0C TS \u4F1A\u8FDB\u4E00\u6B65\u5C06 width \u7C7B\u578B\u7EC6\u5316\u4E3A number
	 */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> width <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">{</span>
			unit<span class="token operator">:</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span>
			value<span class="token operator">:</span> width<span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/**
	 * if (typeof width === &#39;number&#39;) \u68C0\u67E5\u4E5F\u672A\u901A\u8FC7\uFF0C\u90A3 width \u7C7B\u578B\u5FC5\u4E3A string\uFF0C\u6BD5\u7ADF\u5F62\u53C2\u4E2D\u6CE8\u89E3\u7684\u7C7B\u578B\u53EA\u5269\u8FD9\u4E00\u79CD\u7C7B\u578B\u4E86
	 */</span>
	<span class="token keyword">let</span> unit <span class="token operator">=</span> units<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>unit <span class="token operator">=&gt;</span> width<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>unit<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">{</span>
			unit<span class="token punctuation">,</span>
			value<span class="token operator">:</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/**
	 * \u5F53\u7528\u6237\u4F20\u5165\u7684 width \u4E3A\u5B57\u7B26\u4E32\uFF0C\u5E76\u4E14\u5305\u542B\u4E00\u4E2A\u4E0D\u53D7\u652F\u6301\u7684\u5355\u4F4D\u65F6\uFF0Cunits.find(unit =&gt; width.endsWith(unit)) \u4E5F\u53EF\u80FD\u8FD4\u56DE undefined\u3002
	 * \u6267\u884C\u8FD9\u91CC\u8FD4\u56DE null
	 */</span>
	<span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u7C7B\u578B\u7EC6\u5316\u7684\u5C40\u9650\u6027\uFF0C\u4F7F\u7528-is\u8FD0\u7B97\u7B26\u89E3\u51B3" tabindex="-1">\u7C7B\u578B\u7EC6\u5316\u7684\u5C40\u9650\u6027\uFF0C\u4F7F\u7528 <code>is</code>\u8FD0\u7B97\u7B26\u89E3\u51B3 <a class="header-anchor" href="#\u7C7B\u578B\u7EC6\u5316\u7684\u5C40\u9650\u6027\uFF0C\u4F7F\u7528-is\u8FD0\u7B97\u7B26\u89E3\u51B3" aria-hidden="true">#</a></h3><p>\u7C7B\u578B\u7EC6\u5316\u53EA\u80FD\u7EC6\u5316\u5F53\u524D\u4F5C\u7528\u57DF\u4E2D\u7684\u53D8\u91CF\u7C7B\u578B\uFF0C\u4E00\u65E6\u79BB\u5F00\u8FD9\u4E2A\u4F5C\u7528\u57DF\uFF0C\u7C7B\u578B\u7EC6\u5316\u7684\u80FD\u529B\u4E0D\u4F1A\u968F\u4E4B\u8F6C\u79FB\u5230\u65B0\u7684\u4F5C\u7528\u57DF\u4E2D\u3002[P173]</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> str <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parseInput</span><span class="token punctuation">(</span>input<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> formatedInput<span class="token operator">:</span> <span class="token builtin">string</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    formatedInput <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Error TS2339: Property &#39;toUpperCase&#39; does not exist on type &#39;string | number&#39;.</span>
  <span class="token punctuation">}</span> ellse <span class="token punctuation">{</span>
    formatedInput <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> formatedInput
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728 <code>isString</code> \u7684\u5B9E\u73B0\u4E2D \u6839\u636E\u7C7B\u578B\u7EC6\u5316\uFF0C\u5982\u679C\u5B83\u8FD4\u56DE <code>true</code>\uFF0C\u90A3\u8F93\u5165\u53C2\u6570\u7684\u7C7B\u578B\u4F1A\u7EC6\u5316\u4E3A <code>string</code>\uFF0C\u53EF\u662F\u8FD9\u4E2A\u7C7B\u578B\u7EC6\u5316\u7684\u7ED3\u679C\u5E76\u6CA1\u6709\u4F5C\u7528\u5230\u51FD\u6570 <code>parseInput</code> \u7684\u4F5C\u7528\u57DF\u4E2D\uFF0C\u5728\u8FD9\u91CC\u8C03\u7528 <code>string</code> \u7684\u7279\u6709\u7684\u65B9\u6CD5 <code>toUpperCase</code> \u4ECD\u4F1A\u63D0\u793A\u62A5\u9519\u3002</p><p>\u90A3\u8981\u5982\u4F55\u624D\u80FD\u8BA9\u7C7B\u578B\u7EC6\u5316\u8DE8\u4F5C\u7528\u6709\u6548\u5462\uFF1F \u6B64\u65F6\u53EF\u4EE5\u4F7F\u7528 TS \u7684 <code>is</code> \u8FD0\u7B97\u7B26\u81EA\u5B9A\u4E49\u7C7B\u578B\u9632\u62A4\u63AA\u65BD\u3002</p><blockquote><p>\u81EA\u5B9A\u4E49\u7C7B\u578B\u9632\u62A4\u4E5F\u6709\u79F0\u4E3A \u81EA\u5B9A\u4E49\u7C7B\u578B\u5B88\u536B <code>is</code>\u8FD0\u7B97\u7B26\u4E5F\u6709\u53EB\u7C7B\u578B\u8C13\u8BCD\uFF0C\u4E5F\u662F\u7C7B\u578B\u65AD\u8A00\u7684\u4E00\u79CD</p></blockquote><p>\u53E5\u6CD5\u662F\uFF1A<code>value is T</code>\uFF0C\u5B83\u7684\u4F7F\u7528\u662F\u6709\u9650\u5236\u7684\uFF0C\u53EA\u9488\u5BF9\u4EE5\u4E0B\u8FD9\u79CD\u60C5\u51B5\uFF1A</p><ul><li>\u5982\u679C\u67D0\u4E2A\u51FD\u6570\u53EA\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\uFF0C\u5728\u51FD\u6570\u5185\u90E8\u7EC6\u5316\u4E86\u8BE5\u53C2\u6570\u7684\u7C7B\u578B\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002\u6B64\u65F6\u53EF\u4EE5\u4F7F\u7528 <code>is</code> \u8FD0\u7B97\u7B26\u81EA\u5B9A\u4E49\u7C7B\u578B\u9632\u62A4\u786E\u4FDD\u8BE5\u53C2\u6570\u7EC6\u5316\u7684\u7ED3\u679C\u80FD\u8DE8\u4F5C\u7528\u57DF\u8F6C\u79FB\uFF0C\u5728\u8BE5\u51FD\u6570\u4F7F\u7528\u7684\u5730\u65B9\u90FD\u8D77\u4F5C\u7528\u3002</li><li>\u8FD9\u4E2A\u51FD\u6570\u9650\u5236\u53EA\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\uFF0C\u4F46\u53C2\u6570\u7C7B\u578B\u4E0D\u9650\u5236\uFF0C\u53EF\u4EE5\u4E3A\u57FA\u7840\u7C7B\u578B\uFF0C\u4E5F\u53EF\u4EE5\u662F\u81EA\u5B9A\u4E49\u7684\u5176\u5B83\u7C7B\u578B\u3002</li></ul><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> str <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">typeof</span> str <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">parseInput</span><span class="token punctuation">(</span>input<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> formatedInput<span class="token operator">:</span> <span class="token builtin">string</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		formatedInput <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// input\uFF1Astring \u7C7B\u578B\u7EC6\u5316\u8DE8\u4F5C\u7528\u751F\u6548\u4E86</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		formatedInput <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// input: number</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> formatedInput
<span class="token punctuation">}</span>

<span class="token comment">// \u53C2\u6570\u4E0D\u5C40\u9650\u5728\u57FA\u7840\u7C7B\u578B\uFF0C\u4E5F\u53EF\u4EE5\u662F\u590D\u6742\u7C7B\u578B</span>
<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token function">bark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;bark.&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token function">meow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;meow.&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isCat</span><span class="token punctuation">(</span>lucky<span class="token operator">:</span> Dog <span class="token operator">|</span> Cat<span class="token punctuation">)</span><span class="token operator">:</span> lucky <span class="token keyword">is</span> Cat <span class="token punctuation">{</span>
  <span class="token comment">// return &#39;meow&#39; in lucky;</span>
  <span class="token keyword">return</span> lucky <span class="token keyword">instanceof</span> <span class="token class-name">Cat</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">animalVoice</span> <span class="token operator">=</span> <span class="token punctuation">(</span>animal<span class="token operator">:</span> Dog <span class="token operator">|</span> Cat<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCat</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    animal<span class="token punctuation">.</span><span class="token function">meow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">animalVoice</span><span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// meow.</span>
</code></pre></div><h3 id="\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B-discriminated-union-type" tabindex="-1">\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B discriminated union type <a class="header-anchor" href="#\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B-discriminated-union-type" aria-hidden="true">#</a></h3><p>\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u8BF4\u660E\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B\uFF0C\u5047\u5982\u9700\u8981\u6784\u5EFA\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u4E8B\u4EF6\u7CFB\u7EDF\uFF1A[P157]</p><ul><li>UserTextEvent \u63CF\u8FF0\u952E\u76D8\u4E8B\u4EF6\uFF0C\u4FDD\u5B58\u7528\u6237\u8F93\u5165\u7684\u6587\u672C</li><li>UserMouseEvent \u63CF\u8FF0\u9F20\u6807\u4E8B\u4EF6\uFF0C\u4FDD\u5B58\u7528\u6237\u9F20\u6807\u7684\u4F4D\u7F6E</li></ul><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">UserTextEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserMouseEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserEvent</span> <span class="token operator">=</span> UserTextEvent <span class="token operator">|</span> UserMouseEvent
<span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> UserEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> event<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		event<span class="token punctuation">.</span>value <span class="token comment">// string</span>
		<span class="token comment">// do something</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	event<span class="token punctuation">.</span>value <span class="token comment">// [number, number]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u4E0A\u9762\uFF0CTS \u901A\u8FC7\u6D41\u7A0B\u8BED\u53E5\u53EF\u4EE5\u77E5\u9053\uFF1A</p><ul><li>\u5728 if \u5757\u4E2D\u7684 event.value \u80AF\u5B9A\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u7C7B\u578B <code>string</code></li><li>\u5728 if \u5757\u540E\u9762\uFF0Cevent.value \u80AF\u5B9A\u662F\u5143\u7EC4\u7C7B\u578B <code>[number, number]</code></li></ul><p>\u4F46\u5982\u679C\u60C5\u51B5\u53D8\u590D\u6742\u4E00\u4E9B\uFF0C\u9700\u8981\u4E3A\u4E8B\u4EF6\u589E\u52A0\u4E00\u4E9B\u4FE1\u606F\uFF0C\u6BD4\u5982\u589E\u52A0\u76EE\u6807\u5143\u7D20 target</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">UserTextEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> target<span class="token operator">:</span> HTMLInputElement <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserMouseEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span> HTMLElement <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserEvent</span> <span class="token operator">=</span> UserTextEvent <span class="token operator">|</span> UserMouseEvent
<span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> UserEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> event<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		event<span class="token punctuation">.</span>value <span class="token comment">// string</span>
		event<span class="token punctuation">.</span>target <span class="token comment">// HTMLInputElement | HTMLElement</span>
		<span class="token comment">// do something</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	event<span class="token punctuation">.</span>value <span class="token comment">// [number, number]</span>
	event<span class="token punctuation">.</span>target <span class="token comment">// HTMLInputElement | HTMLElement</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u7ED3\u679C\u4E2D\uFF0Cevent.value \u7684\u7C7B\u578B\u53EF\u4EE5\u987A\u5E8F\u7EC6\u5316\uFF0C\u4F46\u662F event.target \u7684\u7C7B\u578B\u5374\u4E0D\u80FD\u3002\u4E3A\u4EC0\u4E48\uFF1F</p><p>\u56E0\u4E3A\u4E0A\u8FF0\u8054\u5408\u7C7B\u578B UserEvent \u5E76\u4E0D\u80FD\u901A\u8FC7 event.value \u6765\u786E\u5B9A\u6210\u5458\u7684\u552F\u4E00\u6027\u3002\u6BD4\u5982\u73B0\u5728\u589E\u52A0\u4E00\u4E2A\u952E\u76D8\u4E8B\u4EF6\uFF0Cvalue \u7528\u6765\u8868\u793A\u952E\u76D8\u5B57\u7B26\u3002</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">UserKeyboardEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> target<span class="token operator">:</span> HTMLElement<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserEvent</span> <span class="token operator">=</span> UserTextEvent <span class="token operator">|</span> UserMouseEvent <span class="token operator">|</span> UserKeyboardEvent
</code></pre></div><p>\u90A3\u4E48\u6B64\u65F6 handle \u51FD\u6570\u7684\u5904\u7406\u903B\u8F91\u53EF\u80FD\u5C31\u4F1A\u51FA\u9519\u3002</p><p>\u4E3A\u6B64\uFF0C\u9700\u8981\u4E00\u4E2A\u6807\u8BC6\uFF0C\u80FD\u533A\u5206\u8054\u5408\u7C7B\u578B\u7684\u5404\u79CD\u5206\u652F\u60C5\u51B5\u3002</p><p>\u4E00\u4E2A\u597D\u7684\u6807\u8BB0\u8981\u6EE1\u8DB3\u4E0B\u8FF0\u6761\u4EF6\uFF1A</p><ol><li>\u5728\u8054\u5408\u7C7B\u578B\u5404\u7EC4\u6210\u90E8\u5206\u7684\u76F8\u540C\u4F4D\u7F6E\u4E0A\uFF0C\u5982\u679C\u662F\u5BF9\u8C61\u7C7B\u578B\u7684\u8054\u5408\uFF0C\u4F7F\u7528\u76F8\u540C\u7684\u5B57\u6BB5\uFF1B\u5982\u679C\u662F\u5143\u7EC4\u7C7B\u578B\u7684\u5E76\u96C6\uFF0C\u4F7F\u7528\u76F8\u540C\u7684\u7D22\u5F15\u3002</li><li>\u6700\u597D\u4F7F\u7528\u5B57\u7B26\u4E32\u5B57\u91CF\u7C7B\u578B\uFF0C\u5E76\u4E14\u786E\u4FDD\u5728\u8054\u5408\u7C7B\u578B\u4E2D\u662F\u72EC\u4E00\u65E0\u4E8C\u7684\u3002</li></ol><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">UserTextEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token operator">:</span><span class="token string">&#39;TextEvent&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> target<span class="token operator">:</span> HTMLInputElement <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserMouseEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;MouseEvent&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token operator">:</span> HTMLElement <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserKeyboardEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;Keyboard&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> target<span class="token operator">:</span> HTMLElement<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserEvent</span> <span class="token operator">=</span> UserTextEvent <span class="token operator">|</span> UserMouseEvent <span class="token operator">|</span> UserKeyboardEvent
<span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> UserEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">switch</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token string">&#39;MouseEvent&#39;</span><span class="token operator">:</span>
			event<span class="token punctuation">.</span>value       <span class="token comment">// [number, number]</span>
			event<span class="token punctuation">.</span>target      <span class="token comment">// HTMLElement</span>
		<span class="token keyword">break</span>
		<span class="token keyword">case</span> <span class="token string">&#39;Keyboard&#39;</span><span class="token operator">:</span>
			event<span class="token punctuation">.</span>value       <span class="token comment">// string</span>
			event<span class="token punctuation">.</span>target      <span class="token comment">// HTMLElement</span>
		<span class="token keyword">break</span>
		<span class="token keyword">default</span><span class="token operator">:</span>
			event<span class="token punctuation">.</span>value       <span class="token comment">// string</span>
			event<span class="token punctuation">.</span>target      <span class="token comment">// HTMLInputElement</span>
		<span class="token keyword">break</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E00\u4E2A\u53EF\u8FA8\u8BC6\u7684\u8054\u5408\u7C7B\u578B\u5B9E\u73B0\uFF0C\u5305\u542B\u4E86\uFF1A</p><ol><li>\u4F7F\u7528\u5177\u6709\u552F\u4E00\u6027\u7684\u5B57\u9762\u91CF\u7C7B\u578B\u6807\u8BB0</li><li>\u4F7F\u7528\u8054\u5408\u7C7B\u578B</li><li>\u4F7F\u7528\u7C7B\u578B\u7EC6\u5316\u673A\u5236\uFF08\u7C7B\u578B\u5B88\u536B\uFF09</li><li>\u4F7F\u7528\u7C7B\u578B\u5168\u9762\u6027\u68C0\u67E5\uFF08\u7C7B\u578B\u7A77\u4E3E\uFF09</li></ol><h3 id="\u7C7B\u578B\u70D9\u5370\uFF0C\u6A21\u62DF\u540D\u4E49\u7C7B\u578B" tabindex="-1">\u7C7B\u578B\u70D9\u5370\uFF0C\u6A21\u62DF\u540D\u4E49\u7C7B\u578B <a class="header-anchor" href="#\u7C7B\u578B\u70D9\u5370\uFF0C\u6A21\u62DF\u540D\u4E49\u7C7B\u578B" aria-hidden="true">#</a></h3><p>\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B\u80FD\u5F88\u597D\u533A\u5206\u8054\u5408\u7C7B\u578B\u7684\u5404\u4E2A\u6210\u5458\uFF0C\u4F46\u5982\u679C\u9700\u8981\u533A\u5206\u540C\u79CD\u7C7B\u578B\u7684\u4E0D\u540C\u542B\u4E49\u7684\u60C5\u51B5\u65F6\uFF0CTS \u5982\u4F55\u7EC6\u5206\u7C7B\u578B\u3002[P185]</p><p>\u4E3E\u4F8B\u8BF4\u660E\uFF1A</p><p>\u5E94\u7528\u4E2D\u6709\u51E0\u79CD ID \u7C7B\u578B\uFF0C\u4F46\u5B9E\u9645\u90FD\u662F string \u7C7B\u578B\u3002\u7136\u540E\u5E94\u7528\u4E2D\u58F0\u660E\u4E00\u4E2A\u901A\u8FC7\u7528\u6237ID\u67E5\u8BE2\u7528\u6237\u4FE1\u606F\u7684\u51FD\u6570\u3002\u5982\u679C\u6709\u826F\u597D\u7684\u6587\u6863\uFF0C\u53EF\u80FD\u6709\u52A9\u4E8E\u5F00\u53D1\u4EBA\u5458\u77E5\u9053\u8FD9\u4E2A\u51FD\u6570\u5E94\u8BE5\u4F20\u5165\u7528\u6237ID\uFF0C\u4F46\u56E0\u4E3A\u7528\u6237ID\u6BD5\u7ADF\u4E5F\u53EA\u662F\u5B57\u7B26\u4E32 string \u7C7B\u578B\u7684\u522B\u540D\uFF0C\u4E07\u4E00\u54EA\u4E2A\u5F00\u53D1\u4EBA\u5458\u4F20\u5165\u4E86\u540C\u6837\u662F\u5B57\u7B26\u4E32\u7684\u5176\u5B83\u7C7B\u578B\u7684 ID\uFF0CTS \u7C7B\u578B\u7CFB\u7EDF\u4E5F\u4E0D\u80FD\u63D0\u524D\u62A5\u544A\u8FD9\u4E2A\u9519\u8BEF\u3002</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">UserID</span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name">OrderID</span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name">CompanyID</span> <span class="token operator">=</span> <span class="token builtin">string</span>

<span class="token keyword">function</span> <span class="token function">queryUserInfo</span><span class="token punctuation">(</span>id<span class="token operator">:</span> UserID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u79CD\u573A\u666F\u4E0B\uFF0C\u5C31\u4F53\u73B0\u4E86\u540D\u4E49\u7C7B\u578B(nominal typing)\u7684\u4F5C\u7528\u4E86\u3002\u867D\u7136 TS \u7684\u7C7B\u578B\u7CFB\u7EDF\u662F\u7ED3\u6784\u5316\u7C7B\u578B(structural type)\uFF0C\u539F\u751F\u4E0D\u652F\u6301\u540D\u4E49\u5316\u7C7B\u578B\u3002\u4F46\u662F\u6211\u4EEC\u5728 TS \u73B0\u6709\u7684\u7C7B\u578B\u7CFB\u7EDF\u57FA\u7840\u4E0A\u6A21\u62DF\u540D\u4E49\u7C7B\u578B\uFF0C\u5C31\u662F\u4F7F\u7528\u7C7B\u578B\u70D9\u5370(type branding)\u6280\u672F\u6765\u6A21\u62DF\u5B9E\u73B0\u3002</p><blockquote><p>\u7ED3\u6784\u5316\u7C7B\u578B\u662F\u4E00\u79CD\u7F16\u7A0B\u8BBE\u8BA1\u98CE\u683C\uFF0C\u5B83\u53EA\u5173\u5FC3\u5BF9\u8C61\u6709\u54EA\u4E9B\u5C5E\u6027\uFF0C\u800C\u4E0D\u7BA1\u5C5E\u6027\u4F7F\u7528\u4EC0\u4E48\u540D\u79F0\u3002\u53EA\u8981\u4E24\u4E2A\u5BF9\u8C61\u7684\u7ED3\u6784\u6240\u63CF\u8FF0\u7684\u5C5E\u6027\u503C\u7684\u7C7B\u578B\u662F\u517C\u5BB9\u7684\uFF0C\u5C31\u8BA4\u4E3A\u4E24\u4E2A\u5BF9\u8C61\u7C7B\u578B\u662F\u517C\u5BB9\u7684\u3002 \u7ED3\u6784\u5316\u7C7B\u578B\u4E5F\u88AB\u79F0\u4E3A\u7167\u9E2D\u5B50\u7C7B\u578B\uFF08duck typing\uFF09\uFF0C\u6307\u7684\u662F\u5F53\u770B\u5230\u4E00\u53EA\u9E1F\u8D70\u8D77\u6765\u50CF\u9E2D\u5B50\u3001\u6E38\u6CF3\u8D77\u6765\u50CF\u9E2D\u5B50\u3001\u53EB\u8D77\u6765\u4E5F\u50CF\u9E2D\u5B50\uFF0C\u90A3\u4E48\u8FD9\u53EA\u9E1F\u5C31\u53EF\u4EE5\u88AB\u79F0\u4E3A\u9E2D\u5B50\u3002 \u540D\u4E49\u5316\u7C7B\u578B\u8868\u793A\u7C7B\u578B\u82E5\u8981\u76F8\u7B49\uFF0C\u5C31\u5FC5\u987B\u5177\u6709\u76F8\u540C\u7684\u201C\u540D\u5B57\u201D</p></blockquote><p>\u7C7B\u578B\u70D9\u5370\uFF0C\u987E\u540D\u601D\u610F\uFF0C\u5C31\u662F\u4E3A\u7C7B\u578B\u6253\u4E0A\u4E00\u4E2A\u53EF\u533A\u5206\u7684\u552F\u4E00\u6027\u6807\u8BB0\uFF0C\u7C7B\u4F3C\u4E0A\u8FF0\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B\u7684\u5B57\u9762\u91CF\u6807\u8BB0\u3002</p><p>\u6253\u70D9\u5370\u7684\u65B9\u6CD5\u6709\u5F88\u591A\u79CD\uFF0C\u5177\u4F53\u53EF\u4EE5\u67E5\u770B<a href="https://michalzalecki.com/nominal-typing-in-typescript/" target="_blank" rel="noopener noreferrer">Nominal typing techniques in TypeScript</a>\uFF0C\u8FD9\u91CC\u4E3E\u4F8B\u79CD\u4E24\u79CD\u63A8\u8350\u7684\u65B9\u6CD5\u3002</p><ol><li>\u4F7F\u7528\u4F34\u751F\u5BF9\u8C61\u6A21\u5F0F\uFF08\u5373\u5B58\u5728\u7C7B\u578B\u5C42\u9762\u4EE3\u7801\u548C\u503C\u5C42\u9762\u4EE3\u7801\u540C\u540D\u53D8\u91CF\uFF09\u6A21\u62DF\u540D\u4E49\u7C7B\u578B</li></ol><div class="language-ts"><pre><code><span class="token comment">// \u9996\u5148\uFF0C\u4E3A\u5404\u4E2A\u7C7B\u578B\u5408\u6210\u7C7B\u578B\u70D9\u5370\uFF0C\u6A21\u62DF\u540D\u4E49\u7C7B\u578B</span>
<span class="token comment">// \u8FD9\u91CC\u9009\u62E9\u7684\u70D9\u5370\u6807\u8BB0\u662F uniuqe symbol\uFF0C\u56E0\u4E3A\u8FD9\u662F TS \u4E2D\u4E24\u4E2A\u771F\u6B63\u610F\u4E49\u4E0A\u662F\u540D\u4E49\u7C7B\u578B\u7684\u7C7B\u578B\u4E4B\u4E00\uFF08\u53E6\u4E00\u4E2A\u662F enum)\u3002\u5F53\u7136\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5176\u5B83\u70D9\u5370\uFF0C\u4FDD\u8981\u80FD\u4FDD\u8BC1\u70D9\u5370\u552F\u4E00\u6027\u5373\u53EF\u3002</span>
<span class="token keyword">type</span> <span class="token class-name">UserID</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token keyword">readonly</span> __brand<span class="token operator">:</span> unique <span class="token builtin">symbol</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">OrderID</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token keyword">readonly</span> __brand<span class="token operator">:</span> unique <span class="token builtin">symbol</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">CompanyID</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token keyword">readonly</span> __brand<span class="token operator">:</span> unique <span class="token builtin">symbol</span><span class="token punctuation">}</span>

<span class="token comment">// \u7136\u540E\uFF0C\u9700\u8981\u627E\u5230\u4E00\u79CD\u521B\u5EFA\u4E0A\u8FF0\u540D\u79F0\u7C7B\u578B\u503C\u7684\u65B9\u6CD5\uFF0C\u8FD9\u91CC\u4F7F\u7528\u4F34\u751F\u5BF9\u8C61\u6A21\u5F0F\u4E3A\u6BCF\u4E2A\u5E26\u70D9\u5370\u7684\u7C7B\u578B\u58F0\u660E\u4E00\u4E2A\u540C\u540D\u7684\u5DE5\u5382\u51FD\u6570\uFF0C\u7528\u6765\u521B\u5EFA\u5BF9\u5E94\u7C7B\u578B\u503C</span>
<span class="token comment">// \u7B26\u5408 string \u548C { readonly __brand: unique symbol} \u5E76\u96C6\u503C\u4E0D\u53EF\u80FD\u5B58\u5728\uFF0C\u6240\u4EE5\u53EA\u80FD\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\uFF08as \u8FD0\u7B97\u7B26\uFF09\uFF0C\u4EBA\u4E3A\u6307\u5B9A\u67D0\u4E2A\u503C\u7684\u7C7B\u578B\u4E3A\u5E26\u70D9\u5370\u7684\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">UserID</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> id <span class="token keyword">as</span> UserID
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">OrderID</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> id <span class="token keyword">as</span> OrderID
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">CompanyID</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> id <span class="token keyword">as</span> CompanyID
<span class="token punctuation">}</span>

<span class="token comment">// \u6700\u540E\u4F7F\u7528\u5BF9\u5E94\u7C7B\u578B\u7684\u5DE5\u5382\u51FD\u6570\u751F\u6210\u503C</span>
<span class="token keyword">let</span> userId <span class="token operator">=</span> <span class="token function">UserID</span><span class="token punctuation">(</span><span class="token string">&#39;d23xdf&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token function">OrderID</span><span class="token punctuation">(</span><span class="token string">&#39;dfsfdf&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;sdfsdf&#39;</span>

<span class="token keyword">function</span> <span class="token function">queryUserInfo</span><span class="token punctuation">(</span>id<span class="token operator">:</span> UserID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// do something</span>
<span class="token punctuation">}</span>

<span class="token function">queryUserInfo</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>
<span class="token function">queryUserInfo</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span>  <span class="token comment">// Error TS2345: Type &#39;OrderID&#39; is not assignable to type &#39;{ readonly __brand: unique symbol; }&#39;.</span>
<span class="token function">queryUserInfo</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>      <span class="token comment">// Error TS2345: Argument of type &#39;string&#39; is not assignable to parameter of type &#39;UserID&#39;.</span>
</code></pre></div><ol start="2"><li>\u4F7F\u7528\u7279\u5B9A\u5B57\u7B26\u4E32\u6253\u70D9\u5370\uFF0C\u5E76\u58F0\u660E\u4E00\u4E2A\u751F\u6210\u6A21\u62DF\u540D\u4E49\u7C7B\u578B\u7684\u5DE5\u5177\u7C7B\u578B</li></ol><p>\u8FD9\u79CD\u65B9\u5F0F\u4E0E\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B\u5F02\u66F2\u540C\u5DE5\uFF0C\u4F7F\u7528\u4E00\u4E2A\u552F\u4E00\u6027\u7684\u5B57\u7B26\u4E32\u5B57\u91CF\u9762\u7C7B\u578B\u6A21\u62DF\u540D\u4E49\u7C7B\u578B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">NominalType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> flag<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token keyword">readonly</span> __brand<span class="token operator">:</span> flag<span class="token punctuation">}</span> <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u751F\u6210\u6A21\u62DF\u540D\u4E49\u7C7B\u578B\u7684\u5DE5\u5177\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">UserID</span> <span class="token operator">=</span> NominalType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token string">&#39;USER_ID&#39;</span><span class="token operator">&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">OrderID</span> <span class="token operator">=</span> NominalType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token string">&#39;ORDER_ID&#39;</span><span class="token operator">&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">CompanyID</span> <span class="token operator">=</span> NominalType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token string">&#39;COMPANY_ID&#39;</span><span class="token operator">&gt;</span>
<span class="token keyword">function</span> <span class="token function">queryUserInfo</span><span class="token punctuation">(</span>id<span class="token operator">:</span> UserID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// do something</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> userId <span class="token operator">=</span> <span class="token string">&#39;d23xdf&#39;</span> <span class="token keyword">as</span> UserID
<span class="token keyword">let</span> orderId <span class="token operator">=</span> <span class="token string">&#39;dfsfdf&#39;</span> <span class="token keyword">as</span> OrderID
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;sdfsdf&#39;</span>
<span class="token function">queryUserInfo</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>
<span class="token function">queryUserInfo</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span> <span class="token comment">// Error TS2345: Type &#39;OrderID&#39; is not assignable to type &#39;{ readonly __brand: &quot;USER_ID&quot;; }&#39;.</span>
<span class="token function">queryUserInfo</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>     <span class="token comment">// Error TS2345: Argument of type &#39;string&#39; is not assignable to parameter of type &#39;UserID&#39;.</span>
</code></pre></div><h3 id="\u7C7B\u578B\u65AD\u8A00-as" tabindex="-1">\u7C7B\u578B\u65AD\u8A00 <code>as</code> <a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00-as" aria-hidden="true">#</a></h3><p>\u6709\u65F6\uFF0C\u6211\u4EEC\u53EF\u80FD\u6CA1\u6709\u8DB3\u591F\u7684\u65F6\u95F4\u628A\u6240\u6709\u7C7B\u578B\u90FD\u89C4\u5212\u597D\uFF0C\u7279\u522B\u662F\u65E7 JS \u9879\u76EE\u8FC1\u79FB\u6210 TS \u9879\u76EE\u65F6\uFF0C\u4E5F\u6709\u65F6\u53EF\u80FD TS \u7C7B\u578B\u7EC6\u5316\u80FD\u529B\u4E0D\u8DB3\u4EE5\u63A8\u5BFC\u51FA\u6B63\u786E\u7C7B\u578B\u65F6\uFF0C\u5C31\u9700\u8981\u6211\u4EEC\u624B\u52A8\u660E\u786E\u7C7B\u578B\uFF0C\u5C31\u597D\u50CF\u6211\u4EEC\u4E3B\u52A8\u544A\u8BC9 TS\uFF1A&quot;\u6211\u6BD4\u4F60\u66F4\u6E05\u695A\uFF0C\u786E\u5B9A\u6B64\u5904\u662F\u4EC0\u4E48\u7C7B\u578B&quot;\u3002</p><p>\u7C7B\u578B\u65AD\u8A00\u7684\u53E5\u6CD5\uFF0C\u4F7F\u7528 <code>as</code> \u8FD0\u7B97\u7B26\uFF1A<code>value as T</code>\u3002</p><blockquote><p>\u7C7B\u578B\u65AD\u8A00\u8FD8\u6709\u4E00\u79CD\u65E7\u53E5\u6CD5\uFF1A\u5C16\u62EC\u53F7\u53E5\u6CD5 <code>&lt;T&gt;value</code>\uFF0C\u56E0\u4E3A\u5BB9\u6613\u4E0E TSX \u53E5\u6CD5\u51B2\u7A81\uFF0C\u6240\u4EE5\u5EFA\u8BAE\u4F18\u5148\u4F7F\u7528 as \u53E5\u6CD5\uFF0C\u8BED\u610F\u66F4\u660E\u786E\u3002 \u5728 tslint \u4E2D\u914D\u7F6E no-angle-bracket-type-assertion \u89C4\u5219\uFF0C\u5F3A\u5236\u8981\u6C42\u7C7B\u578B\u65AD\u8A00\u4F7F\u7528 as \u53E5\u6CD5\u3002</p></blockquote><div class="language-ts"><pre><code><span class="token keyword">const</span> data<span class="token operator">:</span> object <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
data<span class="token punctuation">.</span>length <span class="token comment">// Error TS2339: Property &#39;length&#39; does not exist on type &#39;object&#39;.</span>
<span class="token punctuation">(</span>data <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length
</code></pre></div><ul><li>\u5728\u7B2C\u4E00\u884C\u4E2D\uFF0C\u6211\u4EEC\u628A array \u7684\u7C7B\u578B\u663E\u793A\u6CE8\u89E3\u4E3A object\u3002</li><li>\u5728\u7B2C\u4E8C\u884C\u4E2D\uFF0C\u6211\u4EEC\u770B\u5230\u6B64\u7C7B\u578B\u4E0D\u5141\u8BB8\u8BBF\u95EE\u4EFB\u4F55\u5C5E\u6027\u3002</li><li>\u5728\u7B2C\u4E09\u884C\u4E2D\uFF0C\u6211\u4EEC\u7528\u7C7B\u578B\u65AD\u8A00(\u8FD0\u7B97\u7B26 as)\u544A\u8BC9 TS \u786E\u5B9A data \u662F\u4E00\u4E2Aarray\u3002\u73B0\u5728\u5C31\u53EF\u4EE5\u8BBF\u95EE\u5C5E\u6027 .length \u4E86\u3002</li></ul><p>\u7C7B\u578B\u65AD\u8A00\u4E5F\u6709\u4E00\u5B9A\u7684\u9650\u5236\uFF0C\u5E76\u4E0D\u662F\u4EFB\u4F55\u4E00\u4E2A\u7C7B\u578B\u90FD\u53EF\u4EE5\u88AB\u65AD\u8A00\u4E3A\u4EFB\u4F55\u53E6\u4E00\u4E2A\u7C7B\u578B\u3002</p><div class="language-ts"><pre><code><span class="token comment">/**
 * \u6BD4\u5982 string \u7C7B\u578B\u4E5F\u6709 length \u5C5E\u6027\uFF0C\u4F46\u662F\u5982\u679C\u628A\u58F0\u660E\u4E3A object \u7C7B\u578B\u7684 data \u65AD\u8A00\u4E3A string\uFF0C\u4F1A\u62A5\u9519
 * Error TS2352: Conversion of type &#39;object&#39; to type &#39;string&#39; may be a mistake because neither type sufficiently overlaps with the other. 
 *               If this was intentional, convert the expression to &#39;unknown&#39; first.
 *               \u5C06\u7C7B\u578B&#39;object&#39;\u8F6C\u6362\u4E3A\u7C7B\u578B&#39;string&#39;\u53EF\u80FD\u662F\u4E00\u4E2A\u9519\u8BEF\uFF0C\u56E0\u4E3A\u8FD9\u4E24\u79CD\u7C7B\u578B\u90FD\u4E0D\u80FD\u4E0E\u53E6\u4E00\u79CD\u7C7B\u578B\u5145\u5206\u91CD\u53E0\u3002
 *               \u5982\u679C\u8FD9\u662F\u6709\u610F\u7684\uFF0C\u9996\u5148\u5C06\u8868\u8FBE\u5F0F\u8F6C\u6362\u4E3A\u201Cunknown\u201D\u3002
 */</span>
<span class="token punctuation">(</span>data <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token comment">// </span>
</code></pre></div><p>\u7C7B\u578B\u65AD\u8A00\u7684\u9650\u5236\uFF1A<strong>\u53EA\u80FD\u65AD\u8A00\u4E00\u4E2A\u7C7B\u578B\u662F\u81EA\u8EAB\u7684\u8D85\u7C7B\u578B\u6216\u5B50\u7C7B\u578B</strong>\u3002\u5373\u5982\u679C <code>A &lt;: B &lt;: C</code>\uFF0C\u90A3\u4E48\u53EF\u4EE5\u65AD\u8A00 B \u662F A\uFF0C\u6216\u8005 B \u662F C\u3002</p><p>\u57FA\u4E8E\u6B64\u9650\u5236\uFF0C\u53EF\u4EE5\u786E\u5B9A\u7C7B\u578B\u65AD\u8A00\u53EF\u4EE5\u5E94\u7528\u5230\uFF1A</p><ul><li>\u8054\u5408\u7C7B\u578B\u53EF\u4EE5\u88AB\u65AD\u8A00\u4E3A\u5176\u4E2D\u4E00\u4E2A\u7C7B\u578B</li><li>\u679A\u4E3E\u7C7B\u578B\u53EF\u4EE5\u88AB\u65AD\u8A00\u4E3A\u5176\u4E2D\u4E00\u4E2A\u6210\u5458\u7C7B\u578B</li><li>\u4EFB\u4F55\u7C7B\u578B\u90FD\u53EF\u4EE5\u88AB\u65AD\u8A00\u4E3A any\uFF0Cany \u53EF\u4EE5\u88AB\u65AD\u8A00\u4E3A\u4EFB\u4F55\u7C7B\u578B\u3002\u56E0\u4E3A any \u65E2\u662F\u4E00\u4E2A <code>top type</code>\uFF0C\u4E5F\u662F\u4E00\u4E2A <code>bottom type</code>\uFF0C\u5B83\u6240\u6709\u7C7B\u578B\u7684\u8D85\u7C7B\u578B\uFF0C\u4E5F\u662F\u6240\u6709\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\u3002</li></ul><p>\u4E0A\u8FF0\u4F8B\u5B50\u4E2Dobject \u7C7B\u578B\uFF0C\u53EA\u8868\u793A\u53D8\u91CF\u662F\u4E00\u4E2A JS \u5F15\u7528\u7C7B\u578B\u5BF9\u8C61\uFF08\u5982 object/array/function\u7B49\uFF09\uFF0C\u800C\u4E0D\u662F\u57FA\u7840\u7C7B\u578B\uFF08\u5982 null/number\u7B49\uFF09\u3002\u5E76\u4E14\u8BE5\u5BF9\u8C61\u4E0D\u80FD\u4F5C\u4EFB\u4F55\u64CD\u4F5C\u3002\u5C06 object \u65AD\u8A00\u6210 string \u62A5\u9519\uFF0C\u56E0\u4E3A\u4E24\u79CD\u7C7B\u578B\u5E76\u4E0D\u517C\u5BB9\u3002</p><blockquote><p>object / Object / {} / \u5BF9\u8C61\u5B57\u9762\u91CF\u7C7B\u578B\u8BE6\u89E3\u89C1 <a href="./1-type-declaration-1.1-basic-type.html">1-type-declaration-1.1-basic-type.md</a></p></blockquote><h3 id="\u975E\u7A7A\u65AD\u8A00-\u540E\u7F00-value" tabindex="-1">\u975E\u7A7A\u65AD\u8A00 <code>\u540E\u7F00 value!</code> <a class="header-anchor" href="#\u975E\u7A7A\u65AD\u8A00-\u540E\u7F00-value" aria-hidden="true">#</a></h3><p>\u5305\u542B undefined \u6216 null \u7C7B\u578B\u7684\u8054\u5408\u7C7B\u578B\uFF0C\u5219\u975E\u7A7A\u65AD\u8A00\u8FD0\u7B97\u7B26(non-nullish \u8FD0\u7B97\u7B26)\u5C06\u4ECE\u8054\u5408\u4E2D\u5220\u9664 nudefined / null\u7C7B\u578B\u3002\u5C31\u597D\u6BD4\u544A\u8BC9 TypeScript\uFF1A\u201C\u8FD9\u4E2A\u503C\u4E0D\u4F1A\u662F undefined \u6216 null\u3002\u201D</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">getValue</span><span class="token punctuation">(</span>strMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>strMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> value <span class="token operator">=</span> strMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
		value<span class="token punctuation">.</span>length <span class="token comment">// Object is possibly &#39;undefined&#39;.</span>
		<span class="token keyword">return</span> value
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u4E0A\u4F8B\u4E2D\uFF0C\u5728 map \u4E2D get \u65B9\u6CD5\u6CA1\u6709\u627E\u5230\u65F6\u4F1A\u8FD4\u56DE undefined, \u6240\u4EE5 TS \u4F1A\u63A8\u65AD\u8FD4\u56DE\u503C value \u7C7B\u578B\u662F <code>string | undefined</code> \u7684\u8054\u5408\u7C7B\u578B\uFF0C\u6240\u4EE5\u5728\u83B7\u53D6 <code>value.length</code> \u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3A undefined \u7C7B\u578B\u5E76\u4E0D\u4F1A\u6709 lenght \u5C5E\u6027\u3002</p><p>\u4F46\u662F\u6211\u4EEC\u4E0A\u9762\u5DF2\u7ECF\u901A\u8FC7 map \u7684 has \u65B9\u6CD5\u5224\u65AD\u4E3A\u771F\u4E86\uFF0C\u6240\u4EE5 value \u7684\u7ED3\u679C\u7EDD\u4E0D\u4F1A\u662F undefined\u3002\u56E0\u4E3A\u8FD9\u4E2A if \u6D41\u7A0B\u8BED\u53E5 TS \u65E0\u6CD5\u901A\u8FC7 map \u7684 has \u65B9\u6CD5\u7EC6\u5316\u7C7B\u578B\uFF0C\u6211\u4EEC\u53EA\u80FD\u624B\u52A8\u660E\u786E\u7C7B\u578B\uFF0C\u6B64\u65F6\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>as</code> \u8FD0\u7B97\u7B26\uFF0C\u50CF\u8FD9\u6837</p><div class="language-ts"><pre><code><span class="token keyword">const</span> value <span class="token operator">=</span> strMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">string</span>
</code></pre></div><p>\u4F46\u662F\u5BF9\u4E8E\u6392\u9664 <code>undefined / null</code> \u7C7B\u578B\uFF0CTS \u63D0\u4F9B\u4E86\u4E13\u95E8\u7684\u53E5\u6CD5\uFF0C\u975E\u7A7A\u65AD\u8A00\u8FD0\u7B97\u7B26(non-nullish \u8FD0\u7B97\u7B26)\uFF0C\u540E\u7F00 <code>value!</code> \u8868\u793A\u3002</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">getValue</span><span class="token punctuation">(</span>strMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>strMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> value <span class="token operator">=</span> strMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">!</span>  <span class="token comment">// \u8FDB\u884C\u975E\u7A7A\u65AD\u8A00</span>
		value<span class="token punctuation">.</span>length <span class="token comment">// \u6B63\u5E38</span>
		<span class="token keyword">return</span> value
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u660E\u786E\u8D4B\u503C\u65AD\u8A00-\u524D\u7F00-value-t" tabindex="-1">\u660E\u786E\u8D4B\u503C\u65AD\u8A00 <code>\u524D\u7F00 value!: T</code> <a class="header-anchor" href="#\u660E\u786E\u8D4B\u503C\u65AD\u8A00-\u524D\u7F00-value-t" aria-hidden="true">#</a></h3><p>TS \u7684\u7C7B\u578B\u68C0\u67E5\u4E2D\u6709\u4E00\u6761\u68C0\u67E5\u89C4\u5219\uFF1A\u660E\u786E\u8D4B\u503C\u68C0\u67E5\uFF0C\u5373\u5982\u679C\u5148\u58F0\u660E\u53D8\u91CF\uFF0C\u540E\u521D\u59CB\u5316\uFF0C\u90A3TS\u5C06\u4F1A\u786E\u4FDD\u5728\u4F7F\u7528\u8BE5\u53D8\u91CF\u65F6\u68C0\u67E5\u8BE5\u53D8\u91CF\u662F\u5426\u5DF2\u7ECF\u8D4B\u503C\u3002[P38]</p><blockquote><p>\u7C7B\u578B\u68C0\u67E5\u5305\u62EC\uFF1A\u660E\u786E\u8D4B\u503C\u68C0\u67E5\u3001\u53EF\u8D4B\u503C\u6027\u68C0\u67E5\u3001\u591A\u4F59\u5C5E\u6027\u68C0\u67E5\u3001\u5168\u9762\u6027\u68C0\u67E5\u3002\u5177\u4F53\u67E5\u770B<a href="./3-type-checking.html">\u7C7B\u578B\u68C0\u67E5</a></p></blockquote><div class="language-ts"><pre><code><span class="token keyword">let</span> useId<span class="token operator">:</span> <span class="token builtin">string</span>
useId<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Error TS2454: Variable &#39;useId&#39; is used before being assigned.</span>
</code></pre></div><p>\u8FD9\u6837\u5F88\u597D\uFF0C\u80FD\u8BA9\u6211\u4EEC\u907F\u514D\u8FD0\u884C\u65F6\u624D\u53D1\u73B0\u7684\u9519\u8BEF\u3002</p><p>\u4F46\u662F\u5982\u679C\u6211\u4EEC\u80FD\u786E\u4FDD\u662F\u5728\u7528\u6237\u5DF2\u7ECF\u767B\u5F55\u7684\u60C5\u51B5\u4E0B\uFF0C\u901A\u8FC7\u672C\u5730\u5F3A\u7F13\u5B58\u67E5\u627E\u5230\u7528\u6237ID\uFF0C\u56E0\u6B64 getCacheUser \u51FD\u6570\u8C03\u7528\u540E\uFF0CuserId \u80AF\u5B9A\u5DF2\u7ECF\u6709\u503C\u4E86\u3002\u4F46\u662F TS \u65E0\u6CD5\u901A\u8FC7\u9759\u6001\u7C7B\u578B\u68C0\u67E5\u77E5\u9053\u8FD9\u70B9\uFF0C\u56E0\u4E3A\u4E0A\u8FF0\u903B\u8F91\u53EA\u6709\u5728\u8FD0\u884C\u65F6\u624D\u77E5\u6653\uFF0C\u800C TS \u7684\u7C7B\u578B\u7CFB\u7EDF\u662F\u5728\u7F16\u8BD1\u65F6\u624D\u751F\u6548\u3002\u6240\u4EE5\u4E0A\u8FF0\u62A5\u9519\u4ECD\u7136\u5B58\u5728\u3002</p><div class="language-ts"><pre><code><span class="token keyword">let</span> userId<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token function">getCacheUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
userId<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">getCacheUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	userId <span class="token operator">=</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;userID&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6B64\u65F6\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u660E\u786E\u8D4B\u503C\u65AD\u8A00\u544A\u8BC9 TS\uFF0C\u5728\u8BFB\u53D6 userId \u65F6\uFF0C\u80AF\u5B9A\u5DF2\u7ECF\u4E3A\u5B83\u8D4B\u503C\u4E86\u3002\u660E\u786E\u8D4B\u503C\u65AD\u8A00\u7684\u53E5\u6CD5\uFF1A<code>value:T</code></p><div class="language-ts"><pre><code><span class="token keyword">let</span> userId<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">string</span>  <span class="token comment">// \u660E\u786E\u8D4B\u503C\u65AD\u8A00\uFF0C\u6CE8\u610F\u611F\u53F9\u53F7\u7684\u4F4D\u7F6E</span>
<span class="token function">getCacheUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
userId<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">getCacheUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	userId <span class="token operator">=</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;userID&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span> <span class="token comment">// \u975E\u7A7A\u65AD\u8A00\uFF0C\u56E0\u4E3A getITem \u65B9\u6CD5\u83B7\u53D6\u4E0D\u5230\u503C\u65F6\u8FD4\u56DE null</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53E6\u4E00\u4E2A\u5F88\u597D\u7684\u4F8B\u5B50</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Position</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u8FD9\u91CC x , y \u4E0D\u52A0\u660E\u786E\u8D4B\u503C\u65AD\u8A00\uFF0C\u4F1A\u62A5 Error TS2564: Property &#39;x&#39; has no initializer and is not definitely assigned in the constructor.</span>
	x<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">number</span>
	y<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">number</span>
	<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this.x = 0</span>
    <span class="token comment">// this.y = 0</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token function">initParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u65AD\u8A00\u603B\u7ED3" tabindex="-1">\u65AD\u8A00\u603B\u7ED3 <a class="header-anchor" href="#\u65AD\u8A00\u603B\u7ED3" aria-hidden="true">#</a></h3><p>\u65AD\u8A00\u76F8\u5173\u7684\u8FD0\u7B97\u7B26\uFF1A</p><ul><li><code>is</code>\u8FD0\u7B97\u7B26\uFF1A\u81EA\u5B9A\u4E49\u7C7B\u578B\u5B88\u536B</li><li><code>as</code>\u8FD0\u7B97\u7B26\uFF1A\u624B\u52A8\u660E\u786E\u7C7B\u578B</li><li>\u540E\u7F00<code>!</code>\u8FD0\u7B97\u7B26\uFF1A<code>value!</code>\uFF0C\u4E0D\u662F <code>null / undefined</code> \u7C7B\u578B\u7684\u975E\u7A7A\u65AD\u8A00</li><li>\u524D\u7F00<code>!</code>\u8FD0\u7B97\u7B26: <code>value!:T</code>\uFF0C\u660E\u786E\u8D4B\u503C\u65AD\u8A00</li></ul><p>\u4E0D\u7BA1\u662F\u54EA\u79CD\u65AD\u8A00\u662F\u4E0D\u5F97\u5DF2\u7684\u65B9\u6CD5\uFF0C\u5E94\u5C3D\u53EF\u80FD\u7684\u907F\u514D\u4F7F\u7528\u3002\u4ED6\u4EEC\u662F\u5C4F\u853D\u4E86 TS \u9759\u6001\u7C7B\u578B\u7CFB\u7EDF\u4E3A\u6211\u4EEC\u63D0\u4F9B\u7684\u7C7B\u578B\u5B89\u5168\u9632\u62A4\u3002\u5982\u679C\u5927\u91CF\u4F9D\u8D56\u8FD9\u4E9B\u7279\u6027\uFF0C\u6709\u5FC5\u8981\u91CD\u6784\u4F60\u7684\u4EE3\u7801\u3002****</p>`,112),e=[o];function c(l,k,u,r,i,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{y as __pageData,g as default};
